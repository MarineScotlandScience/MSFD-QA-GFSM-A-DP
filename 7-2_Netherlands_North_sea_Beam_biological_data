###################
# Version Control #
###################
# R version 3.2.2 (2015-08-14): Fire Safety 
# platform       x86_64-w64-mingw32 (64-bit)
###############
# Script Info #
###############
# Script 7.2
# We now correct the biological data for each of the surveys individually
# I have done as much as possible on a global bases and now must work on a
# survey by survey bases do do Knn species and length assignments

# AUTHOR: Meadhbh Moriarty, 2016
# REVIEWED BY: 
# 1. BTS
beam<-subset(alldata1, Survey=="BTS",)
lofa_beam<-subset(beam, is.na(estrank),)
levels(as.factor(lofa_beam$new_valid_name))
# break this down by country
lofa_beam_net<-subset(lofa_beam, Country=="NED",)
levels(as.factor(lofa_beam_net$new_valid_name))
lofa_beam_eng<-subset(lofa_beam, Country=="ENG",)
levels(as.factor(lofa_beam_eng$new_valid_name))
lofa_beam_ger<-subset(lofa_beam, Country=="GFR",)
levels(as.factor(lofa_beam_ger$new_valid_name))
# Next is Netherlands
net<-subset(alldata1, Survey=="BTS"&Country=="NED",)
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))
# Use Knn to resove the following 
#Ammodytidae 
#Callionymidae     
#Mugilidae      
#Mustelus          
#Raja 
#Syngnathus  
#Syngnathidae
################################
find<-subset(net, family=="Syngnathidae",)

png(filename="len_dist_pipefish_bts_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefish (BTS_NET)")+
  theme_classic()

dev.off()
#################
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Entelurusaequoreus", "Syngnathusacus", "Syngnathusrostellatus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
358/10
# training data
358-36
train<- knn_dat[1:322, 3:8]
test<- knn_dat[323:358,3:8]
train_target<- knn_dat[1:322,2 ]
test_target<- knn_dat[323:358,2 ]
require(class)
sqrt(358)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=19)

t1<-(table(droplevels(test_target, m1)))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, estsciname=="Syngnathidae" &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:358, 3:8]
test<- knn_dat_target[1:39,3:8]
train_target<- knn_dat[1:358,2 ]
test_target<- knn_dat_target[1:39,2 ]

m2<-knn(train, test, 
        cl=train_target, k=10)
summary(droplevels(m2))

t2<-(table(test_target, m2))
t2
knn_dat_target$m2<-m2

# Knn predicts a mix of the three species at different stations
# all will be reassigned to species using kNN
net$estrank[net$new_valid_name=="Syngnathidae"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Syngnathidae"]<-"KNN_spp_assignment"
# start with Entelurusaequoreus
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Entelurusaequoreus"]
net$estsciname[net$new_valid_name=="Syngnathidae" 
               & net$New_UniqueID%in%list]<-"Entelurusaequoreus"
net$estAphia_Code[net$estsciname=="Entelurusaequoreus"]<-127379 
# next Syngnathusacus
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusacus"]
net$estsciname[net$new_valid_name=="Syngnathidae" 
               & net$New_UniqueID%in%list]<-"Syngnathusacus"
net$estAphia_Code[net$estsciname=="Syngnathusacus"]<-127387 
# last Syngnathusrostellatus
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusrostellatus"]
net$estsciname[net$new_valid_name=="Syngnathidae" 
               & net$New_UniqueID%in%list]<-"Syngnathusrostellatus"
net$estAphia_Code[net$estsciname=="Syngnathusrostellatus"]<-127389 

# Knn predicts Gaidropsarusvulgaris 
net$estsciname[net$new_valid_name=="Syngnathus"]<-"Syngnathusrostellatus"
ger$estrank[ger$new_valid_name=="Syngnathus"]<-"Species"

ger$estAphia_Code[ger$estsciname=="Syngnathusrostellatus"]<-127389
ger$SpeciesQualityCode[ger$new_valid_name=="Syngnathus"]<-"Genus_to_spp"
##########
# Use Knn to resove
# Syngnathus 
################################
find<-subset(net, genus=="Syngnathus",)

png(filename="len_dist_pipefish1_bts_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefish (BTS_NET)")+
  theme_classic()

dev.off()
#################
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Syngnathusacus", "Syngnathusrostellatus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
185/10
# training data
185-19
train<- knn_dat[1:166, 3:8]
test<- knn_dat[167:185,3:8]
train_target<- knn_dat[1:166,2 ]
test_target<- knn_dat[167:185,2 ]
require(class)
sqrt(185)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=14)

t1<-(table(droplevels(test_target, m1)))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, estsciname=="Syngnathus" &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:185, 3:8]
test<- knn_dat_target[1:26,3:8]
train_target<- knn_dat[1:185,2 ]
test_target<- knn_dat_target[1:26,2 ]

m2<-knn(train, test, 
        cl=train_target, k=14)
summary(droplevels(m2))

t2<-(table(test_target, m2))
t2
knn_dat_target$m2<-m2

# Knn predicts a mix of the three species at different stations
# all will be reassigned to species using kNN
net$estrank[net$new_valid_name=="Syngnathus"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Syngnathus"]<-"KNN_spp_assignment"

# all knn assignments are Syngnathusrostellatus
net$estsciname[net$new_valid_name=="Syngnathus" ]<-"Syngnathusrostellatus"
net$estAphia_Code[net$estsciname=="Syngnathusrostellatus"]<-127389 
####################################
# Use Knn to resove "Ammodytidae"     
# Sandeels
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))
find<-subset(net, family=="Ammodytidae",)
################################
png(filename="net_beam_len_dist_Sandeel1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sandeel (net)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("estsciname", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("estsciname", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="net_beam_len_dist_Sandeel2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=estsciname, group=estsciname,
                    fill=estsciname)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sandeel (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="net_beam_len_dist_Sandeel3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="net_beam_len_dist_Sandeel4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) + 
  geom_density()  + 
  facet_grid(estsciname ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
# New BaseMap
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue")
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$estsciname)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Ammodytes", "Hyperoplus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
summary(knn_dat)
2822/10
# training data
2822-282
train<- knn_dat[1:2540, 3:8]
test<- knn_dat[2541:2822,3:8]
train_target<- knn_dat[1:2540,2 ]
test_target<- knn_dat[2541:2822,2 ]
require(class)
sqrt(2822)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=53)
t1<-(table(droplevels(test_target, m1)))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:2822, 3:8]
test<- knn_dat_target[1:421,3:8]
train_target<- knn_dat[1:2822,2 ]
test_target<- knn_dat_target[1:421,2 ]
m2<-knn(train, test, cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2 Ammodytes and 419 Hyperoplus
net$estrank[net$new_valid_name=="Ammodytidae"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Ammodytidae"]<-"KNN_spp_assignment"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Hyperoplus"]
net$estsciname[net$new_valid_name=="Ammodytidae" 
               & net$New_UniqueID%in%list]<-"Hyperoplus"
net$estAphia_Code[net$estsciname=="Hyperoplus"]<-125911 

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Ammodytes"]
net$estsciname[net$new_valid_name=="Ammodytidae" 
               & net$New_UniqueID%in%list]<-"Ammodytes"
net$estAphia_Code[net$estsciname=="Ammodytes"]<-125909  
####################################
# Use Knn to resove "Callionymidae"     
# dragonets
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))
find<-subset(net, family=="Callionymidae",)
################################
png(filename="net_beam_len_dist_dragonets1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonets (net)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("estsciname", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("estsciname", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="net_beam_len_dist_dragonets2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=estsciname, group=estsciname,
                    fill=estsciname)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of dragonets (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="net_beam_len_dist_dragonets3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="net_beam_len_dist_dragonets4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) + 
  geom_density()  + 
  facet_grid(estsciname ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
# New BaseMap
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue")
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$estsciname)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Callionymuslyra", "Callionymusmaculatus", "Callionymusreticulatus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
13620/10
# training data
13620-1362
train<- knn_dat[1:12258, 3:8]
test<- knn_dat[12259:13620,3:8]
train_target<- knn_dat[1:12258,2 ]
test_target<- knn_dat[12259:13620,2 ]
require(class)
sqrt(13620)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=117)
t1<-(table(droplevels(test_target, m1)))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:13620, 3:8]
test<- knn_dat_target[1:2568,3:8]
train_target<- knn_dat[1:13620,2 ]
test_target<- knn_dat_target[1:2568,2 ]
m2<-knn(train, test, cl=train_target, k=117)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2568 Callionymuslyra
net$estrank[net$new_valid_name=="Callionymidae"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Callionymidae"]<-"KNN_spp_assignment"
net$estsciname[net$new_valid_name=="Callionymidae"]<-"Callionymuslyra"
net$estAphia_Code[net$estsciname=="Callionymuslyra"]<-126792 
####################################
# Use Knn to resove "Mugilidae"     
# mullet
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))
find<-subset(net, family=="Mugilidae",)
################################
png(filename="net_beam_len_dist_mullet1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of mullet (net)")+
  theme_classic()

dev.off()
#################
# only one species in this survey in this family

net$estrank[net$new_valid_name=="Mugilidae"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Mugilidae"]<-"Genus_to_spp"
net$estsciname[net$new_valid_name=="Mugilidae"]<-"Chelonlabrosus"
net$estAphia_Code[net$estsciname=="Callionymuslyra"]<-126977 
####################################
# Use Knn to resove "Raja"     
# Sandeels
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))
find<-subset(net, genus=="Raja",)
################################
png(filename="net_beam_len_dist_ray1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of ray (net)")+
  theme_classic()

dev.off()
#################
summary<-ddply(find,
               c("estsciname", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("estsciname", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="net_beam_len_dist_ray2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=estsciname, group=estsciname,
                    fill=estsciname)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of rays (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="net_beam_len_dist_rays3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="net_beam_len_dist_rays4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) + 
  geom_density()  + 
  facet_grid(estsciname ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
# New BaseMap
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue")
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$estsciname)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Rajabrachyura", "Rajaclavata", "Rajamontagui")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
689/10
# training data
689-69
train<- knn_dat[1:620, 3:8]
test<- knn_dat[621:689,3:8]
train_target<- knn_dat[1:620,2 ]
test_target<- knn_dat[621:689,2 ]
require(class)
sqrt(689)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=26)
t1<-(table(droplevels(test_target, m1)))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, !estsciname%in%list ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:689, 3:6]
test<- knn_dat_target[1:5,3:6]
train_target<- knn_dat[1:689,2 ]
test_target<- knn_dat_target[1:5,2 ]
m2<-knn(train, test, cl=train_target, k=117)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2 Rajaclavata and 3 Rajamontagui
net$estrank[net$new_valid_name=="Raja"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Raja"]<-"KNN_spp_assignment"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajamontagui"]
net$estsciname[net$new_valid_name=="Raja"
               &net$New_UniqueID%in%list]<-"Rajamontagui"
net$estAphia_Code[net$estsciname=="Rajamontagui"]<-105887  
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajaclavata"]
net$estsciname[net$new_valid_name=="Raja"
               &net$New_UniqueID%in%list]<-"Rajaclavata"
net$estAphia_Code[net$estsciname=="Rajaclavata"]<-105883   
################
####################################
# Use Knn to resove "Raja"     
# Sandeels
lofa_net<-subset(net, is.na(estrank),)
summary(as.factor(lofa_net$new_valid_name))

find<-subset(net, genus=="Mustelus",)
################################
png(filename="net_beam_len_dist_smoothhound1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of smoothhound (net)")+
  theme_classic()

dev.off()
#################
summary<-ddply(find,
               c("estsciname", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("estsciname", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="net_beam_len_dist_smoothhound2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=estsciname, group=estsciname,
                    fill=estsciname)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of smoothhound (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="net_beam_len_dist_smoothhound3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="net_beam_len_dist_smoothhound4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) + 
  geom_density()  + 
  facet_grid(estsciname ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
# New BaseMap
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue")
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$estsciname)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Mustelusmustelus", "Mustelusasterias")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
55/10
# training data
55-6
train<- knn_dat[1:49, 3:8]
test<- knn_dat[50:55,3:8]
train_target<- knn_dat[1:49,2 ]
test_target<- knn_dat[50:55,2 ]
require(class)
sqrt(55)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=10)
t1<-(table(droplevels(test_target, m1)))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, !estsciname%in%list ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:55, 3:8]
test<- knn_dat_target[1:25,3:8]
train_target<- knn_dat[1:55,2 ]
test_target<- knn_dat_target[1:25,2 ]
m2<-knn(train, test, cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 6 Mustelusasterias and 19 Mustelusmustelus
net$estrank[net$new_valid_name=="Mustelus"]<-"Species"
net$SpeciesQualityCode[net$new_valid_name=="Mustelus"]<-"KNN_spp_assignment"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Mustelusasterias"]
net$estsciname[net$new_valid_name=="Mustelus"
               &net$New_UniqueID%in%list]<-"Mustelusasterias"
net$estAphia_Code[net$estsciname=="Mustelusasterias"]<-105821   
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Mustelusmustelus"]
net$estsciname[net$new_valid_name=="Mustelus"
               &net$New_UniqueID%in%list]<-"Mustelusmustelus"
net$estAphia_Code[net$estsciname=="Mustelusmustelus"]<-105822    
####################################
# Recheck Lmax with new fishes names 
# Recheck Lmax with new fishes names
testnet<-net
names(maxdata)
testnet$LmaxFB<-NULL
testnet$WoRMSacceptedScientificNa<-NULL
testnet$Aphia_Code<-NULL
testnet<-join(testnet, maxdata, by="estAphia_Code")
test1 <- testnet[ which(testnet$Use_Lenght_cm1 > testnet$LmaxFB*1.1),]
test2 <- testnet[ which(testnet$Use_Lenght_cm1 > testnet$LmaxFB*1.4),]
# no need for concern here!
summary(as.factor(net$SpecVal))
# no need for concern here!
summary(as.factor(net$SpecVal))
# 8 observations have no length measurements - only total number
# 1 observation is Presence / Absence only
# Use a KNN classification to find an approperiate lenght of fish
no_lenght<-subset(net, SpecVal==4,)
summary(as.factor(no_lenght$estsciname))
no_lenght<-subset(net, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))
############
# Need to get lenghts for 
# AAgonuscataphractus   
# Clupeaharengus 
# Engraulisencrasicolus 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for the hooknose
# Agonuscataphractus 
find<-subset(net, estsciname=="Agonuscataphractus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))



png(filename="len_dist_hooknose_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of hooknose (net))")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_hooknose_net2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of hooknose (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_hooknose_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_hooknose_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)

str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
7805/10
# training data
7805-781
train<- knn_dat[1:7024, 3:7]
test<- knn_dat[7025:7805,3:7]
train_target<- knn_dat[1:7024,8 ]
test_target<- knn_dat[7025:7805,8 ]
require(class)
sqrt(7805)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=88)

t1<-(table(test_target, m1))
# 107 fish in that sample
# need to create new data set to complete this
# Agonuscataphractus 1 sample 107 fish counted
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(107,107))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.6039438
dat$year_Norm<-0.7272727
dat$long_Norm<-0.6665648
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2007/3/ISI/4/BT8"
dat$new_valid_name<-"Agonuscataphractus"
head(dat)

knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:7805, 3:7]
test<- knn_dat_target[1:107,3:7]
train_target<- knn_dat[1:7805,8 ]
test_target<- knn_dat_target[1:107,8 ]
m2<-knn(train, test, cl=train_target, k=88)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.0327471194663432*329.8)+.2
# this expanded knn assessment gives 
# 107 fish at 11cm
write.csv(dat, file="KNN_Hooknose_BTS20073ISI4BT8.csv")

net$Use_Lenght_cm1[net$estsciname=="Agonuscataphractus"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2007/3/ISI/4/BT8"]<-11
net$QC_Length[net$estsciname=="Agonuscataphractus"
              &(net$Use_Lenght_cm1==18)
              &net$New_UniqueID=="BTS/2007/3/ISI/4/BT8"]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Agonuscataphractus"
                  &(net$Use_Lenght_cm1==18)
                  &net$New_UniqueID=="BTS/2007/3/ISI/4/BT8"]<-107
# check 
find<-subset(net, net$estsciname=="Agonuscataphractus"
             &net$New_UniqueID=="BTS/2007/3/ISI/4/BT8",)
# all done now with this fish
############
# Need to get lenghts for 
# Clupeaharengus 
# Engraulisencrasicolus 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for the herring
# Clupeaharengus
find<-subset(net, estsciname=="Clupeaharengus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_herring_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herring (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_hooknose_herring2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of herring (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_herring_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_herring_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
512/10
# training data
512-51
train<- knn_dat[1:461, 3:7]
test<- knn_dat[462:512,3:7]
train_target<- knn_dat[1:461,8 ]
test_target<- knn_dat[462:512,8 ]
require(class)
sqrt(512)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=23)
t1<-(table(test_target, m1))
# 128 fish in that sample
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(128,128))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.7475095
dat$year_Norm<-0.6565656
dat$long_Norm<-0.7623897
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2004/3/ISI/34/BT8"
dat$new_valid_name<-"Clupeaharengus"
head(dat)

knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:512, 3:7]
test<- knn_dat_target[1:128,3:7]
train_target<- knn_dat[1:512,8 ]
test_target<- knn_dat_target[1:128,8 ]
m2<-knn(train, test, cl=train_target, k=23)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.0479078229229836*329.8)+.2
# this expanded knn assessment gives 
# 128 fish at 16cm
write.csv(dat, file="KNN_herring_BTS20043ISI34BT8.csv")

net$Use_Lenght_cm1[net$estsciname=="Clupeaharengus"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-16
net$QC_Length[net$estsciname=="Clupeaharengus"
              &(net$Use_Lenght_cm1==16)
              &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Clupeaharengus"
                  &(net$Use_Lenght_cm1==16)
                  &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-107
# check 
find<-subset(net, net$estsciname=="Clupeaharengus"
             &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8",)
# all done now with this fish
############
# Need to get lenghts for 
# Clupeaharengus 
# Engraulisencrasicolus 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for the herring
# Clupeaharengus
find<-subset(net, estsciname=="Clupeaharengus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_herring_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herring (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_hooknose_herring2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of herring (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_herring_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_herring_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
512/10
# training data
512-51
train<- knn_dat[1:461, 3:7]
test<- knn_dat[462:512,3:7]
train_target<- knn_dat[1:461,8 ]
test_target<- knn_dat[462:512,8 ]
require(class)
sqrt(512)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=23)
t1<-(table(test_target, m1))
# 128 fish in that sample
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(128,128))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.7475095
dat$year_Norm<-0.6565656
dat$long_Norm<-0.7623897
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2004/3/ISI/34/BT8"
dat$new_valid_name<-"Clupeaharengus"
head(dat)

knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:512, 3:7]
test<- knn_dat_target[1:128,3:7]
train_target<- knn_dat[1:512,8 ]
test_target<- knn_dat_target[1:128,8 ]
m2<-knn(train, test, cl=train_target, k=23)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.0479078229229836*329.8)+.2
# this expanded knn assessment gives 
# 128 fish at 16cm
write.csv(dat, file="KNN_herring_BTS20043ISI34BT8.csv")

net$Use_Lenght_cm1[net$estsciname=="Clupeaharengus"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-16
net$QC_Length[net$estsciname=="Clupeaharengus"
              &(net$Use_Lenght_cm1==16)
              &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Clupeaharengus"
                  &(net$Use_Lenght_cm1==16)
                  &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-107
# check 
find<-subset(net, net$estsciname=="Clupeaharengus"
             &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8",)
# all done now with this fish
############
# Need to get lenghts for 
## Engraulisencrasicolus 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for Engraulisencrasicolus
find<-subset(net, estsciname=="Engraulisencrasicolus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_anchovy_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of anchovy (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_anchovy2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of anchovy (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_anchovy_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_anchovy_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
9/10
# training data
train<- knn_dat[1:7, 3:7]
test<- knn_dat[8:9,3:7]
train_target<- knn_dat[1:7,8 ]
test_target<- knn_dat[8:9,8 ]
require(class)
sqrt(9)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=7)
t1<-(table(test_target, m1))
# 128 fish in that sample
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)

knn_dat_target<-subset(find, is.na(Use_Lenght_cm1,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:9, 3:7]
test<- knn_dat_target[1:1,3:7]
train_target<- knn_dat[1:9,8 ]
test_target<- knn_dat_target[1:1,8 ]
m2<-knn(train, test, cl=train_target, k=9)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.023650697392359*329.8)+.2
# this expanded knn assessment gives 
# 1 fish at 8cm
net$Use_Lenght_cm1[net$estsciname=="Engraulisencrasicolus"
                   &is.na(net$Use_Lenght_cm1)]<-8
net$QC_Length[net$estsciname=="Engraulisencrasicolus"
              &(net$Use_Lenght_cm1==8)]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Engraulisencrasicolus"
                  &(net$Use_Lenght_cm1==8)]<-1
# check 
find<-subset(net, net$estsciname=="Engraulisencrasicolus",)
####

############
# Need to get lenghts for 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for Stomiasboaboa
find<-subset(net, estsciname=="Stomiasboaboa",)
# only one record of this species in this survey 
lets see about the IBTS NS survey
stomais<-subset(alldata1, genus=="Stomias",)
summary(stomais$Use_Lenght_cm1)
# median length is 18 cm i'll use this 
###################
net$Use_Lenght_cm1[net$estsciname=="Stomiasboaboa"
 &is.na(net$Use_Lenght_cm1)]<-18
 net$QC_Length[net$estsciname=="Stomiasboaboa"
  &(net$Use_Lenght_cm1==8)]<-"Median_Length"
  net$NewHLNoAtLngt[net$estsciname=="Stomiasboaboa"
&(net$Use_Lenght_cm1==8)]<-1
 # check 
 find<-subset(net, net$estsciname=="Engraulisencrasicolus",)
##############
no_lenght<-subset(net, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))

############
# Need to get lenghts for 
# Clupeaharengus 
# Engraulisencrasicolus 
# Gobiidae  
# Scyliorhinuscanicula
# Stomiasboaboa 
##############
## get a lenght for the catshark
# Scyliorhinuscanicula
find<-subset(net, estsciname=="Scyliorhinuscanicula",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_catsharknet1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of catshark (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_catshark2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of catshark (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_catshark_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_catshark_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
1147/10
# training data
1147-115
train<- knn_dat[1:1032, 3:7]
test<- knn_dat[1033:1147,3:7]
train_target<- knn_dat[1:1032,8 ]
test_target<- knn_dat[1033:1147,8 ]
require(class)
sqrt(1147)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=34)
t1<-(table(test_target, m1))
# 128 fish in that sample
# need to create new data set to complete this
# one haul ha 308 (BTS/2000/3/ISI/86/BT8) fish 
# the other haul has 2 (BTS/2009/3/TRI2/17/BT8)
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(308,308))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.6160049
dat$year_Norm<-0.5151515
dat$long_Norm<-0.6176104
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2000/3/ISI/86/BT8"
dat$new_valid_name<-"Scyliorhinuscanicula"
head(dat)
HL_count<-(rand_vect(1,1))
dat1<-as.data.frame(HL_count)
dat1$numbers_Norm<-2/3715
dat1$lat_Norm<-0.8588736
dat1$year_Norm<-0.7878788
dat1$long_Norm<-0.5057186
dat1$q_Norm<-0.6666667
dat1$lenght_Norm<-NA
dat1$New_UniqueID<-"BTS/2009/3/TRI2/17/BT8"
dat1$new_valid_name<-"Scyliorhinuscanicula"
dat2<-rbind(dat1, dat)
knn_dat_target<-subset(dat2, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1147, 3:7]
test<- knn_dat_target[1:309,3:7]
train_target<- knn_dat[1:1147,8 ]
test_target<- knn_dat_target[1:309,8 ]
m2<-knn(train, test, cl=train_target, k=34)
dat2$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.199514857489387 *329.8)+.2
# this expanded knn assessment gives 
write.csv(dat2, file="KNN_catshark_BTS20043ISI34BT8.csv")
find<-subset(net, estsciname=="Scyliorhinuscanicula"
             & is.na(Use_Lenght_cm1)
             & New_UniqueID=="BTS/2000/3/ISI/86/BT8",)
# 33 fish at 27 cm
find$Use_Lenght_cm1<-27
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-33
net<-rbind(net, find)
# 37 fish at 28 cm
find$Use_Lenght_cm1<-28
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-37
net<-rbind(net, find)
# 38 fish at 29 cm
find$Use_Lenght_cm1<-29
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-38
net<-rbind(net, find)
# 31 fish at 30 cm
find$Use_Lenght_cm1<-30
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-31
net<-rbind(net, find)
# 43 fish at 36 cm
find$Use_Lenght_cm1<-36
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-43
net<-rbind(net, find)
# 46 fish at 39 cm
find$Use_Lenght_cm1<-39
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-46
net<-rbind(net, find)
# 39 fish at 40 cm
find$Use_Lenght_cm1<-40
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-39
net<-rbind(net, find)
# 41 fish at 59 cm
net$Use_Lenght_cm1[net$estsciname=="Scyliorhinuscanicula"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"]<-59
net$QC_Length[net$estsciname=="Scyliorhinuscanicula"
              &(net$Use_Lenght_cm1==59)
              &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Scyliorhinuscanicula"
                  &(net$Use_Lenght_cm1==59)
                  &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-41
# 1  fish at 66 cm BTS/2009/3/TRI2/17/BT8
net$Use_Lenght_cm1[net$estsciname=="Scyliorhinuscanicula"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2009/3/TRI2/17/BT8"]<-66
net$QC_Length[net$estsciname=="Scyliorhinuscanicula"
              &(net$Use_Lenght_cm1==66)
              &net$New_UniqueID=="BTS/2009/3/TRI2/17/BT8"]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Scyliorhinuscanicula"
                  &(net$Use_Lenght_cm1==66)
                  &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8"]<-1
# check 
find<-subset(net, net$estsciname=="Clupeaharengus"
             &net$New_UniqueID=="BTS/2004/3/ISI/34/BT8",)
# all done now with this fish

##############
no_lenght<-subset(net, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))

##############
## get a lenght for the Rajaclavata
find<-subset(net, estsciname=="Rajaclavata",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_ray1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of ray (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_ray2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of ray (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_ray_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_ray_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
311/10
# training data
311-31
train<- knn_dat[1:280, 3:7]
test<- knn_dat[281:311,3:7]
train_target<- knn_dat[1:280,8 ]
test_target<- knn_dat[281:311,8 ]
require(class)
sqrt(311)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=18)
t1<-(table(test_target, m1))
# 128 fish in that sample
# need to create new data set to complete this
# one haul ha 308 (BTS/2000/3/ISI/86/BT8) fish 
# the other haul has 2 (BTS/2009/3/TRI2/17/BT8)
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(33,33))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.6160049
dat$year_Norm<-0.5151515
dat$long_Norm<-0.6176104
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2000/3/ISI/86/BT8"
dat$new_valid_name<-"Rajaclavata"
head(dat)
knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:311, 3:7]
test<- knn_dat_target[1:33,3:7]
train_target<- knn_dat[1:311,8 ]
test_target<- knn_dat_target[1:33,8 ]
m2<-knn(train, test, cl=train_target, k=18)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.217707701637356 *329.8)+.2

# this expanded knn assessment gives 
write.csv(dat, file="KNN_rayk_BTS20003ISI86BT8.csv")
find<-subset(net, estsciname=="Rajaclavata"
             & is.na(Use_Lenght_cm1)
             & New_UniqueID=="BTS/2000/3/ISI/86/BT8"
             & SubFactor==9,)
# 13 fish are 39 cm
net$Use_Lenght_cm1[net$estsciname=="Rajaclavata"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
                   & net$SubFactor==9]<-39
net$QC_Length[net$estsciname=="Rajaclavata"
              &is.na(net$Use_Lenght_cm1)
              &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
              & net$SubFactor==9]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Rajaclavata"
                  &is.na(net$Use_Lenght_cm1)
                  &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
                  & net$SubFactor==9]<-13
# 30 fish are 72 cm
net$Use_Lenght_cm1[net$estsciname=="Rajaclavata"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
                   & net$SubFactor==1]<-72
net$QC_Length[net$estsciname=="Rajaclavata"
              &is.na(net$Use_Lenght_cm1)
              &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
              & net$SubFactor==1]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Rajaclavata"
                  &is.na(net$Use_Lenght_cm1)
                  &net$New_UniqueID=="BTS/2000/3/ISI/86/BT8"
                  & net$SubFactor==1]<-30
# all done now with this fish
##############
no_lenght<-subset(net, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))

##############
## get a lenght for the Rajamontagui
find<-subset(net, estsciname=="Rajamontagui",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_raym1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of ray (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_raym2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of ray (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_raym_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_raym_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
362/10
# training data
362-36
train<- knn_dat[1:326, 3:7]
test<- knn_dat[327:362,3:7]
train_target<- knn_dat[1:326,8 ]
test_target<- knn_dat[327:362,8 ]
require(class)
sqrt(362)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=19)
t1<-(table(test_target, m1))

# need to create new data set to complete this
# one haul ha 308 (BTS/2000/3/ISI/86/BT8) fish 
# the other haul has 2 (BTS/2009/3/TRI2/17/BT8)
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(33,33))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.6160049
dat$year_Norm<-0.5151515
dat$long_Norm<-0.6176104
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/1998/3/ISI/10/BT8"
dat$new_valid_name<-"Rajamontagui"
head(dat)
knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:311, 3:7]
test<- knn_dat_target[1:33,3:7]
train_target<- knn_dat[1:311,8 ]
test_target<- knn_dat_target[1:33,8 ]
m2<-knn(train, test, cl=train_target, k=18)
dat$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.0782292298362644 *329.8)+.2

# this expanded knn assessment gives 
write.csv(dat, file="KNN_raymk_BTS20003ISI86BT8.csv")

find<-subset(net, estsciname=="Rajamontagui"
             & is.na(Use_Lenght_cm1)
             & New_UniqueID=="BTS/1998/3/ISI/10/BT8",)
# 5 fish are 20 cm
net$Use_Lenght_cm1[net$estsciname=="Rajamontagui"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
                   & net$SubFactor==32]<-20
net$QC_Length[net$estsciname=="Rajamontagui"
              &is.na(net$Use_Lenght_cm1)
              &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
              & net$SubFactor==32]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Rajamontagui"
                  &is.na(net$Use_Lenght_cm1)
                  &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
                  & net$SubFactor==32]<-5

find<-subset(net, estsciname=="Rajamontagui"
             & is.na(Use_Lenght_cm1)
             & New_UniqueID=="BTS/1998/3/ISI/10/BT8",)
# 2 fish are 21 cm
find$Use_Lenght_cm1<-21
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-2
net<-rbind(net, find)
# 5 fish are 22 cm
find$Use_Lenght_cm1<-22
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-5
net<-rbind(net, find)
# 5 fish are 23 cm
find$Use_Lenght_cm1<-23
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-5
net<-rbind(net, find)
# 1 fish is 24 cm
find$Use_Lenght_cm1<-24
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-1
net<-rbind(net, find)
# 6 fish are 25 cm
find$Use_Lenght_cm1<-25
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-6
net<-rbind(net, find)
# 9 fish are 26 cm
net$Use_Lenght_cm1[net$estsciname=="Rajamontagui"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
                   & net$SubFactor==1]<-26
net$QC_Length[net$estsciname=="Rajamontagui"
              &is.na(net$Use_Lenght_cm1)
              &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
              & net$SubFactor==1]<-"KNN_len_assignment"
net$NewHLNoAtLngt[net$estsciname=="Rajamontagui"
                  &is.na(net$Use_Lenght_cm1)
                  &net$New_UniqueID=="BTS/1998/3/ISI/10/BT8"
                  & net$SubFactor==1]<-9
##############
no_lenght<-subset(net, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))

##############
## get a lenght for the Gobiidae
find<-subset(net, estsciname=="Gobiidae",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_gobies_net1_9-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of gobies (net))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_gobies_net2_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of gobies (net)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_gobies_net3_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_gobies_net4_9-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
877/10
# training data
877-88
train<- knn_dat[1:789, 3:7]
test<- knn_dat[790:877,3:7]
train_target<- knn_dat[1:789,8 ]
test_target<- knn_dat[790:877,8 ]
require(class)
sqrt(877)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=30)
t1<-(table(test_target, m1))

# need to create new data set to complete this
# one haul ha 308 (BTS/2000/3/ISI/86/BT8) fish 
# the other haul has 2 (BTS/2009/3/TRI2/17/BT8)
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(33,33))
dat<-as.data.frame(HL_count)
# first normalize numbers generated

knn_dat_target<-subset(find, is.na(Use_Lenght_cm1), 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:877, 3:6]
test<- knn_dat_target[1:299,3:6]
train_target<- knn_dat[1:877,8 ]
test_target<- knn_dat_target[1:299,8 ]
m2<-knn(train, test, cl=train_target, k=30)
knn_dat_target$lenght_Norm1<-(m2)
summary(droplevels(m2))
(0.0206185567010309 *329.8)+.2

# this expanded knn assessment gives 
write.csv(dat, file="KNN_gobies_Netherlands.csv")
net$QC_Length[net$estsciname=="Gobiidae"
              &is.na(net$Use_Lenght_cm1)]<-"KNN_len_assignment"
# 1 fish is 3cm
list<-knn_dat_target$New_UniqueID[knn_dat_target$lenght_Norm1==0.00848999393571862]

net$Use_Lenght_cm1[net$estsciname=="Gobiidae"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID%in%list]<-3

# 17 fish are 4cm
list<-knn_dat_target$New_UniqueID[knn_dat_target$lenght_Norm1==0.0115221346270467]

net$Use_Lenght_cm1[net$estsciname=="Gobiidae"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID%in%list]<-4
# 47 fist are 5cm

list<-knn_dat_target$New_UniqueID[knn_dat_target$lenght_Norm1==0.0145542753183748]

net$Use_Lenght_cm1[net$estsciname=="Gobiidae"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID%in%list]<-5
# 164 are 6
list<-knn_dat_target$New_UniqueID[knn_dat_target$lenght_Norm1==0.0175864160097029]

net$Use_Lenght_cm1[net$estsciname=="Gobiidae"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID%in%list]<-6
# 70 are 7
list<-knn_dat_target$New_UniqueID[knn_dat_target$lenght_Norm1==0.0206185567010309]

net$Use_Lenght_cm1[net$estsciname=="Gobiidae"
                   &is.na(net$Use_Lenght_cm1)
                   &net$New_UniqueID%in%list]<-7
net$NewHLNoAtLngt[net$estsciname=="Gobiidae"
                  &is.na(net$Use_Lenght_cm1)]<-net$NewTotalNo[net$estsciname=="Gobiidae"
                                                                 &is.na(net$Use_Lenght_cm1)]
#############
net$SweptArea_wing_km_sqrd<-net$SweptArea_wing_km_sqrd/1000
summary(net$SweptArea_wing_km_sqrd)
summary(net$Use_Lenght_cm1)
summary(net$HLNoAtLngt)
summary(net$NewHLNoAtLngt)
net$NewHLNoAtLngt[is.na(net$NewHLNoAtLngt)]<-net$NewTotalNo[is.na(net$NewHLNoAtLngt)]
# now use the new numbers at lenght to get densities
net<-as.data.table(net)
net$SweptArea_wing_km_sqrd<-as.numeric(net$SweptArea_wing_km_sqrd)

net[!is.na(NewHLNoAtLngt), c("HLNoAtLngtkm2") :=
      list(NewHLNoAtLngt/SweptArea_wing_km_sqrd)] 
### getting closer to the end now,
# need to tidy up the output file
names(traits)
names(net)
link<-subset(traits,
             select=c( "Aphia_Code", "LWRa","LWRb",
                       "LWRSource"))               
link$estAphia_Code<-link$Aphia_Code
link$Aphia_Code<-NULL
net<-as.data.frame(net)
net$estAphia_Code[net$estsciname=="Triglalyra"]<-127266
net$estAphia_Code[net$estsciname=="Congerconger"]<-126285
all_net<-merge(net, link,  by="estAphia_Code", all.x=T)
# find all records with no LWR
find<-subset(all_net, is.na(LWRa),)
summary(as.factor(find$estsciname))
all_net$LWRa[all_net$estsciname=="Chelonlabrosus"]<-0.00676
all_net$LWRb[all_net$estsciname=="Chelonlabrosus"]<-3.16 
all_net$LWRa[all_net$estsciname=="Icelusbicornis"]<-0.00661 
all_net$LWRb[all_net$estsciname=="Icelusbicornis"]<-3.17  
all_net$LWRa[all_net$estsciname=="Lycodesvahlii"]<-0.00129  
all_net$LWRb[all_net$estsciname=="Lycodesvahlii"]<-3.10   

all_net$LWRa[all_net$estsciname=="Stomiasboaboa"]<-0.00229  
all_net$LWRb[all_net$estsciname=="Stomiasboaboa"]<-3.16    
# Ammodytes marinus a= 1.70E-03	b= 3.21
# Ammodytes tobianus a= 3.30E-03	b= 2.91
exp(mean(log(1.70E-03+3.30E-03)))
(3.21+2.91)/2
all_net$LWRa[all_net$estsciname=="Ammodytes"]<-0.005
all_net$LWRb[all_net$estsciname=="Ammodytes"]<-3.06

# Hyperoplus immaculatus a= (0.00306+0.00236)/2 b= 3
# Hyperoplus lanceolatus 3.40E-03	2.93
exp(mean(log(0.00271+3.40E-03)))
  (3+2.93)/2
all_net$LWRa[all_net$estsciname=="Hyperoplus"]<-0.00611
all_net$LWRb[all_net$estsciname=="Hyperoplus"]<-2.965

#Entelurusaequoreus .00022 b= 3
all_net$LWRa[all_net$estsciname=="Entelurusaequoreus"]<-.00022
all_net$LWRb[all_net$estsciname=="Entelurusaequoreus"]<-3
# Gobiidae
#Aphia minuta 8.00E-04	3.53
#Crystallogobius linearis 0.01	2.94
#Deltentosteus quadrimaculatus 0.01	3.21
#Gobius cobitis 0.01	3.11
#Gobius gasteveni 0.01	3.05
#Gobius niger 0.01	3.03
#Gobius paganellus 0.01	3.1
#Lesueurigobius friesii 0.01	3.04
#Lesueurigobius sanzi 0.01	3.12
#Pomatoschistus lozanoi 0.01	3.04
#Pomatoschistus microps 0.01	3.18
#Pomatoschistus minutus 0.01	3.22
#Pomatoschistus pictus 0.01	3.19
exp(mean(log(8.00E-04+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01)))
(3.53+2.94+3.21+3.11+3.05+3.03+3.1+3.04+3.12+3.04+3.18+3.22+3.19)/13
all_net$LWRa[all_net$estsciname=="Gobiidae"]<-0.1208
all_net$LWRb[all_net$estsciname=="Gobiidae"]<-3.135385

# mean lenght is needed for lenght weights  if measured in cm then +0.5
# if measured in .5 cm then add + 0.25
all_net$LngtCode[is.na(all_net$LngtCode)]<-1

all_net$mean_lenght_cm[all_net$LngtCode=="1"]<-all_net$Use_Lenght_cm1[all_net$LngtCode=="1"]+.5
all_net$mean_lenght_cm[all_net$LngtCode=="0"]<-all_net$Use_Lenght_cm1[all_net$LngtCode=="0"]+.25
all_net$mean_lenght_cm[all_ger$LngtCode=="."]<-all_net$Use_Lenght_cm1[all_net$LngtCode=="."]+.25
all_net$IndivFishWgt_g<-all_net$LWRa*all_net$mean_lenght_cm^all_net$LWRb
all_net$SpeciesSciName<-all_net$estsciname
all_net$FishLenght_cm<-all_net$Use_Lenght_cm1
all_net$Number<-all_net$NewTotalNo
all_net$DensAbund_N_Sqkm<-all_net$HLNoAtLngtkm2
all_net$DensBiom_kg_Sqkm<-(all_net$Number*all_net$IndivFishWgt_g/1000)/all_net$SweptArea_wing_km_sqrd
list<-unique(all_net$New_UniqueID)

need<-subset(h, New_UniqueID%in%list,
             select=c(New_UniqueID,HaulID, Survey_Acronym))
all_net1<-merge(need, all_net)
bio_dat_netherlands_beam<-subset(all_net1, 
                             select=c(Survey_Acronym, HaulID, SpeciesSciName,
                                      FishLenght_cm, IndivFishWgt_g, Number,
                                      DensAbund_N_Sqkm, DensBiom_kg_Sqkm))
#"GNSNetBT3_LD"
GNSNetBT3_LD<-subset(bio_dat_netherlands_beam, )

write.csv(GNSNetBT3_LD, "Bio_info_GNSNetBT3_10-06-2016.csv")

