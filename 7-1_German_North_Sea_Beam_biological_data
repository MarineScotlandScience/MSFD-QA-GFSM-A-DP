###################
# Version Control #
###################
# R version 3.2.2 (2015-08-14): Fire Safety 
# platform       x86_64-w64-mingw32 (64-bit)
###############
# Script Info #
###############
# Script 7.1
# We now correct the biological data for each of the surveys individually
# I have done as much as possible on a global bases and now must work on a
# survey by survey bases do do Knn species and length assignments

# AUTHOR: Meadhbh Moriarty, 2016
# REVIEWED BY: 

# 1. BTS
beam<-subset(alldata1, Survey=="BTS",)
lofa_beam<-subset(beam, is.na(estrank),)
levels(as.factor(lofa_beam$new_valid_name))
# break this down by country
lofa_beam_net<-subset(lofa_beam, Country=="NED",)
levels(as.factor(lofa_beam_net$new_valid_name))
lofa_beam_eng<-subset(lofa_beam, Country=="ENG",)
levels(as.factor(lofa_beam_eng$new_valid_name))
lofa_beam_ger<-subset(lofa_beam, Country=="GFR",)
levels(as.factor(lofa_beam_ger$new_valid_name))

# start with GERMANY 
ger<-subset(alldata1, Survey=="BTS"&Country=="GFR",)
# Use Knn to resove the following 
# "Ammodytidae" 
# "Syngnathus" 
# Seaweed pipefish
################################
find<-subset(ger, genus=="Syngnathus",)

png(filename="len_dist_seaweed_pipefish_bts_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Seaweed pipefish (BTS_GFR)")+
  theme_classic()

dev.off()
# can't use KNN- only one sp recorded in survey
#################
# Knn predicts Gaidropsarusvulgaris 
ger$estsciname[ger$new_valid_name=="Syngnathus"]<-"Syngnathusrostellatus"
ger$estrank[ger$new_valid_name=="Syngnathus"]<-"Species"

ger$estAphia_Code[ger$estsciname=="Syngnathusrostellatus"]<-127389
ger$SpeciesQualityCode[ger$new_valid_name=="Syngnathus"]<-"Genus_to_spp"
####################################
# Use Knn to resove "Ammodytidae"     
# Sandeels
find<-subset(ger, family=="Ammodytidae",)
################################
png(filename="ger_beam_len_dist_Sandeel1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sandeel (Ger)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("estsciname", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("estsciname", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="ger_beam_len_dist_Sandeel2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=estsciname, group=estsciname,
                    fill=estsciname)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sandeel (Ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="ger_beam_len_dist_Sandeel3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=estsciname),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="ger_beam_len_dist_Sandeel4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=estsciname)) + 
  geom_density()  + 
  facet_grid(estsciname ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
# New BaseMap
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue")
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$estsciname)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$estsciname<-as.factor(find$estsciname)
summary(find$estsciname)
list<-c("Ammodytes", "Hyperoplus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
101/10
# training data
101-10
train<- knn_dat[1:90, 3:8]
test<- knn_dat[91:101,3:8]
train_target<- knn_dat[1:90,2 ]
test_target<- knn_dat[91:101,2 ]
require(class)
sqrt(101)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=10)

t1<-(table(droplevels(test_target, m1)))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:101, 3:8]
test<- knn_dat_target[1:1,3:8]
train_target<- knn_dat[1:101,2 ]
test_target<- knn_dat_target[1:1,2 ]

m2<-knn(train, test, 
        cl=train_target, k=10)
summary(droplevels(m2))

t2<-(table(test_target, m2))
t2
# Knn predicts Labrusmixtus 
ger$estsciname[ger$new_valid_name=="Ammodytidae"]<-"Hyperoplus"
ger$estrank[ger$new_valid_name=="Ammodytidae"]<-"Species"
ger$estAphia_Code[ger$estsciname=="Hyperoplus"]<-125911
ger$SpeciesQualityCode[ger$new_valid_name=="Ammodytidae"]<-"KNN_spp_assignment"
####################################
# Recheck Lmax with new fishes names # only snake pipefish to look at and 
# and they are within range!
# no need for concern here!

summary(as.factor(ger$SpecVal))
# 8 observations have no length measurements - only total number
# 1 observation is Presence / Absence only
# Use a KNN classification to find an approperiate lenght of fish
no_lenght<-subset(ger, SpecVal==4|SpecVal==5,)
summary(as.factor(no_lenght$estsciname))
# Total number for Limandalimanda is recorded as 0, remove record
ger<-subset(ger, !SpecVal==5,)
############
# Need to get lenghts for 
# Ammodytes 64
# Gobiidae    328 
# Merlucciusmerluccius 270 
# Phrynorhombusnorvegicus  
# Soleasolea 
##############
## get a lenght for the witch.
# Glyptocephaluscynoglossus 
find<-subset(ger, estsciname=="Glyptocephaluscynoglossus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))



png(filename="len_dist_witch_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Witch (ger))")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_witch_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of witch (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_witch_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_witch_ger4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)

str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
123/10
# training data
123-12
train<- knn_dat[1:111, 3:7]
test<- knn_dat[112:123,3:7]
train_target<- knn_dat[1:111,8 ]
test_target<- knn_dat[112:123,8 ]
require(class)
sqrt(123)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=11)

t1<-(table(test_target, m1))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:123, 3:6]
test<- knn_dat_target[1:3,3:6]
train_target<- knn_dat[1:123,8 ]
test_target<- knn_dat_target[1:3,8 ]

m2<-knn(train, test, 
        cl=train_target, k=12)
summary(droplevels(m2))

find<-subset(ger, lenght_Norm==0.129775621588842,)
(0.129775621588842*329.8)+.2
# this is 43 cm
(0.114614918132201*329.8)+.2
# Knn predicts 38cm fish
ger$Use_Lenght_cm1[ger$estsciname=="Glyptocephaluscynoglossus"
                    &is.na(ger$Use_Lenght_cm)
                    &ger$New_UniqueID=="BTS/2002/3/SOL/12/BT7"]<-38
ger$QC_Length[ger$estsciname=="Glyptocephaluscynoglossus"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2002/3/SOL/12/BT7"]<-"KNN_len_assignment"
ger$Use_Lenght_cm1[ger$estsciname=="Glyptocephaluscynoglossus"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2003/3/SOL/15/BT7"]<-38
ger$QC_Length[ger$estsciname=="Glyptocephaluscynoglossus"
              &is.na(ger$Use_Lenght_cm)
              &ger$New_UniqueID=="BTS/2003/3/SOL/15/BT7"]<-"KNN_len_assignment"
ger$Use_Lenght_cm1[ger$estsciname=="Glyptocephaluscynoglossus"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2003/3/SOL/20/BT7"]<-43
ger$QC_Length[ger$estsciname=="Glyptocephaluscynoglossus"
              &is.na(ger$Use_Lenght_cm)
              &ger$New_UniqueID=="BTS/2003/3/SOL/20/BT77"]<-"KNN_len_assignment"
############
############
# Need to get lenghts for 
# Ammodytes 64
# Gobiidae    328 
# Merlucciusmerluccius 270 
# Phrynorhombusnorvegicus  
# Soleasolea 
##############
## get a lenght for the sole
# Soleasolea 
find<-subset(ger, estsciname=="Soleasolea",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_sole_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sole (ger))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))
# Overlaid histograms with means    
png(filename="len_dist_sole_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sole (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_sole_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_sole_ger4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
556/10
# training data
train<- knn_dat[1:500, 3:7]
test<- knn_dat[501:556,3:7]
train_target<- knn_dat[1:500,8 ]
test_target<- knn_dat[501:556,8 ]
require(class)
sqrt(556)
summary(train_target)
summary(test_target)

m1<-knn(train, test,cl=train_target, k=24)
t1<-(table(test_target, m1))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:556, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:556,8 ]
test_target<- knn_dat_target[1:1,8 ]

m2<-knn(train, test, cl=train_target, k=24)
summary(droplevels(m2))
(0.0691328077622802*329.8)+.2
# this is 23cm
ger$Use_Lenght_cm1[ger$estsciname=="Soleasolea"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2011/3/SOL2/30/BT7"]<-23
ger$QC_Length[ger$estsciname=="Soleasolea"
              &is.na(ger$Use_Lenght_cm)
              &ger$New_UniqueID=="BTS/2011/3/SOL2/30/BT7"]<-"KNN_len_assignment"
##############
# Need to get lenghts for 
# Ammodytes 64
# Gobiidae    328 
# Merlucciusmerluccius 270 
# Phrynorhombusnorvegicus  
##############
## get a lenght for the Norwegian topknot
# Phrynorhombusnorvegicus  
find<-subset(ger, estsciname=="Phrynorhombusnorvegicus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_ntk_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of ntk (ger))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))
# Overlaid histograms with means    
png(filename="len_dist_ntk_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of ntk (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_ntk_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_ntk_ger4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
91/10
# training data
train<- knn_dat[1:80, 3:7]
test<- knn_dat[81:91,3:7]
train_target<- knn_dat[1:80,8 ]
test_target<- knn_dat[81:91,8 ]
require(class)
sqrt(91)
summary(train_target)
summary(test_target)
m1<-knn(train, test,cl=train_target, k=10)
t1<-(table(test_target, m1))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:91, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:91,8 ]
test_target<- knn_dat_target[1:1,8 ]
m2<-knn(train, test, cl=train_target, k=10)
summary(droplevels(m2))
(0.0297149787750152*329.8)+.2
# this is 10cm
ger$Use_Lenght_cm1[ger$estsciname=="Phrynorhombusnorvegicus"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2002/3/SOL/3/BT7"]<-10
ger$QC_Length[ger$estsciname=="Phrynorhombusnorvegicus"
              &is.na(ger$Use_Lenght_cm)
              &ger$New_UniqueID=="BTS/2002/3/SOL/3/BT7"]<-"KNN_len_assignment"
###################
# Need to get lenghts for 
# Ammodytes 64
# Gobiidae    328 
# Merlucciusmerluccius 270 
##############
## get a lenght for the Norwegian topknot
# Phrynorhombusnorvegicus  
find<-subset(ger, estsciname=="Ammodytes",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_sandeels_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sandeel (ger))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))
# Overlaid histograms with means    
png(filename="len_dist_sandeel_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sandeel (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_sandeel_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_sandeel_ger4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
pnorm(64, 14, 6)
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
41/10
# training data
train<- knn_dat[1:80, 3:7]
test<- knn_dat[81:91,3:7]
train_target<- knn_dat[1:80,8 ]
test_target<- knn_dat[81:91,8 ]
require(class)
sqrt(91)
summary(train_target)
summary(test_target)
m1<-knn(train, test,cl=train_target, k=10)
t1<-(table(test_target, m1))
# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model
knn_dat_target<-subset(find, is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:91, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:91,8 ]
test_target<- knn_dat_target[1:1,8 ]
m2<-knn(train, test, cl=train_target, k=10)
summary(droplevels(m2))
(0.0297149787750152*329.8)+.2
# this is 10cm
ger$Use_Lenght_cm1[ger$estsciname=="Phrynorhombusnorvegicus"
                   &is.na(ger$Use_Lenght_cm)
                   &ger$New_UniqueID=="BTS/2002/3/SOL/3/BT7"]<-10
ger$QC_Length[ger$estsciname=="Phrynorhombusnorvegicus"
              &is.na(ger$Use_Lenght_cm)
              &ger$New_UniqueID=="BTS/2002/3/SOL/3/BT7"]<-"KNN_len_assignment"


rand_vect <- function(N, M, sd = 1, pos.only = TRUE) {
  vec <- rnorm(N, M/N, sd)
  if (abs(sum(vec)) < 0.01) vec <- vec + 1
  vec <- round(vec / sum(vec) * M)
  deviation <- M - sum(vec)
  for (. in seq_len(abs(deviation))) {
    vec[i] <- vec[i <- sample(N, 1)] + sign(deviation)
  }
  if (pos.only) while (any(vec < 0)) {
    negs <- vec < 0
    pos  <- vec > 0
    vec[negs][i] <- vec[negs][i <- sample(sum(negs), 1)] + 1
    vec[pos][i]  <- vec[pos ][i <- sample(sum(pos ), 1)] - 1
  }
  vec
}
summary(find$Use_Lenght_cm1)
###################
# Need to get lenghts for 
# Ammodytes 64
# Gobiidae    328 
# Merlucciusmerluccius 270 

# need to create new data set to complete this
# Ammodytes 1 sample 64 fish counted
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(64,64))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.7858344
dat$year_Norm<-0.6363636
dat$long_Norm<-0.8109933
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2004/3/SOL2/45/BT7"
dat$new_valid_name<-"Ammodytes"
head(dat)

knn_dat_target<-subset(dat, 
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
sqrt(41)
train<- knn_dat[1:41, 3:7]
test<- knn_dat_target[1:64,3:7]
train_target<- knn_dat[1:41,8 ]
test_target<- knn_dat_target[1:64,8 ]
m2<-knn(train, test, cl=train_target, k=10)
dat$lenght_Norm1<-(m2)
dat$lenght1<-as.numeric(dat$lenght_Norm1)+4

summary(droplevels(m2))
(0.0206185567010309*329.8)+.2
# this expanded knn assessment gives 
# 12fish at 7cm
# 17 fish at 8cm
# 16 fish at 10cm
# 19 fish at 18 cm
write.csv(dat, file="KNN_Ammodytes_BTS20043SOL245BT7.csv")
summary(as.factor(dat$lenght1))
find<-subset(ger, ger$estsciname=="Ammodytes"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7",)
find$Use_Lenght_cm1<-7
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-12
ger<-rbind(ger, find)
find<-subset(ger, ger$estsciname=="Ammodytes"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7",)
find$Use_Lenght_cm1<-8
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-17
ger<-rbind(ger, find)
find<-subset(ger, ger$estsciname=="Ammodytes"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7",)
find$Use_Lenght_cm1<-10
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-16
ger<-rbind(ger, find)
ger$Use_Lenght_cm1[ger$estsciname=="Ammodytes"
                   &is.na(ger$Use_Lenght_cm1)
                   &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7"]<-18
ger$QC_Length[ger$estsciname=="Ammodytes"
              &(ger$Use_Lenght_cm1==18)
              &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7"]<-"KNN_len_assignment"
ger$NewHLNoAtLngt[ger$estsciname=="Ammodytes"
                  &(ger$Use_Lenght_cm1==18)
                  &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7"]<-19
# check 
find<-subset(ger, ger$estsciname=="Ammodytes"
             &ger$New_UniqueID=="BTS/2004/3/SOL2/45/BT7",)
# all done now with this fish
###################
# Need to get lenghts for 
# Gobiidae    328 
# Merlucciusmerluccius 270 
##############
## get a lenght for the Norwegian topknot
# Phrynorhombusnorvegicus  
find<-subset(ger, estsciname=="Gobiidae",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_gobies_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of gobies (ger))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))
# Overlaid histograms with means    
png(filename="len_dist_gobies_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of gobies (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_gobies_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_gobies_ger4_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
###################
# Need to get lenghts for 
# Gobiidae    328 
# Merlucciusmerluccius 270 
find<-subset(ger, estsciname=="Gobiidae",)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

# need to create new data set to complete this
# Gobies 1 sample 328 fish counted
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(328,328))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.7392523
dat$year_Norm<-0.8787879
dat$long_Norm<-0.8137788
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2012/3/SOL2/2/BT7"
dat$new_valid_name<-"Gobiidae"
head(dat)

knn_dat_target<-subset(dat, select= c(New_UniqueID,new_valid_name,q_Norm,
                            year_Norm,lat_Norm,long_Norm,
                            numbers_Norm,lenght_Norm))
# training data
sqrt(299)
train<- knn_dat[1:299, 3:7]
test<- knn_dat_target[1:328,3:7]
train_target<- knn_dat[1:299,8 ]
test_target<- knn_dat_target[1:328,8 ]
m2<-knn(train, test, cl=train_target, k=17)
dat$lenght_Norm1<-(m2)
dat$lenght1<-as.numeric(dat$lenght_Norm1)+1

summary(droplevels(m2))
(0.0175864160097029*329.8)+.2
# this expanded knn assessment gives 
# all fish a value of 6cm 
write.csv(dat, file="KNN_Gobies_BTS20123SOL22BT7.csv")
summary(as.factor(dat$lenght1))
find<-subset(ger, ger$estsciname=="Gobiidae"
             &is.na(ger$Use_Lenght_cm1),)
ger$Use_Lenght_cm1[ger$estsciname=="Gobiidae"
                   &is.na(ger$Use_Lenght_cm1)
                   &ger$New_UniqueID=="BTS/2012/3/SOL2/2/BT7"]<-6
ger$QC_Length[ger$estsciname=="Gobiidae"
              &(ger$Use_Lenght_cm1==6)
              &ger$New_UniqueID=="BTS/2012/3/SOL2/2/BT7"]<-"KNN_len_assignment"
ger$NewHLNoAtLngt[ger$estsciname=="Gobiidae"
                  &(ger$Use_Lenght_cm1==18)
                  &ger$New_UniqueID=="BTS/2012/3/SOL2/2/BT7"]<-328
# check 
# all done now with this fish
###################
# Need to get lenghts for 
# Merlucciusmerluccius 270 
##############
## get a lenght for the hakes
# Phrynorhombusnorvegicus  
find<-subset(ger, estsciname=="Merlucciusmerluccius",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
png(filename="len_dist_hake_ger1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of hake (ger))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))
# Overlaid histograms with means    
png(filename="len_dist_hakes_ger2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of hake (ger)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_hakes_ger3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
#########
###################
# Need to get lenghts for 
# Merlucciusmerluccius 270 
find<-subset(ger, estsciname=="Merlucciusmerluccius",)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

# need to create new data set to complete this
# Merlucciusmerluccius 1 sample 270 fish counted
summary(find$Use_Lenght_cm1)
HL_count<-(rand_vect(270,270))
dat<-as.data.frame(HL_count)
# first normalize numbers generated
dat$numbers_Norm<-1/3715
dat$lat_Norm<-0.7832946
dat$year_Norm<-0.6363636
dat$long_Norm<-0.8081453
dat$q_Norm<-0.6666667
dat$lenght_Norm<-NA
dat$New_UniqueID<-"BTS/2004/3/SOL2/46/BT7"
dat$new_valid_name<-"Merlucciusmerluccius"

knn_dat_target<-subset(dat, select= c(New_UniqueID,new_valid_name,q_Norm,
                                      year_Norm,lat_Norm,long_Norm,
                                      numbers_Norm,lenght_Norm))
# training data
sqrt(85)
train<- knn_dat[1:85, 3:7]
test<- knn_dat_target[1:270,3:7]
train_target<- knn_dat[1:85,8 ]
test_target<- knn_dat_target[1:270,8 ]
m2<-knn(train, test, cl=train_target, k=10)
dat$lenght_Norm1<-(m2)
summary(droplevels(dat$lenght_Norm1))
##########################
# figure out how to do the lenght conversion thing
summary(droplevels(m2))
(0.244996967859309*329.8)+.2
# this expanded knn assessment gives 
# all fish a value of 6cm 
write.csv(dat, file="KNN_Merlucciusmerluccius_BTS20043SOL246BT7.csv")
summary(as.factor(dat$lenght1))

find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
# 29 fish are 41cm
find$Use_Lenght_cm1<-41
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-29
ger<-rbind(ger, find)
# 33 fish ar 44
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-44
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-33
ger<-rbind(ger, find)
# 27 are 55cm
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-55
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-27
ger<-rbind(ger, find)
# 33 are 56cm
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-56
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-33
ger<-rbind(ger, find)
# 24 are 59
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-59
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-24
ger<-rbind(ger, find)
# 28 are 60
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-60
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-28
ger<-rbind(ger, find)
# 29 are 61
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-61
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-29
ger<-rbind(ger, find)
# 20 are 67
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-67
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-20
ger<-rbind(ger, find)
# 29 are 71
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &is.na(ger$Use_Lenght_cm1)
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)
find$Use_Lenght_cm1<-71
find$QC_Length<-"KNN_len_assignment"
find$NewHLNoAtLngt<-29
ger<-rbind(ger, find)
# 18 are 81
ger$Use_Lenght_cm1[ger$estsciname=="Merlucciusmerluccius"
                   &is.na(ger$Use_Lenght_cm1)
                   &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7"]<-81
ger$QC_Length[ger$estsciname=="Merlucciusmerluccius"
              &(ger$Use_Lenght_cm1==81)
              &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7"]<-"KNN_len_assignment"
ger$NewHLNoAtLngt[ger$estsciname=="Merlucciusmerluccius"
                  &(ger$Use_Lenght_cm1==81)
                  &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7"]<-18
# check 
find<-subset(ger, ger$estsciname=="Merlucciusmerluccius"
             &ger$New_UniqueID=="BTS/2004/3/SOL2/46/BT7",)

# check 
# all done now with this fish
#############
ger$SweptArea_wing_km_sqrd<-ger$SweptArea_wing_km_sqrd/1000
summary(ger$SweptArea_wing_km_sqrd)
summary(ger$Use_Lenght_cm1)
summary(ger$HLNoAtLngt)
summary(ger$NewHLNoAtLngt)
ger$NewHLNoAtLngt[is.na(ger$NewHLNoAtLngt)]<-ger$NewTotalNo[is.na(ger$NewHLNoAtLngt)]
# now use the new numbers at lenght to get densities
ger<-as.data.table(ger)
ger$SweptArea_wing_km_sqrd<-as.numeric(ger$SweptArea_wing_km_sqrd)

ger[!is.na(NewHLNoAtLngt), c("HLNoAtLngtkm2") :=
       list(NewHLNoAtLngt/SweptArea_wing_km_sqrd)] 
### getting closer to the end now,
# need to tidy up the output file
names(traits)
names(ger)
link<-subset(traits,
             select=c( "Aphia_Code", "LWRa","LWRb",
                       "LWRSource"))               
link$estAphia_Code<-link$Aphia_Code
link$Aphia_Code<-NULL
ger<-as.data.frame(ger)
ger$estAphia_Code[ger$estsciname=="Triglalyra"]<-127266
ger$estAphia_Code[ger$estsciname=="Congerconger"]<-126285
all_ger<-merge(ger, link,  by="estAphia_Code", all.x=T)
# find all records with no LWR
find<-subset(all_ger, is.na(LWRa),)
summary(as.factor(find$estsciname))

# Ammodytes marinus a= 1.70E-03	b= 3.21
# Ammodytes tobianus a= 3.30E-03	b= 2.91
exp(mean(log(1.70E-03+3.30E-03)))
(3.21+2.91)/2
all_ger$LWRa[all_ger$estsciname=="Ammodytes"]<-0.005
all_ger$LWRb[all_ger$estsciname=="Ammodytes"]<-3.06

# Hyperoplus immaculatus a= (0.00306+0.00236)/2 b= 3
# Hyperoplus lanceolatus 3.40E-03	2.93
exp(mean(log(0.00271+3.40E-03)))
(3+2.93)/2
all_ger$LWRa[all_ger$estsciname=="Hyperoplus"]<-0.00611
all_ger$LWRb[all_ger$estsciname=="Hyperoplus"]<-2.965

#Entelurusaequoreus .00022 b= 3
all_ger$LWRa[all_ger$estsciname=="Entelurusaequoreus"]<-.00022
all_ger$LWRb[all_ger$estsciname=="Entelurusaequoreus"]<-3
# Gobiidae
#Aphia minuta 8.00E-04	3.53
#Crystallogobius linearis 0.01	2.94
#Deltentosteus quadrimaculatus 0.01	3.21
#Gobius cobitis 0.01	3.11
#Gobius gasteveni 0.01	3.05
#Gobius niger 0.01	3.03
#Gobius paganellus 0.01	3.1
#Lesueurigobius friesii 0.01	3.04
#Lesueurigobius sanzi 0.01	3.12
#Pomatoschistus lozanoi 0.01	3.04
#Pomatoschistus microps 0.01	3.18
#Pomatoschistus minutus 0.01	3.22
#Pomatoschistus pictus 0.01	3.19
exp(mean(log(8.00E-04+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01)))
(3.53+2.94+3.21+3.11+3.05+3.03+3.1+3.04+3.12+3.04+3.18+3.22+3.19)/13
all_ger$LWRa[all_ger$estsciname=="Gobiidae"]<-0.1208
all_ger$LWRb[all_ger$estsciname=="Gobiidae"]<-3.135385

# mean lenght is needed for lenght weights  if measured in cm then +0.5
# if measured in .5 cm then add + 0.25
all_ger$LngtCode[is.na(all_ger$LngtCode)]<-1

all_ger$mean_lenght_cm[all_ger$LngtCode=="1"]<-all_ger$Use_Lenght_cm1[all_ger$LngtCode=="1"]+.5
all_ger$mean_lenght_cm[all_ger$LngtCode=="0"]<-all_ger$Use_Lenght_cm1[all_ger$LngtCode=="0"]+.25
all_ger$mean_lenght_cm[all_ger$LngtCode=="."]<-all_ger$Use_Lenght_cm1[all_ger$LngtCode=="."]+.25
all_ger$IndivFishWgt_g<-all_ger$LWRa*all_ger$mean_lenght_cm^all_ger$LWRb
all_ger$SpeciesSciName<-all_ger$estsciname
all_ger$FishLenght_cm<-all_ger$Use_Lenght_cm1
all_ger$Number<-all_ger$NewTotalNo
all_ger$DensAbund_N_Sqkm<-all_ger$HLNoAtLngtkm2
all_ger$DensBiom_kg_Sqkm<-(all_ger$Number*all_ger$IndivFishWgt_g/1000)/all_ger$SweptArea_wing_km_sqrd
list<-unique(all_ger$New_UniqueID)

need<-subset(h, New_UniqueID%in%list,
             select=c(New_UniqueID,HaulID, Survey_Acronym))
all_ger1<-merge(need, all_ger)
bio_dat_germany_beam<-subset(all_ger1, 
                                     select=c(Survey_Acronym, HaulID, SpeciesSciName,
                                              FishLenght_cm, IndivFishWgt_g, Number,
                                              DensAbund_N_Sqkm, DensBiom_kg_Sqkm))
#"GNSGerBT3_LD"
GNSGerBT3_LD<-subset(bio_dat_germany_beam, )

write.csv(GNSGerBT3_LD, "Bio_info_GNSGerBT3_10-06-2016.csv")

