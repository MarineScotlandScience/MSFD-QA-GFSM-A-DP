###################
# Version Control #
###################
# R version 3.2.2 (2015-08-14): Fire Safety 
# platform       x86_64-w64-mingw32 (64-bit)
###############
# Script Info #
###############
# Script 7.7
# We now correct the biological data for each of the surveys individually
# I have done as much as possible on a global bases and now must work on a
# survey by survey bases do do Knn species and length assignments

# AUTHOR: Meadhbh Moriarty, 2016
# REVIEWED BY: 
# 7, NS-IBTS
ns<-subset(alldata1, Survey=="NS-IBTS",)
lofa_ns<-subset(ns, is.na(estrank),)
levels(as.factor(lofa_ns$new_valid_name))
summary(as.factor(ns$estrank))
summary(as.factor((ns$estsciname)))
# lots of groups to resolve
# "Alosa"           "Ammodytidae"     "Argentina"       "Argentinidae"   
# "Arnoglossus"     "Blenniidae"      "Bothidae"        "Buglossidium"   
# "Callionymidae"   "Callionymus"     "Chelidonichthys" "Clupeidae"      
# "Cottidae"        "Dicentrarchus"   "Dipturus"        "Gadiculus"      
# "Gaidropsarus"    "Gasterosteidae"  "Liparis"         "Lophiidae"      
# "Lycodes"         "Microchirus"     "Mugilidae"       "Mullus"         
# "Mustelus"        "Phycidae"        "Raja"            "Rajidae"        
# "Scyliorhinus"    "Sebastes"        "Soleidae"        "Sparidae"       
# "Squalidae"       "Stichaeidae"     "Syngnathidae"    "Syngnathus"     
# "Triglidae"       "Zeidae"          "Zeugopterus"     "Zoarcidae"     
summary(as.factor(ns$SpecVal))
############################
# 1. "Alosa" - shad #
############################
find<-subset(ns, genus=="Alosa",)
png(filename="NS_lenght_dist_shads_1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of shad (NS)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_shads_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of shads (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_shads_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_shads_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(as.factor(find$estsciname))
list<-c("Alosa fallax", "Alosaagone", "Alosaalosa","Alosafallax")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
1230/10
# training data
1230-123
train<- knn_dat[1:1107, 3:8]
test<- knn_dat[1108:1230,3:8]
train_target<- knn_dat[1:1107,2 ]
test_target<- knn_dat[1108:1230,2 ]
require(class)
sqrt(1230)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=35)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1230, 3:8]
test<- knn_dat_target[1:1,3:8]
train_target<- knn_dat[1:1230,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=35)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 59 Ammodytes and  139 Hyperoplus 
ns$SpeciesQualityCode[ns$new_valid_name=="Alosa"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Alosa"]<-"Species"
ns$estsciname[ns$new_valid_name=="Alosa"]<-"Alosafallax"
ns$estAphia_Code[ns$estsciname=="Alosafallax"]<-126415  
ns$estsciname[ns$new_valid_name=="Alosa fallax"]<-"Alosafallax"
summary(as.factor(find$estsciname))
################################
#  2. "Ammodytidae" - sandeels #
################################
find<-subset(ns, family=="Ammodytidae",)
png(filename="ns_lenght_dist_sandeels_1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sandeels (ns)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="ns_lenght_dist_sandeels_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sandeels (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="ns_lenght_dist_sandeels_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="ns_lenght_dist_sandeels_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
ns$estsciname[ns$new_valid_name=="Hyperoplus immaculatus"]<-"Hyperoplus"
ns$estrank[ns$new_valid_name=="Hyperoplus immaculatus"]<-"Genus"

summary(as.factor(find$estsciname))
list<-c("Ammodytes", "Gymnammodytessemisquamatus", "Hyperoplus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
13718/10
# training data
13718-1372
train<- knn_dat[1:12346, 3:8]
test<- knn_dat[12347:13718,3:8]
train_target<- knn_dat[1:12346,2 ]
test_target<- knn_dat[12347:13718,2 ]
require(class)
sqrt(13718)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=117)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:13718, 3:8]
test<- knn_dat_target[1:1202,3:8]
train_target<- knn_dat[1:13718,2 ]
test_target<- knn_dat_target[1:1202,2 ]
m2<-knn(train, test,cl=train_target, k=117)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 569 Ammodytes and  633 Hyperoplus 
ns$SpeciesQualityCode[ns$new_valid_name=="Ammodytidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Ammodytidae"]<-"Genus"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Ammodytes"]
ns$estsciname[ns$new_valid_name=="Ammodytidae"&ns$New_UniqueID%in%list]<-"Ammodytes"
ns$estAphia_Code[ns$estsciname=="Ammodytes"&ns$New_UniqueID%in%list]<-125909 
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Hyperoplus"]
ns$estsciname[ns$new_valid_name=="Ammodytidae"&ns$New_UniqueID%in%list]<-"Hyperoplus"
ns$estAphia_Code[ns$estsciname=="Hyperoplus"&ns$New_UniqueID%in%list]<-125911 
# Still 1229 Ammoytidae
find<-subset(ns, family=="Ammodytidae",)
summary(as.factor(find$estsciname))
knn_dat_target<-subset(find, find$estsciname=="Ammodytidae",
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:13718, 3:6]
test<- knn_dat_target[1:26,3:6]
train_target<- knn_dat[1:13718,2 ]
test_target<- knn_dat_target[1:26,2 ]
m2<-knn(train, test,cl=train_target, k=117)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 8 Ammodytes and  18 Hyperoplus 
ns$SpeciesQualityCode[ns$new_valid_name=="Ammodytidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Ammodytidae"]<-"Genus"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Ammodytes"]
ns$estsciname[ns$new_valid_name=="Ammodytidae"&ns$New_UniqueID%in%list]<-"Ammodytes"
ns$estAphia_Code[ns$estsciname=="Ammodytes"&ns$New_UniqueID%in%list]<-125909 
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Hyperoplus"]
ns$estsciname[ns$new_valid_name=="Ammodytidae"&ns$New_UniqueID%in%list]<-"Hyperoplus"
ns$estAphia_Code[ns$estsciname=="Hyperoplus"&ns$New_UniqueID%in%list]<-125911 
####################################
# 3. "Argentina" "herring smelts" #
####################################
find<-subset(ns, genus=="Argentina",)
png(filename="ns_herringsmelts_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herring smelts (NS)")+
  theme_classic()
dev.off()
 
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_herringsmelts_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of herring smelts (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_herringsmelts_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_herringsmelts_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(as.factor(find$new_valid_name))
list<-c("Argentinasilus", "Argentinasphyraena")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
21229/10
# training data
21229-2123
train<- knn_dat[1:19106, 3:8]
test<- knn_dat[19107:21229,3:8]
train_target<- knn_dat[1:19106,2 ]
test_target<- knn_dat[19107:21229,2 ]
require(class)
sqrt(21229)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=146)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:21229, 3:8]
test<- knn_dat_target[1:310,3:8]
train_target<- knn_dat[1:21229,2 ]
test_target<- knn_dat_target[1:310,2 ]
m2<-knn(train, test,cl=train_target, k=146)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 310 Argentinasphyraena 
ns$SpeciesQualityCode[ns$new_valid_name=="Argentina"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Argentina"]<-"Species"
ns$estsciname[ns$new_valid_name=="Argentina"]<-"Argentinasphyraena"
ns$estAphia_Code[ns$estsciname=="Argentinasphyraena"]<-126716  
####################################
# 4. Argentinidae "herring smelts" #
####################################
find<-subset(ns, family=="Argentinidae",)
png(filename="ns_herringsmelts_len_dist5_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herring smelts (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_herringsmelts_6_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of herring smelts (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_herringsmelts_7_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_herringsmelts_8_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(as.factor(find$estsciname))
list<-c("Argentinasilus", "Argentinasphyraena")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
21539/10
# training data
21539-2154
train<- knn_dat[1:19385, 3:8]
test<- knn_dat[19386:21539,3:8]
train_target<- knn_dat[1:19385,2 ]
test_target<- knn_dat[19386:21539,2 ]
require(class)
sqrt(21539)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=147)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:21539, 3:8]
test<- knn_dat_target[1:3688,3:8]
train_target<- knn_dat[1:21539,2 ]
test_target<- knn_dat_target[1:3688,2 ]
m2<-knn(train, test,cl=train_target, k=147)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 3618 Argentinasphyraena and 70 Argentinasilus
ns$SpeciesQualityCode[ns$new_valid_name=="Argentinidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Argentinidae"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Argentinasilus"]
ns$estsciname[ns$new_valid_name=="Argentinidae"&ns$New_UniqueID%in%list]<-"Argentinasilus"
ns$estAphia_Code[ns$estsciname=="Argentinasilus"]<-126715  

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Argentinasphyraena"]
ns$estsciname[ns$new_valid_name=="Argentinidae"&ns$New_UniqueID%in%list]<-"Argentinasphyraena"
ns$estAphia_Code[ns$estsciname=="Argentinasphyraena"]<-126716  
###############################
# 5. Arnoglossus, Scaldfish   #
###############################
find<-subset(ns, genus=="Arnoglossus",)
summary(as.factor(find$estsciname))
png(filename="ns_Scaldfish_len_dist5_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scaldfish (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_Scaldfish_6_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Scaldfish (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_Scaldfish_7_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_Scaldfish_8_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(as.factor(find$estsciname))
list<-c("Arnoglossusimperialis", "Arnoglossuslaterna")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
6082/10
# training data
6082-608
train<- knn_dat[1:5474, 3:8]
test<- knn_dat[5475:6082,3:8]
train_target<- knn_dat[1:5474,2 ]
test_target<- knn_dat[5475:6082,2 ]
sqrt(6082)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=78)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:6082, 3:8]
test<- knn_dat_target[1:11,3:8]
train_target<- knn_dat[1:6082,2 ]
test_target<- knn_dat_target[1:11,2 ]
m2<-knn(train, test,cl=train_target, k=78)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 11 Arnoglossuslaterna
ns$SpeciesQualityCode[ns$new_valid_name=="Arnoglossus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Arnoglossus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Arnoglossus"]<-"Arnoglossuslaterna"
ns$estAphia_Code[ns$estsciname=="Arnoglossuslaterna"]<-127126   
###########################
# 6. Blenniidae - blennies#
###########################
####################################
find<-subset(ns, family=="Blenniidae",)
png(filename="ns_blennies_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of blennies (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_blennies_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of blennies (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_blennies_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_blennies_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(as.factor(find$estsciname))
list<-c("Blenniusocellaris", "Parablenniusgattorugine")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
train<- knn_dat[1:5, 3:8]
test<- knn_dat[6:7,3:8]
train_target<- knn_dat[1:5,2 ]
test_target<- knn_dat[6:7,2 ]
require(class)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=5)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:7, 3:8]
test<- knn_dat_target[1:1,3:8]
train_target<- knn_dat[1:7,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=7)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 1 Blenniusocellaris
ns$SpeciesQualityCode[ns$new_valid_name=="Blenniidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Blenniidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Blenniidae"]<-"Blenniusocellaris"
ns$estAphia_Code[ns$estsciname=="Blenniusocellaris"]<-126761   
###########################
# 7. Bothidae -flounders ##
###########################
####################################
find<-subset(ns, family=="Bothidae",)
png(filename="ns_flounders_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of flounders (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_flounders_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of flounders (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_flounders_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_flounders_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Arnoglossuslaterna", "Arnoglossusimperialis")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
6093/10
6093-609
train<- knn_dat[1:5484, 3:8]
test<- knn_dat[5485:6093,3:8]
train_target<- knn_dat[1:5484,2 ]
test_target<- knn_dat[5485:6093,2 ]
sqrt(6093)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=78)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:6093, 3:8]
test<- knn_dat_target[1:11,3:8]
train_target<- knn_dat[1:6093,2 ]
test_target<- knn_dat_target[1:11,2 ]
m2<-knn(train, test,cl=train_target, k=78)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 11 Arnoglossuslaterna
ns$SpeciesQualityCode[ns$new_valid_name=="Bothidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Bothidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Bothidae"]<-"Arnoglossuslaterna"
ns$estAphia_Code[ns$estsciname=="Arnoglossuslaterna"]<-127126    
###############################
# 8. Buglossidium - solenette##
###############################
find<-subset(ns, genus=="Buglossidium",)
summary(as.factor(find$valid_name))
# Only fish in this group is Buglossidiumluteum 
ns$estsciname[ns$new_valid_name=="Buglossidium"]<-"Buglossidiumluteum"
ns$estrank[ns$new_valid_name=="Buglossidium"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Buglossidiumluteum"]<-127153
ns$SpeciesQualityCode[ns$new_valid_name=="Buglossidium"]<-"Genus_to_spp"
######################################################
# 9. Callionymidae and 10. Callionymus - dragonets #
######################################################
find<-subset(ns, family=="Callionymidae",)
summary(as.factor(find$valid_name))

png(filename="ns_dragons_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonets (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_dragons_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of dragons (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_dragons_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_dragons_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
ns$estsciname[ns$new_valid_name=="Callionymus Lyra"]<-"Callionymuslyra"
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))

list<-c("Callionymuslyra", "Callionymusmaculatus", "Callionymusreticulatus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
29811/10
29811-2981
train<- knn_dat[1:26830, 3:8]
test<- knn_dat[26831:29811,3:8]
train_target<- knn_dat[1:26830,2 ]
test_target<- knn_dat[26831:29811,2 ]
sqrt(29811)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=173)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:29811, 3:8]
test<- knn_dat_target[1:263,3:8]
train_target<- knn_dat[1:29811,2 ]
test_target<- knn_dat_target[1:263,2 ]
m2<-knn(train, test,cl=train_target, k=173)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 204 Callionymuslyra and 59 Callionymusmaculatus
ns$SpeciesQualityCode[(ns$new_valid_name=="Callionymidae"|
                        ns$new_valid_name=="Callionymus")]<-"KNN_spp_assignment"
ns$estrank[(ns$new_valid_name=="Callionymidae"|
             ns$new_valid_name=="Callionymus")]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Callionymuslyra"]
ns$estsciname[(ns$new_valid_name=="Callionymidae"|
                ns$new_valid_name=="Callionymus")&ns$New_UniqueID%in%list]<-"Callionymuslyra"
ns$estAphia_Code[ns$estsciname=="Callionymuslyra"]<-126792     

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Callionymusmaculatus"]
ns$estsciname[(ns$new_valid_name=="Callionymidae"|
                ns$new_valid_name=="Callionymus")&ns$New_UniqueID%in%list]<-"Callionymusmaculatus"
ns$estAphia_Code[ns$estsciname=="Callionymusmaculatus"]<-126793    
######################################
set.seed(9850)
str(find)
summary(as.factor(find$estsciname))

list<-c("Callionymuslyra", "Callionymusmaculatus", "Callionymusreticulatus")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
29811/10
29811-2981
train<- knn_dat[1:26830, 3:8]
test<- knn_dat[26831:29811,3:8]
train_target<- knn_dat[1:26830,2 ]
test_target<- knn_dat[26831:29811,2 ]
sqrt(29811)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=173)
knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:29811, 3:8]
test<- knn_dat_target[1:96,3:8]
train_target<- knn_dat[1:29811,2 ]
test_target<- knn_dat_target[1:96,2 ]
m2<-knn(train, test,cl=train_target, k=173)
summary(droplevels(m2))
knn_dat_target$m2<-m2
# Knn predicts 95 Callionymuslyra and 1 Callionymusmaculatus
ns$SpeciesQualityCode[ns$new_valid_name=="Callionymus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Callionymus"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Callionymuslyra"]
ns$estsciname[ns$new_valid_name=="Callionymus"&ns$New_UniqueID%in%list]<-"Callionymuslyra"
ns$estAphia_Code[ns$estsciname=="Callionymuslyra"]<-126792     
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Callionymusmaculatus"]
ns$estsciname[ns$new_valid_name=="Callionymus"&ns$New_UniqueID%in%list]<-"Callionymusmaculatus"
ns$estAphia_Code[ns$estsciname=="Callionymusmaculatus"]<-126793  
################
# no lenght
find<-subset(ns, family=="Callionymidae",)
summary(as.factor(find$estsciname))
list<-c("Callionymuslyra", "Callionymusmaculatus", "Callionymusreticulatus")
knn_dat_target<-subset(find, !estsciname%in%list  ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:29811, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:29811,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=173)
summary(droplevels(m2))
knn_dat_target$m2<-m2
# Knn predicts 68 Callionymuslyra and 1 Callionymusmaculatus
ns$SpeciesQualityCode[ns$new_valid_name=="Callionymus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Callionymus"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Callionymuslyra"]
ns$estsciname[ns$new_valid_name=="Callionymus"&ns$New_UniqueID%in%list]<-"Callionymuslyra"
ns$estAphia_Code[ns$estsciname=="Callionymuslyra"]<-126792     
###################################
#11. Chelidonichthys - gurnards ###
##################################
######################################################
find<-subset(ns, genus=="Chelidonichthys",)
summary(as.factor(find$valid_name))

png(filename="ns_gurnards_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of gurnards (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_gurnards_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of gurnards (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_gurnards_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_gurnards_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Chelidonichthyscuculus", "Chelidonichthyslucerna")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
5632/10
5632-563
train<- knn_dat[1:5069, 3:8]
test<- knn_dat[5070:5632,3:8]
train_target<- knn_dat[1:5069,2 ]
test_target<- knn_dat[5070:5632,2 ]
sqrt(5632)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=75)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:5632, 3:8]
test<- knn_dat_target[1:83,3:8]
train_target<- knn_dat[1:5632,2 ]
test_target<- knn_dat_target[1:83,2 ]
m2<-knn(train, test,cl=train_target, k=75)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 78 Chelidonichthyscuculus and 5 Chelidonichthyslucerna
ns$SpeciesQualityCode[ns$new_valid_name=="Chelidonichthys"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Chelidonichthys"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Chelidonichthyscuculus"]
ns$estsciname[ns$new_valid_name=="Chelidonichthys"&ns$New_UniqueID%in%list]<-"Chelidonichthyscuculus"
ns$estAphia_Code[ns$estsciname=="Chelidonichthyscuculus"]<-127259     

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Chelidonichthyslucerna"]
ns$estsciname[ns$new_valid_name=="Chelidonichthys"&ns$New_UniqueID%in%list]<-"Chelidonichthyslucerna"
ns$estAphia_Code[ns$estsciname=="Chelidonichthyslucerna"]<-127262     
#############################
# 12. "Clupeidae" -8 groups##
#############################
find<-subset(ns, family=="Clupeidae",)
summary(as.factor(find$valid_name))
png(filename="ns_herringetal_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herringetal (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_herringetal_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of herringetal (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_herringetal_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_herringetal_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
ns$estsciname[ns$new_valid_name=="Clupea harengus"]<-"Clupeaharengus"
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Alosaagone", "Alosaalosa", "Alosafallax", "Clupeaharengus", 
        "Sardinapilchardus", "Sprattussprattus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
326321/10
326321-32632
train<- knn_dat[1:293689, 3:8]
test<- knn_dat[293690:326321,3:8]
train_target<- knn_dat[1:293689,2 ]
test_target<- knn_dat[293690:326321,2 ]
sqrt(326321)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=100)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:326321, 3:8]
test<- knn_dat_target[1:16,3:8]
train_target<- knn_dat[1:326321,2 ]
test_target<- knn_dat_target[1:16,2 ]
m2<-knn(train, test,cl=train_target, k=100)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 5 Clupeaharengus and 11 Sprattussprattus
ns$SpeciesQualityCode[ns$new_valid_name=="Clupeidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Clupeidae"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Sprattussprattus"]
ns$estsciname[ns$new_valid_name=="Clupeidae"&ns$New_UniqueID%in%list]<-"Sprattussprattus"
ns$estAphia_Code[ns$estsciname=="Sprattussprattus"]<-126425      

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Clupeaharengus"]
ns$estsciname[ns$new_valid_name=="Clupeidae"&ns$New_UniqueID%in%list]<-"Clupeaharengus"
ns$estAphia_Code[ns$estsciname=="Clupeaharengus"]<-126417     
##############################
find<-subset(ns, family=="Clupeidae",)
list<-c("Alosaagone", "Alosaalosa", "Alosafallax", "Clupeaharengus", 
        "Sardinapilchardus", "Sprattussprattus")
knn_dat_target<-subset(find, !estsciname%in%list,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:326321, 3:6]
test<- knn_dat_target[1:3,3:6]
train_target<- knn_dat[1:326321,2 ]
test_target<- knn_dat_target[1:3,2 ]
m2<-knn(train, test,cl=train_target, k=100)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2 Clupeaharengus and 1 Sprattussprattus
ns$SpeciesQualityCode[ns$new_valid_name=="Clupeidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Clupeidae"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Sprattussprattus"]
ns$estsciname[ns$new_valid_name=="Clupeidae"&ns$New_UniqueID%in%list]<-"Sprattussprattus"
ns$estAphia_Code[ns$estsciname=="Sprattussprattus"]<-126425      

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Clupeaharengus"]
ns$estsciname[ns$new_valid_name=="Clupeidae"&ns$New_UniqueID%in%list]<-"Clupeaharengus"
ns$estAphia_Code[ns$estsciname=="Clupeaharengus"]<-126417
################################################
# 13. "Cottidae"   10 groups do  Triglops first#
################################################
find<-subset(ns, genus=="Triglops",)
summary(as.factor(find$valid_name))
# Only fish in this group is Triglopsmurrayi 
ns$estsciname[ns$new_valid_name=="Triglops"]<-"Triglopsmurrayi"
ns$estrank[ns$new_valid_name=="Triglops"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Triglopsmurrayi"]<-127205 
ns$SpeciesQualityCode[ns$new_valid_name=="Triglops"]<-"Genus_to_spp"
################################################
find<-subset(ns, family=="Cottidae",)
summary(as.factor(find$valid_name))

png(filename="ns_sculpins_len_dist1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sculpins (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_sculpins_2_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sculpins (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_sculpins_3_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_sculpins_4_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
ns$estsciname[ns$estsciname=="Myoxocephalus scorpius"]<-"Myoxocephalusscorpius"
list<-c("Artediellusatlanticus", "Icelusbicornis","Micrenophryslilljeborgii",
        "Myoxocephalusquadricornis","Myoxocephalusscorpioides","Myoxocephalusscorpius",
        "Taurulusbubalis", "Triglopsmurrayi")
knn_dat<-subset(find, estsciname%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
8566/10
8566-857
train<- knn_dat[1:7709, 3:8]
test<- knn_dat[7710:8566,3:8]
train_target<- knn_dat[1:7709,2 ]
test_target<- knn_dat[7710:8566,2 ]
sqrt(8566)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=93)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:8566, 3:8]
test<- knn_dat_target[1:14,3:8]
train_target<- knn_dat[1:8566,2 ]
test_target<- knn_dat_target[1:14,2 ]
m2<-knn(train, test,cl=train_target, k=93)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$m2<-m2
# Knn predicts 14 Myoxocephalusscorpius
ns$SpeciesQualityCode[ns$new_valid_name=="Cottidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Cottidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Cottidae"]<-"Myoxocephalusscorpius"
ns$estAphia_Code[ns$estsciname=="Myoxocephalusscorpius"]<-127203      
#######################
# 14. "Dicentrarchus" #
#######################
find<-subset(ns, genus=="Dicentrarchus",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$new_valid_name=="Dicentrarchus"]<-"Dicentrarchuslabrax"
ns$estrank[ns$new_valid_name=="Dicentrarchus"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Dicentrarchuslabrax"]<-126975
ns$SpeciesQualityCode[ns$new_valid_name=="Dicentrarchus"]<-"Genus_to_spp"
##################
# 15. "Dipturus"##
##################
find<-subset(ns, genus=="Dipturus",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$estsciname=="Dipturus linteus"]<-"Dipturuslinteus"
png(filename="ns_stakes_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of skates (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_skates_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of skates (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_skates_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_skates_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Dipturusbatis", "Dipturuslinteus", "Dipturusoxyrinchus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
163-16
train<- knn_dat[1:147, 3:8]
test<- knn_dat[148:163,3:8]
train_target<- knn_dat[1:147,2 ]
test_target<- knn_dat[148:163,2 ]
sqrt(163)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=12)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:163, 3:8]
test<- knn_dat_target[1:9,3:8]
train_target<- knn_dat[1:163,2 ]
test_target<- knn_dat_target[1:9,2 ]
m2<-knn(train, test,cl=train_target, k=12)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 9 Dipturusbatis
ns$SpeciesQualityCode[ns$new_valid_name=="Dipturus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Dipturus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Dipturus"]<-"Dipturusbatis"
ns$estAphia_Code[ns$estsciname=="Dipturusbatis"]<-105869       
###################
# 16. "Gadiculus" #
###################
find<-subset(ns, genus=="Gadiculus",)
summary(as.factor(find$valid_name))
png(filename="ns_pout_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pout (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_pout_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pout (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_pout_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_pout_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Gadiculusargenteus", "Gadiculusthori")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
4385/10
4385-439
train<- knn_dat[1:3946, 3:8]
test<- knn_dat[3950:4385,3:8]
train_target<- knn_dat[1:3946,2 ]
test_target<- knn_dat[3950:4385,2 ]
sqrt(4385)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=66)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:4385, 3:8]
test<- knn_dat_target[1:1,3:8]
train_target<- knn_dat[1:4385,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=66)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 1 Gadiculusargenteus
ns$SpeciesQualityCode[ns$new_valid_name=="Gadiculus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Gadiculus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Gadiculus"]<-"Gadiculusargenteus"
ns$estAphia_Code[ns$estsciname=="Gadiculusargenteus"]<-126435      
######################
# 17. "Gaidropsarus" #
######################
find<-subset(ns, genus=="Gaidropsarus",)
summary(as.factor(find$valid_name))

png(filename="ns_lotid_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of lotid (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_lotid_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of lotid (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_lotid_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_lotid_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Gaidropsarusargentatus", "Gaidropsarusmacrophthalmus",
        "Gaidropsarusmediterraneus", "Gaidropsarusvulgaris")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
289/10
289-29
train<- knn_dat[1:260, 3:8]
test<- knn_dat[261:289,3:8]
train_target<- knn_dat[1:260,2 ]
test_target<- knn_dat[261:289,2 ]
sqrt(289)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=17)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:289, 3:8]
test<- knn_dat_target[1:4,3:8]
train_target<- knn_dat[1:289,2 ]
test_target<- knn_dat_target[1:4,2 ]
m2<-knn(train, test,cl=train_target, k=17)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 4 Gaidropsarusvulgaris
ns$SpeciesQualityCode[ns$new_valid_name=="Gaidropsarus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Gaidropsarus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Gaidropsarus"]<-"Gaidropsarusvulgaris"
ns$estAphia_Code[ns$estsciname=="Gaidropsarusvulgaris"]<-126458       
#######################
# 18."Gasterosteidae" #
#######################
find<-subset(ns, family=="Gasterosteidae",)
summary(as.factor(find$valid_name))
png(filename="ns_Stickleback_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Stickleback (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_Stickleback_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Stickleback (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_Stickleback_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_Stickleback_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Gasterosteusaculeatusaculeatus", "Gasterosteusaculeatuswilliamsoni",
        "Spinachiaspinachia")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
748/10
748-75
train<- knn_dat[1:673, 3:8]
test<- knn_dat[674:748,3:8]
train_target<- knn_dat[1:673,2 ]
test_target<- knn_dat[674:748,2 ]
sqrt(748)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=27)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:748, 3:8]
test<- knn_dat_target[1:3,3:8]
train_target<- knn_dat[1:748,2 ]
test_target<- knn_dat_target[1:3,2 ]
m2<-knn(train, test,cl=train_target, k=27)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 3  Gasterosteusaculeatusaculeatus
ns$SpeciesQualityCode[ns$new_valid_name=="Gasterosteidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Gasterosteidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Gasterosteidae"]<-"Gasterosteusaculeatusaculeatus"
ns$estAphia_Code[ns$estsciname=="Gasterosteusaculeatusaculeatus"]<-236462        
#################
# 19. "Liparis" #
#################
find<-subset(ns, genus=="Liparis",)
summary(as.factor(find$valid_name))
png(filename="ns_snailfish_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of snailfish (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_snailfish_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of snailfish (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_snailfish_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_snailfish_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
ns$estsciname[ns$new_valid_name=="Liparis liparis liparis"]<-"Liparisliparisliparis"
list<-c("Liparisliparisliparis", "Liparismontagui")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
1111/10
1111-111
train<- knn_dat[1:1000, 3:8]
test<- knn_dat[1001:1111,3:8]
train_target<- knn_dat[1:1000,2 ]
test_target<- knn_dat[1001:1111,2 ]
sqrt(1111)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=33)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1111, 3:8]
test<- knn_dat_target[1:40,3:8]
train_target<- knn_dat[1:1111,2 ]
test_target<- knn_dat_target[1:40,2 ]
m2<-knn(train, test,cl=train_target, k=33)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 40  Liparisliparisliparis
ns$SpeciesQualityCode[ns$new_valid_name=="Liparis"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Liparis"]<-"Species"
ns$estsciname[ns$new_valid_name=="Liparis"]<-"Liparisliparisliparis"
ns$estAphia_Code[ns$estsciname=="Liparisliparisliparis"]<-293624         
###################
# 20. "Lophiidae" #
###################
find<-subset(ns, family=="Lophiidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_monkfish_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of monkfish (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_monkfish_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of monfish (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_monkfish_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_monkfish_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Lophiusbudegassa", "Lophiuspiscatorius")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
5790/10
5790-579
train<- knn_dat[1:5211, 3:8]
test<- knn_dat[5212:5790,3:8]
train_target<- knn_dat[1:5211,2 ]
test_target<- knn_dat[5212:5790,2 ]
sqrt(5790)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=76)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:5790, 3:8]
test<- knn_dat_target[1:2,3:8]
train_target<- knn_dat[1:5790,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=76)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 3  Gasterosteusaculeatusaculeatus
ns$SpeciesQualityCode[ns$new_valid_name=="Lophiidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Lophiidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Lophiidae"]<-"Lophiuspiscatorius"
ns$estAphia_Code[ns$estsciname=="Lophiuspiscatorius"]<-126555         
################
# 21."Lycodes" #
################
find<-subset(ns, genus=="Lycodes",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_Lycodes_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Lycodes (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_Lycodes_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Lycodes (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_Lycodes_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_Lycodes_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Lycodesgracilis", "Lycodesvahlii")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
3889/10
3889-389
train<- knn_dat[1:3500, 3:8]
test<- knn_dat[3501:3889,3:8]
train_target<- knn_dat[1:3500,2 ]
test_target<- knn_dat[3501:3889,2 ]
sqrt(3889)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=62)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:3889, 3:8]
test<- knn_dat_target[1:2,3:8]
train_target<- knn_dat[1:3889,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=62)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 3  Gasterosteusaculeatusaculeatus
ns$SpeciesQualityCode[ns$new_valid_name=="Lycodes"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Lycodes"]<-"Species"
ns$estsciname[ns$new_valid_name=="Lycodes"]<-"Lycodesvahlii"
ns$estAphia_Code[ns$estsciname=="Lycodesvahlii"]<-127118         
#####################
# 22. "Microchirus"##
#####################
find<-subset(ns, genus=="Microchirus",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$new_valid_name=="Microchirus"]<-"Microchirusvariegatus"
ns$estrank[ns$new_valid_name=="Microchirus"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Microchirusvariegatus"]<-274304
ns$SpeciesQualityCode[ns$new_valid_name=="Microchirus"]<-"Genus_to_spp"
##################
# 23."Mugilidae"##
##################
find<-subset(ns, family=="Mugilidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_mullets_len_dist1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of mullets (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_mullets_2_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of mullets (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_mullets_3_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_mullets_4_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Chelonlabrosus", "Lizaaurata", "Lizaramada","Mugilcephalus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
28/10
28-3
train<- knn_dat[1:25, 3:8]
test<- knn_dat[26:28,3:8]
train_target<- knn_dat[1:25,2 ]
test_target<- knn_dat[26:28,2 ]
sqrt(28)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=10)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:28, 3:8]
test<- knn_dat_target[1:2,3:8]
train_target<- knn_dat[1:28,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2  Lizaaurata
ns$SpeciesQualityCode[ns$new_valid_name=="Mugilidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Mugilidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Mugilidae"]<-"Lizaaurata"
ns$estAphia_Code[ns$estsciname=="Lizaaurata"]<-126978          
###############
# 24."Mullus"##
###############
find<-subset(ns, genus=="Mullus",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_Mullus_len_dist1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Mullus (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_Mullus_2_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Mullus (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_Mullus_3_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_Mullus_4_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Mullusbarbatusbarbatus", "Mullussurmuletus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
3543/10
3543-354
train<- knn_dat[1:3189, 3:8]
test<- knn_dat[3190:3543,3:8]
train_target<- knn_dat[1:3189,2 ]
test_target<- knn_dat[3190:3543,2 ]
sqrt(3543)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=59)

knn_dat_target<-subset(find, !estsciname%in%list ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:3543, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:3543,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=59)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 1  Mullussurmuletus
ns$SpeciesQualityCode[ns$new_valid_name=="Mullus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Mullus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Mullus"]<-"Mullussurmuletus"
ns$estAphia_Code[ns$estsciname=="Mullussurmuletus"]<-126986         
################
# 25."Mustelus"#
################
find<-subset(ns, genus=="Mustelus",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_smoothhound_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of smooth hound (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_smoothhound_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of smoothhound (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_smoothhound_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_smoothhound_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Mustelusasterias", "Mustelusmustelus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
2261/10
2261-226
train<- knn_dat[1:2035, 3:8]
test<- knn_dat[2036:2261,3:8]
train_target<- knn_dat[1:2035,2 ]
test_target<- knn_dat[2036:2261,2 ]
sqrt(2261)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=48)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:2261, 3:8]
test<- knn_dat_target[1:147,3:8]
train_target<- knn_dat[1:2261,2 ]
test_target<- knn_dat_target[1:147,2 ]
m2<-knn(train, test,cl=train_target, k=48)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 112 Mustelusasterias 35 Mustelusmustelus 
ns$SpeciesQualityCode[ns$new_valid_name=="Mustelus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Mustelus"]<-"Species"
      
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Mustelusasterias"]
ns$estsciname[ns$new_valid_name=="Mustelus"&ns$New_UniqueID%in%list]<-"Mustelusasterias"
ns$estAphia_Code[ns$estsciname=="Mustelusasterias"]<-105821     

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Mustelusmustelus"]
ns$estsciname[ns$new_valid_name=="Mustelus"&ns$New_UniqueID%in%list]<-"Mustelusmustelus"
ns$estAphia_Code[ns$estsciname=="Mustelusmustelus"]<-105822      
#################
# 26."Phycidae"##
#################
find<-subset(ns, family=="Phycidae",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$new_valid_name=="Phycidae"]<-"Phycisblennoides"
ns$estrank[ns$new_valid_name=="Phycidae"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Phycisblennoides"]<-126501
ns$SpeciesQualityCode[ns$new_valid_name=="Phycidae"]<-"Genus_to_spp"
##############
# 27. "Raja" #
##############
find<-subset(ns, genus=="Raja",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_rays_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of rays (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_rays_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of rays (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_rays_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_rays_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Rajabrachyura", "Rajaclavata","Rajamicroocellata","Rajamontagui",
        "Rajaundulata")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
6854/10
6854-685
train<- knn_dat[1:6169, 3:8]
test<- knn_dat[6170:6854,3:8]
train_target<- knn_dat[1:6169,2 ]
test_target<- knn_dat[6170:6854,2 ]
sqrt(6854)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=83)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:6854, 3:8]
test<- knn_dat_target[1:39,3:8]
train_target<- knn_dat[1:6854,2 ]
test_target<- knn_dat_target[1:39,2 ]
m2<-knn(train, test,cl=train_target, k=83)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 28 Rajaclavata and 11 Rajamontagui
ns$SpeciesQualityCode[ns$new_valid_name=="Raja"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Raja"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajaclavata"]
ns$estsciname[ns$new_valid_name=="Raja"&ns$New_UniqueID%in%list]<-"Rajaclavata"
ns$estAphia_Code[ns$estsciname=="Rajaclavata"]<-105883      

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajamontagui"]
ns$estsciname[ns$new_valid_name=="Raja"&ns$New_UniqueID%in%list]<-"Rajamontagui"
ns$estAphia_Code[ns$estsciname=="Rajamontagui"]<-105887            
# more RAJA to sort
knn_dat_target<-subset(find, !estsciname%in%list ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:6854, 3:6]
test<- knn_dat_target[1:35,3:6]
train_target<- knn_dat[1:6854,2 ]
test_target<- knn_dat_target[1:35,2 ]
m2<-knn(train, test,cl=train_target, k=83)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 26 Rajaclavata and 9 Rajamontagui
ns$SpeciesQualityCode[ns$new_valid_name=="Raja"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Raja"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajaclavata"]
ns$estsciname[ns$new_valid_name=="Raja"&ns$New_UniqueID%in%list]<-"Rajaclavata"
ns$estAphia_Code[ns$estsciname=="Rajaclavata"]<-105883      

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajamontagui"]
ns$estsciname[ns$new_valid_name=="Raja"&ns$New_UniqueID%in%list]<-"Rajamontagui"
ns$estAphia_Code[ns$estsciname=="Rajamontagui"]<-105887           
##################
# 28. "Rajidae"###
#################
find<-subset(ns, family=="Rajidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_RAY_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of rays (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_RAY_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of rays (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_RAY_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_RAY_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c(  "Amblyrajaradiata","Dipturusbatis","Dipturuslinteus",
          "Dipturusoxyrinchus","Leucorajacircularis",
          "Leucorajafullonica","Leucorajanaevus", "Rajabrachyura",
          "Rajaclavata" ,  "Rajamicroocellata",   "Rajamontagui",
          "Rajaundulata")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
35657/10
35657-3566
train<- knn_dat[1:32091, 3:8]
test<- knn_dat[32092:35657,3:8]
train_target<- knn_dat[1:32091,2 ]
test_target<- knn_dat[32092:35657,2 ]
sqrt(35657)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=189)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# 16 rays have lenght information
# training data
train<- knn_dat[1:35657, 3:8]
test<- knn_dat_target[1:16,3:8]
train_target<- knn_dat[1:35657,2 ]
test_target<- knn_dat_target[1:16,2 ]
m2<-knn(train, test,cl=train_target, k=189)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 8 Amblyrajaradiata 2 Leucorajanaevus
# 5   Rajaclavata   1  Rajamontagui 
ns$SpeciesQualityCode[ns$new_valid_name=="Rajidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Rajidae"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajaclavata"]
ns$estsciname[ns$new_valid_name=="Rajidae"&ns$New_UniqueID%in%list]<-"Rajaclavata"
ns$estAphia_Code[ns$estsciname=="Rajaclavata"]<-105883      

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajamontagui"]
ns$estsciname[ns$new_valid_name=="Rajidae"&ns$New_UniqueID%in%list]<-"Rajamontagui"
ns$estAphia_Code[ns$estsciname=="Rajamontagui"]<-105887              

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Rajamontagui"]
ns$estsciname[ns$new_valid_name=="Rajidae"&ns$New_UniqueID%in%list]<-"Rajamontagui"
ns$estAphia_Code[ns$estsciname=="Rajamontagui"]<-105887   
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Leucorajanaevus"]
ns$estsciname[ns$new_valid_name=="Rajidae"&ns$New_UniqueID%in%list]<-"Leucorajanaevus"
ns$estAphia_Code[ns$estsciname=="Leucorajanaevus"]<-105876   
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Amblyrajaradiata"]
ns$estsciname[ns$new_valid_name=="Rajidae"&ns$New_UniqueID%in%list]<-"Amblyrajaradiata"
ns$estAphia_Code[ns$estsciname=="Amblyrajaradiata"]<-105865  
######################
# 29. "Scyliorhinus" # 
#####################
find<-subset(ns, genus=="Scyliorhinus",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_catshark_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of catshark (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_catshark_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of catshark (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_catshark_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_catshark_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Scyliorhinuscanicula", "Scyliorhinusstellaris")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
14850/10
14850-1485
train<- knn_dat[1:13365, 3:8]
test<- knn_dat[13366:14850,3:8]
train_target<- knn_dat[1:13365,2 ]
test_target<- knn_dat[13366:14850,2 ]
sqrt(14850)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=121)

knn_dat_target<-subset(find, !estsciname%in%list,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:14850, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:14850,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=121)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 1  Scyliorhinuscanicula
ns$SpeciesQualityCode[ns$new_valid_name=="Scyliorhinus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Scyliorhinus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Scyliorhinus"]<-"Scyliorhinuscanicula"
ns$estAphia_Code[ns$estsciname=="Scyliorhinuscanicula"]<-105814         
#################
# 30. "Sebastes"#
#################
find<-subset(ns, genus=="Sebastes",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_rockfish_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of rockfish (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_rockfish_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of rockfish (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_rockfish_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_rockfish_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Sebastesnorvegicus", "Sebastesviviparus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
1403/10
1403-140
train<- knn_dat[1:1263, 3:8]
test<- knn_dat[1264:1403,3:8]
train_target<- knn_dat[1:1263,2 ]
test_target<- knn_dat[1264:1403,2 ]
sqrt(1403)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=37)

knn_dat_target<-subset(find, !estsciname%in%list,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1403, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:1403,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=37)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 1 Sebastesviviparus
ns$SpeciesQualityCode[ns$new_valid_name=="Sebastes"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Sebastes"]<-"Species"
ns$estsciname[ns$new_valid_name=="Sebastes"]<-"Sebastesviviparus"
ns$estAphia_Code[ns$estsciname=="Sebastesviviparus"]<-127255          
####################
# 31. "Soleidae" ###
####################
find<-subset(ns, family=="Soleidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_soles_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of soles (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_soles_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sole (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_sole_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_sole_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
ns$estsciname[ns$estsciname=="Solea solea"]<- "Soleasolea"
ns$estsciname[ns$estsciname=="Microchirus variegatus"]<- "Microchirusvariegatus"
list<-c("Buglossidiumluteum", "Microchirusvariegatus", "Pegusalascaris",
        "Soleasolea")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
16764/10
16764-1676
train<- knn_dat[1:15089, 3:8]
test<- knn_dat[15090:16764,3:8]
train_target<- knn_dat[1:15089,2 ]
test_target<- knn_dat[15090:16764,2 ]
sqrt(16764)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=129)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:16764, 3:8]
test<- knn_dat_target[1:80,3:8]
train_target<- knn_dat[1:16764,2 ]
test_target<- knn_dat_target[1:80,2 ]
m2<-knn(train, test,cl=train_target, k=129)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 68  Buglossidiumluteum and 12 Soleasolea
ns$SpeciesQualityCode[ns$new_valid_name=="Soleidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Soleidae"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Buglossidiumluteum"]
ns$estsciname[ns$new_valid_name=="Soleidae"&ns$New_UniqueID%in%list]<-"Buglossidiumluteum"
ns$estAphia_Code[ns$estsciname=="Buglossidiumluteum"]<-127153       

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Soleasolea"]
ns$estsciname[ns$new_valid_name=="Soleidae"&ns$New_UniqueID%in%list]<-"Soleasolea"
ns$estAphia_Code[ns$estsciname=="Soleasolea"]<-127160               
##################
# 32. "Sparidae" #
##################
find<-subset(ns, family=="Sparidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_porgies_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of porgies (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_porgies_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of porgies (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_porgies_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_porgies_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Pagelluserythrinus", "Sarpasalpa", "Spondyliosomacantharus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
86/10
86-9
train<- knn_dat[1:77, 3:8]
test<- knn_dat[78:86,3:8]
train_target<- knn_dat[1:77,2 ]
test_target<- knn_dat[78:86,2 ]
sqrt(86)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=10)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:86, 3:8]
test<- knn_dat_target[1:2,3:8]
train_target<- knn_dat[1:86,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 2 Spondyliosomacantharus
ns$SpeciesQualityCode[ns$new_valid_name=="Sparidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Sparidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Sparidae"]<-"Spondyliosomacantharus"
ns$estAphia_Code[ns$estsciname=="Spondyliosomacantharus"]<-127066         

###################
# 33. "Squalidae" #
###################
find<-subset(ns, family=="Squalidae",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$new_valid_name=="Squalidae"]<-"Squalusacanthias"
ns$estrank[ns$new_valid_name=="Squalidae"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Squalusacanthias"]<-105923
ns$SpeciesQualityCode[ns$new_valid_name=="Squalidae"]<-"Genus_to_spp"
#######################
# 34. "Stichaeidae"####
######################
find<-subset(ns, family=="Stichaeidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_pricklebacks_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pricklebacks (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_pricklebacks_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pricklebacks (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_pricklebacks_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_Lpricklebacks_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
ns$estsciname[ns$estsciname=="Lumpenus lampretaeformis"]<-"Lumpenuslampretaeformis"
list<-c("Chirolophisascanii", "Leptoclinusmaculatus", "Lumpenuslampretaeformis")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
5283/10
5283-528
train<- knn_dat[1:4755, 3:8]
test<- knn_dat[4756:5283,3:8]
train_target<- knn_dat[1:4755,2 ]
test_target<- knn_dat[4756:5283,2 ]
sqrt(5283)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=73)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:5283, 3:8]
test<- knn_dat_target[1:3,3:8]
train_target<- knn_dat[1:5283,2 ]
test_target<- knn_dat_target[1:3,2 ]
m2<-knn(train, test,cl=train_target, k=73)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 3  Lumpenuslampretaeformis
ns$SpeciesQualityCode[ns$new_valid_name=="Stichaeidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Stichaeidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Stichaeidae"]<-"Lumpenuslampretaeformis"
ns$estAphia_Code[ns$estsciname=="Lumpenuslampretaeformis"]<-154675          
######################
# 35. "Syngnathidae"##
######################
find<-subset(ns, family=="Syngnathidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_pipefishes_len_dist1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefishes (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_pipefishes_2_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pipefishes (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_pipefishes_3_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_pipefishes_4_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
ns$estsciname[ns$estsciname=="Entelurus aequoreus"]<-"Entelurusaequoreus"
list<-c("Entelurusaequoreus", "Hippocampushippocampus", "Nerophislumbriciformis",
        "Nerophisophidion", "Syngnathusacus", "Syngnathusrostellatus", "Syngnathustyphle")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
5475/10
5475-548
train<- knn_dat[1:4927, 3:8]
test<- knn_dat[4928:5475,3:8]
train_target<- knn_dat[1:4927,2 ]
test_target<- knn_dat[4928:5475,2 ]
sqrt(5475)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=74)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:5475, 3:8]
test<- knn_dat_target[1:285,3:8]
train_target<- knn_dat[1:5475,2 ]
test_target<- knn_dat_target[1:285,2 ]
m2<-knn(train, test,cl=train_target, k=74)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 28 Entelurusaequoreus, 21 Syngnathusacus, 236 Syngnathusrostellatus
ns$SpeciesQualityCode[ns$new_valid_name=="Syngnathidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Syngnathidae"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Entelurusaequoreus"]
ns$estsciname[ns$new_valid_name=="Syngnathidae"&ns$New_UniqueID%in%list]<-"Entelurusaequoreus"
ns$estAphia_Code[ns$estsciname=="Entelurusaequoreus"]<-127379       

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusacus"]
ns$estsciname[ns$new_valid_name=="Syngnathidae"&ns$New_UniqueID%in%list]<-"Syngnathusacus"
ns$estAphia_Code[ns$estsciname=="Syngnathusacus"]<-127387            
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusrostellatus"]
ns$estsciname[ns$new_valid_name=="Syngnathidae"&ns$New_UniqueID%in%list]<-"Syngnathusrostellatus"
ns$estAphia_Code[ns$estsciname=="Syngnathusrostellatus"]<-127389   
### on fish has no lenght info
find<-subset(ns, family=="Syngnathidae",)
summary(as.factor(find$estsciname))
knn_dat_target<-subset(find, !estsciname%in%list,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:5475, 3:6]
test<- knn_dat_target[1:286,3:6]
train_target<- knn_dat[1:5475,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=74)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 1 Entelurusaequoreus
ns$SpeciesQualityCode[ns$new_valid_name=="Syngnathidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Syngnathidae"]<-"Species"

list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Entelurusaequoreus"]
ns$estsciname[ns$new_valid_name=="Syngnathidae"]<-"Entelurusaequoreus"
ns$estAphia_Code[ns$estsciname=="Entelurusaequoreus"]<-127379       
#####################
# 36.  "Syngnathus" #
#####################
find<-subset(ns, genus=="Syngnathus",)
summary(as.factor(find$estsciname))
#######################
png(filename="ns_pipefish_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefish (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_pipefish_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pipefish (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_pipefish_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_pipefish_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Syngnathusacus", "Syngnathusrostellatus", "Syngnathustyphle")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
1488/10
1488-149
train<- knn_dat[1:1339, 3:8]
test<- knn_dat[1340:1488,3:8]
train_target<- knn_dat[1:1339,2 ]
test_target<- knn_dat[1340:1488,2 ]
sqrt(1488)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=39)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1488, 3:8]
test<- knn_dat_target[1:15,3:8]
train_target<- knn_dat[1:1488,2 ]
test_target<- knn_dat_target[1:15,2 ]
m2<-knn(train, test,cl=train_target, k=39)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 5 Syngnathusacus and 10 Syngnathusrostellatus
ns$SpeciesQualityCode[ns$new_valid_name=="Syngnathus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Syngnathus"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusacus"]
ns$estsciname[ns$new_valid_name=="Syngnathus"&ns$New_UniqueID%in%list]<-"Syngnathusacus"
ns$estAphia_Code[ns$estsciname=="Syngnathusacus"]<-127387          
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusrostellatus"]
ns$estsciname[ns$new_valid_name=="Syngnathus"&ns$New_UniqueID%in%list]<-"Syngnathusrostellatus"
ns$estAphia_Code[ns$estsciname=="Syngnathusrostellatus"]<-127389    
####################
knn_dat_target<-subset(find, !estsciname%in%list,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:1488, 3:6]
test<- knn_dat_target[1:2,3:6]
train_target<- knn_dat[1:1488,2 ]
test_target<- knn_dat_target[1:2,2 ]
m2<-knn(train, test,cl=train_target, k=39)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 5 Syngnathusacus and 10 Syngnathusrostellatus
ns$SpeciesQualityCode[ns$new_valid_name=="Syngnathus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Syngnathus"]<-"Species"
list<-knn_dat_target$New_UniqueID[knn_dat_target$m2=="Syngnathusacus"]
ns$estsciname[ns$new_valid_name=="Syngnathus"&ns$New_UniqueID%in%list]<-"Syngnathusacus"
ns$estAphia_Code[ns$estsciname=="Syngnathusacus"]<-127387          
####################
# 37. "Triglidae" ##
####################
find<-subset(ns, family=="Triglidae",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_searobin_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of searobin (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_searobins_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of searobins (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_searobins_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_searobins_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Chelidonichthyscuculus", "Chelidonichthyslucerna", "Eutriglagurnardus",
        "Triglalyra", "Trigloporuslastoviza")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
142567/10
142567-14257
train<- knn_dat[1:128310, 3:8]
test<- knn_dat[128311:142567,3:8]
train_target<- knn_dat[1:128310,2 ]
test_target<- knn_dat[128311:142567,2 ]
sqrt(142567)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=100)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:142567, 3:8]
test<- knn_dat_target[1:171,3:8]
train_target<- knn_dat[1:142567,2 ]
test_target<- knn_dat_target[1:171,2 ]
m2<-knn(train, test,cl=train_target, k=100)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 171 Eutriglagurnardus
ns$SpeciesQualityCode[ns$new_valid_name=="Triglidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Triglidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Triglidae"]<-"Eutriglagurnardus"
ns$estAphia_Code[ns$estsciname=="Eutriglagurnardus"]<-150637         
#################
# 38. "Zeidae" ##
################
find<-subset(ns, family=="Zeidae",)
summary(as.factor(find$valid_name))
ns$estsciname[ns$new_valid_name=="Zeidae"]<-"Zeusfaber"
ns$estrank[ns$new_valid_name=="Zeidae"]<-"Species"
ns$estAphia_Code[ns$estsciname=="Zeusfaber"]<-127427
ns$SpeciesQualityCode[ns$new_valid_name=="Zeidae"]<-"Genus_to_spp"
######################
# 39.  "Zeugopterus" #
######################
find<-subset(ns, genus=="Zeugopterus",)
summary(as.factor(find$valid_name))
#######################
png(filename="ns_turbots_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of turbots (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_turbots_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of turbots (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_turbots_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_turbots_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Zeugopteruspunctatus", "Zeugopterusregius")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
162/10
162-16
train<- knn_dat[1:146, 3:8]
test<- knn_dat[147:162,3:8]
train_target<- knn_dat[1:146,2 ]
test_target<- knn_dat[147:162,2 ]
sqrt(162)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=13)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:162, 3:8]
test<- knn_dat_target[1:7,3:8]
train_target<- knn_dat[1:162,2 ]
test_target<- knn_dat_target[1:7,2 ]
m2<-knn(train, test,cl=train_target, k=13)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 7  Zeugopteruspunctatus
ns$SpeciesQualityCode[ns$new_valid_name=="Zeugopterus"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Zeugopterus"]<-"Species"
ns$estsciname[ns$new_valid_name=="Zeugopterus"]<-"Zeugopteruspunctatus"
ns$estAphia_Code[ns$estsciname=="Zeugopteruspunctatus"]<-127151          
####################
# 40.  "Zoarcidae"#
###################
find<-subset(ns, family=="Zoarcidae",)
summary(as.factor(find$valid_name))
png(filename="ns_eelpout_len_dist1_15-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of eelpout (NS)")+
  theme_classic()
dev.off()

summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="NS_lenght_dist_eelpout_2_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of eelpout (NS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="NS_lenght_dist_eelpout_3_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="NS_lenght_dist_eelpout_4_15-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$estsciname<-as.factor(find$estsciname)
summary(as.factor(find$estsciname))
list<-c("Lycenchelyssarsii", "Lycodesgracilis", "Lycodesvahlii", "Zoarcesviviparus")
knn_dat<-subset(find, estsciname%in%list & !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,estsciname,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
4501/10
4501-45
train<- knn_dat[1:4456, 3:8]
test<- knn_dat[4457:4501,3:8]
train_target<- knn_dat[1:4456,2 ]
test_target<- knn_dat[4457:4501,2 ]
sqrt(4501)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=67)

knn_dat_target<-subset(find, !estsciname%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,estsciname,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# training data
train<- knn_dat[1:4501, 3:8]
test<- knn_dat_target[1:3,3:8]
train_target<- knn_dat[1:4501,2 ]
test_target<- knn_dat_target[1:3,2 ]
m2<-knn(train, test,cl=train_target, k=67)
summary(droplevels(m2))
t2<-(table(test_target, m2))
knn_dat_target$m2<-m2
# Knn predicts 3 Lycodesvahlii
ns$SpeciesQualityCode[ns$new_valid_name=="Zoarcidae"]<-"KNN_spp_assignment"
ns$estrank[ns$new_valid_name=="Zoarcidae"]<-"Species"
ns$estsciname[ns$new_valid_name=="Zoarcidae"]<-"Lycodesvahlii"
ns$estAphia_Code[ns$estsciname=="Lycodesvahlii"]<-127118      
#########################
# Sort out lenghts next #
#########################
summary(as.factor(ns$SpecVal))
####################################
# Recheck Lmax with new fishes names 
# Recheck Lmax with new fishes names
testns<-ns
names(maxdata)
testns$LmaxFB<-NULL
testns$WoRMSacceptedScientificNa<-NULL
testns$Aphia_Code<-NULL
testns<-join(testns, maxdata, by="estAphia_Code")
test1 <- testns[ which(testns$Use_Lenght_cm1 > testns$LmaxFB*1.1),]
test2 <- testns[ which(testns$Use_Lenght_cm1 > testns$LmaxFB*1.4),]
# 20 fish assigned names that exceeds lmax
# need to be changed 
# E. Vipera - lesser weever are most likely greater weeverr
# T. draco
ns$estsciname[ns$estsciname=="Echiichthysvipera"&ns$Use_Lenght_cm1>22.5]<-"Trachinusdraco"
ns$estAphia_Code[ns$estsciname=="Trachinusdraco"]<-127082 
# C. maculatus more likely to be C.lyra
ns$estsciname[ns$estsciname=="Callionymusmaculatus"&ns$Use_Lenght_cm1>22.5]<-"Callionymuslyra"
ns$estAphia_Code[ns$estsciname=="Callionymuslyra"]<-126792  
# S. rostellus more likely to be S.acus - greater pipefish
ns$estsciname[ns$estsciname=="Syngnathusrostellatus"&ns$Use_Lenght_cm1>23.5]<-"Syngnathusacus"
ns$estAphia_Code[ns$estsciname=="Syngnathusacus"]<-127387   
# Lepadogasterlepadogaster no idea what that is likely to be!!!

summary(as.factor(ns$SpecVal))

# Use a KNN classification to find an approperiate lenght of fish
no_lenght<-subset(ns, is.na(Use_Lenght_cm1),)
# 1206 observations needing lenghts 

summary(as.factor(no_lenght$estsciname))
list<-unique(as.factor(no_lenght$estsciname))
list<-unique(as.factor(ns$estsciname))
####################################################################
# Need to get lenghts for 75 different species (1206) observations ##
####################################################################
# Callionymuslyra                Hippoglossoidesplatessoides   
# Limandalimanda                 Eutriglagurnardus             
# Agonuscataphractus             Myoxocephalusscorpius         
# Enchelyopuscimbrius            Microstomuskitt               
# Glyptocephaluscynoglossus      Trisopterusminutus            
# Trisopterusesmarkii            Pleuronectesplatessa          
# Sprattussprattus               Scophthalmusmaximus           
# Amblyrajaradiata               Lycodesvahlii                 
# Argentinasphyraena             Scomberscombrus               
# Squalusacanthias               Pollachiusvirens              
# Sebastesviviparus              Lophiuspiscatorius            
# Anarhichaslupus                Merlucciusmerluccius          
# Gadiculusargenteus             Micromesistiuspoutassou       
# Engraulisencrasicolus          Molvamolva                    
# Dipturusbatis                  Scophthalmusrhombus           
# Cyclopteruslumpus              Soleasolea                    
# Platichthysflesus              Zoarcesviviparus              
# Ammodytes                      Gobiidae                      
# Maurolicusmuelleri             Leucorajanaevus               
# Echiichthysvipera              Clupeaharengus                
# Gasterosteusaculeatusaculeatus Rajaclavata                   
# Trachinusdraco                 Chimaeramonstrosa             
# Callionymusmaculatus           Merlangiusmerlangus           
# Gadusmorhua                    Galeorhinusgaleus             
# Taurulusbubalis                Trachurustrachurus            
# Brosmebrosme                   Rajamontagui                  
# Scyliorhinuscanicula           Chelidonichthyscuculus        
# Liparisliparisliparis          Hyperoplus                    
# Buglossidiumluteum             Arnoglossuslaterna            
# Osmeruseperlanus               Gaidropsarusvulgaris          
# Pholisgunnellus                Zeugopteruspunctatus          
# Spinachiaspinachia             Syngnathusacus                
# Myxineglutinosa                Ciliatamustela                
# Trisopterusluscus              Entelurusaequoreus            
# Acipensersturio                Centrophorusgranulosus        
# Hippocampushippocampus         Syngnathusrostellatus         
# Melanogrammusaeglefinus        Mullussurmuletus              
# Zeugopterusregius       
###################
## get a length ##
##################
#Acipensersturio##
#######################
find<-subset(ns, estsciname=="Acipensersturio",)

png(filename="len_dist_sturgen_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sturgen (ns))") +
  theme_classic()
dev.off()
# only one sturgon recorded in time series!!!
# common length from fish base used 125 cm
ns$Use_Lenght_cm1[ns$estsciname=="Acipensersturio"&is.na(ns$Use_Lenght_cm)]<-125
#####################
# Entelurusaequoreus#
#####################
#######################
find<-subset(ns, estsciname=="Entelurusaequoreus",)

png(filename="len_dist_snakepipe_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of snake pipefish (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
train<- knn_dat[1:4240, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:4240,8]
test_target<-knn_dat_target[1:1,8]
sqrt(4240)
m2<-knn(train, test, cl=train_target, k=65)
knn_dat_target$lenght_Norm<-(m2)
(0.108550636749545*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Entelurusaequoreus"&is.na(ns$Use_Lenght_cm)]<-36
#######################
#Syngnathusrostellatus#
#######################
find<-subset(ns, estsciname=="Syngnathusrostellatus",)

png(filename="len_dist_pipe_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefish (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
train<- knn_dat[1:647, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:647,8]
test_target<-knn_dat_target[1:1,8]
sqrt(647)
m2<-knn(train, test, cl=train_target, k=25)
knn_dat_target$lenght_Norm<-(m2)
(0.0327471194663432*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Syngnathusrostellatus"&is.na(ns$Use_Lenght_cm)]<-11
#######################
#Spinachiaspinachia ###
#######################
find<-subset(ns, estsciname=="Spinachiaspinachia",)

png(filename="len_dist_stickleback_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of stickelback (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
summary(find$Use_Lenght_cm1)
train<- knn_dat[1:68, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:68,8]
test_target<-knn_dat_target[1:1,8]
sqrt(68)
m2<-knn(train, test, cl=train_target, k=10)
knn_dat_target$lenght_Norm<-(m2)
(0.0145542753183748*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Spinachiaspinachia"&is.na(ns$Use_Lenght_cm)]<-5
#######################
#Chimaeramonstrosa   #
#######################
find<-subset(ns, estsciname=="Chimaeramonstrosa",)

png(filename="len_dist_rabbitfish_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of rabbitfish (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:342, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:342,8]
test_target<-knn_dat_target[1:1,8]
sqrt(342)
m2<-knn(train, test, cl=train_target, k=18)
knn_dat_target$lenght_Norm<-(m2)
(0.0994542146755609*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Chimaeramonstrosa"&is.na(ns$Use_Lenght_cm)]<-33
#########################
#Chelidonichthyscuculus #
#########################
find<-subset(ns, estsciname=="Chelidonichthyscuculus",)

png(filename="len_dist_redgurnard_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of red gurnards (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:4075, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:4075,8]
test_target<-knn_dat_target[1:1,8]
sqrt(4075)
m2<-knn(train, test, cl=train_target, k=64)
knn_dat_target$lenght_Norm<-(m2)
(0.0751970891449363*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Chelidonichthyscuculus"&is.na(ns$Use_Lenght_cm)]<-25
###############
#Brosmebrosme #
###############
find<-subset(ns, estsciname=="Brosmebrosme",)

png(filename="len_dist_Brosmebrosme_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Brosmebrosme (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:484, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:484,8]
test_target<-knn_dat_target[1:1,8]
sqrt(484)
m2<-knn(train, test, cl=train_target, k=22)
knn_dat_target$lenght_Norm<-(m2)
m2
(0.126743480897514*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Brosmebrosme"&is.na(ns$Use_Lenght_cm)]<-42
#########################
#Centrophorusgranulosus##
#########################
find<-subset(ns, estsciname=="Centrophorusgranulosus",)

png(filename="len_dist_gluper_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of glupershark (ns))") +
  theme_classic()
dev.off()

ns$Use_Lenght_cm1[ns$estsciname=="Centrophorusgranulosus"&is.na(ns$Use_Lenght_cm)]<-400
######################
# Trisopterusluscus  #
#######################
find<-subset(ns, estsciname=="Trisopterusluscus",)

png(filename="len_dist_cod_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of cod (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:4818, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:4818,8]
test_target<-knn_dat_target[1:1,8]
sqrt(4818)
m2<-knn(train, test, cl=train_target, k=69)
knn_dat_target$lenght_Norm<-(m2)
(0.063068526379624*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Trisopterusluscus"&is.na(ns$Use_Lenght_cm)]<-21
#################
#Gadusmorhua ####
#######################
find<-subset(ns, estsciname=="Gadusmorhua",)
png(filename="len_dist_atlanticcod_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Atlantic cod (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:121667, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:121667,8]
test_target<-knn_dat_target[1:1,8]
sqrt(121667)
m2<-knn(train, test, cl=train_target, k=100)
knn_dat_target$lenght_Norm<-(m2)
(0.0782292298362644*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Gadusmorhua"&is.na(ns$Use_Lenght_cm)]<-26
#########################
#Melanogrammusaeglefinus#
#########################
find<-subset(ns, estsciname=="Melanogrammusaeglefinus",)

png(filename="len_dist_haddock_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of haddock (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:208042, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:208042,8]
test_target<-knn_dat_target[1:1,8]
sqrt(208042)
m2<-knn(train, test, cl=train_target, k=100)
knn_dat_target$lenght_Norm<-(m2)
(0.111582777440873*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Melanogrammusaeglefinus"&is.na(ns$Use_Lenght_cm)]<-37
######################
#Leucorajanaevus    ##
#######################
find<-subset(ns, estsciname=="Leucorajanaevus",)

png(filename="len_dist_cuckooray_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of cuckooray (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:3640, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:3640,8]
test_target<-knn_dat_target[1:1,8]
sqrt(3640)
m2<-knn(train, test, cl=train_target, k=60)
knn_dat_target$lenght_Norm<-(m2)
(0.181322013341419*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Leucorajanaevus"&is.na(ns$Use_Lenght_cm)]<-60
###################
#Osmeruseperlanus##
###################
#######################
find<-subset(ns, estsciname=="Osmeruseperlanus",)

png(filename="len_dist_smelt_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of smelt (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:311, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:311,8]
test_target<-knn_dat_target[1:1,8]
sqrt(311)
m2<-knn(train, test, cl=train_target, k=18)
knn_dat_target$lenght_Norm<-(m2)
(0.0448756822316555*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Osmeruseperlanus"&is.na(ns$Use_Lenght_cm)]<-15
##################
#Mullussurmuletus#
##################
find<-subset(ns, estsciname=="Mullussurmuletus",)

png(filename="len_dist_mullet_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of mullet (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:3373, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:3373,8]
test_target<-knn_dat_target[1:1,8]
sqrt(3373)
m2<-knn(train, test, cl=train_target, k=58)
knn_dat_target$lenght_Norm<-(m2)
(0.0721649484536082*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Mullussurmuletus"&is.na(ns$Use_Lenght_cm)]<-24
######################
#Merlangiusmerlangus##
#######################
find<-subset(ns, estsciname=="Merlangiusmerlangus",)

png(filename="len_dist_whiting_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of whiting (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:25224, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:25224,8]
test_target<-knn_dat_target[1:1,8]
sqrt(270485)
m2<-knn(train, test, cl=train_target, k=100)
knn_dat_target$lenght_Norm<-(m2)
(0.0842935112189206*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Merlangiusmerlangus"&is.na(ns$Use_Lenght_cm)]<-28
#######################
#Merlucciusmerluccius #
#######################
find<-subset(ns, estsciname=="Merlucciusmerluccius",)

png(filename="len_dist_hake_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of hake (ns))") +
  theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:25224, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:25224,8]
test_target<-knn_dat_target[1:1,8]
sqrt(25224)
m2<-knn(train, test, cl=train_target, k=158)
knn_dat_target$lenght_Norm<-(m2)
(0.0964220739842329*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Merlucciusmerluccius"&is.na(ns$Use_Lenght_cm)]<-32
####################
# Zoarcesviviparus #
####################
find<-subset(ns, estsciname=="Zoarcesviviparus",)

png(filename="len_dist_eelpout_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
       geom_jitter() +
       ggtitle("Lenght distribution of eelpout (ns))") +
       theme_classic()
dev.off()

knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
#
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:384, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:384,8]
test_target<-knn_dat_target[1:1,8]
sqrt(384)
m2<-knn(train, test, cl=train_target, k=20)
knn_dat_target$lenght_Norm<-(m2)
(0.0661006670709521*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Zoarcesviviparus"&is.na(ns$Use_Lenght_cm)]<-22
####################
# Zoarcesviviparus #
####################
find<-subset(ns, estsciname=="Zoarcesviviparus",)

png(filename="len_dist_eelpout_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of eelpout (ns))")+
  theme_classic()
dev.off()
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 107 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:384, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:384,8]
test_target<-knn_dat_target[1:1,8]
sqrt(384)
m2<-knn(train, test, cl=train_target, k=20)
knn_dat_target$lenght_Norm<-(m2)
(0.0661006670709521*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Zoarcesviviparus"&is.na(ns$Use_Lenght_cm)]<-22
#####################
# Zeugopterusregius #
#####################
find<-subset(ns, estsciname=="Zeugopterusregius",)

png(filename="len_dist_topknot_ns1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of topknot (ns))")+
  theme_classic()
dev.off()
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 1 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
train<- knn_dat[1:7, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<-knn_dat[1:7,8]
test_target<-knn_dat_target[1:1,8]
m2<-knn(train, test, cl=train_target, k=7)
knn_dat_target$lenght_Norm<-(m2)
(0.023650697392359*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Zeugopterusregius"&is.na(ns$Use_Lenght_cm)]<-8
######################
#Zeugopteruspunctatus#
######################
find<-subset(ns, estsciname=="Zeugopteruspunctatus",)

png(filename="len_dist_topknot1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of topknot (ns))")+
  theme_classic()
dev.off()
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 2 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
sqrt(162)
train<- knn_dat[1:162, 3:6]
test<- knn_dat_target[1:2,3:6]
train_target<-knn_dat[1:162,8]
test_target<-knn_dat_target[1:2,8]
m2<-knn(train, test, cl=train_target, k=13)
knn_dat_target$lenght_Norm<-(m2)
m2
(0.023650697392359*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Zeugopteruspunctatus"&is.na(ns$Use_Lenght_cm)]<-8
#######################
# Ciliatamustela      #
#######################
######################
find<-subset(ns, estsciname=="Ciliatamustela",)

png(filename="len_dist_5beardrock_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of 5beard rockling (ns))")+
  theme_classic()
dev.off()
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
# 2 fish in that sample
knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))
summary(find$Use_Lenght_cm1)
# training data
sqrt(875)
train<- knn_dat[1:875, 3:6]
test<- knn_dat_target[1:2,3:6]
train_target<-knn_dat[1:875,8]
test_target<-knn_dat_target[1:2,8]
m2<-knn(train, test, cl=train_target, k=30)
knn_dat_target$lenght_Norm<-(m2)
m2
(0.0297149787750152*329.8)+.2
ns$Use_Lenght_cm1[ns$estsciname=="Ciliatamustela"&ns$Year==1993&
                    is.na(ns$Use_Lenght_cm)]<-8
ns$Use_Lenght_cm1[ns$estsciname=="Ciliatamustela"&ns$Year==2007&
                    is.na(ns$Use_Lenght_cm)]<-8
#########################
#  Agonuscataphractus 95#
#######################
## get a lenght for the dragonet
find<-subset(ns, estsciname=="Agonuscataphractus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_pogge_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pogge (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_pogge_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pogge (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_pogge_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]

# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
sqrt(7584)
train<- knn_dat[1:7584, 3:6]
test<- kdt_expand[1:1561,3:6]
train_target<-knn_dat[1:7584,8]
test_target<-kdt_expand[1:1561,8]
m2<-knn(train, test, cl=train_target, k=87)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_pooge_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_pooge_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns$QC_Length[ns$estsciname=="Agonuscataphractus"& is.na(ns$Use_Lenght_cm1)]<-"KNN_len_assignment"
# use the kdt_summary table to fill in and expan the relevant missing parpameter
# in this case the length and the HL_no_at_Length for the pooge
# I have 95 missing values - which corresponds to 110 lenght/frequencies - this is 
# due to hauls with large numbers of fish being assigned different length values

# trying to find an elegant solution to this is impossible
find1<-subset(ns, estsciname=="Agonuscataphractus" & is.na(ns$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns, !(estsciname=="Agonuscataphractus" & is.na(ns$lenght_Norm)),)
# check
2141313-2141218 # 95 records removed - grand
ns2<-rbind(ns1, expanded)
2141327-2141218 #' 109 added back in - as per expanded knn obs!
# all done now with this fish
############################
#  Amblyrajaradiata   35####
############################
## get a lenght for the dragonet
find<-subset(ns, estsciname=="Amblyrajaradiata",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_arajaradiata_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of ray (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_arajaradiata_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of ray (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_arajaradiata_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]

# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
sqrt(24899)
train<- knn_dat[1:24899, 3:6]
test<- kdt_expand[1:242,3:6]
train_target<-knn_dat[1:24899,8]
test_target<-kdt_expand[1:242,8]
m2<-knn(train, test, cl=train_target, k=156)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_arajaradiata_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_arajaradiata_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns$QC_Length[ns$estsciname=="Amblyrajaradiata"& is.na(ns$Use_Lenght_cm1)]<-"KNN_len_assignment"
# use the kdt_summary table to fill in and expan the relevant missing parpameter
# in this case the length and the HL_no_at_Length for the pooge
# I have 95 missing values - which corresponds to 110 lenght/frequencies - this is 
# due to hauls with large numbers of fish being assigned different length values

# trying to find an elegant solution to this is impossible
find1<-subset(ns2, estsciname=="Amblyrajaradiata" & is.na(ns2$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns2, !(estsciname=="Amblyrajaradiata" & is.na(ns2$lenght_Norm)),)
# check
2141327-2141292 # 35 records removed - grand
ns3<-rbind(ns1, expanded)
2141292-2141330 #38 added back in - as per expanded knn. 
###########################
#  Ammodytes          14###
###########################
############################
## get a lenght for the sandeel
find<-subset(ns3, estsciname=="Ammodytes",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_sandeel_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of sandeel (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_sandeel_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of sandeel (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_sandeel_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]

# need to create new data set to complete this
# Agonuscataphractus 44 observations 1-16 fish counted per observation
summary(find$Use_Lenght_cm1)
# training data
sqrt(5626)
train<- knn_dat[1:5626, 3:6]
test<- kdt_expand[1:56,3:6]
train_target<-knn_dat[1:5626,8]
test_target<-kdt_expand[1:56,8]
m2<-knn(train, test, cl=train_target, k=75)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_sandeel_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_sandeel_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Ammodytes"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Ammodytes" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Ammodytes" & is.na(ns3$lenght_Norm)),)
# check
2141330-2141316 # 14 records removed - grand
ns3<-rbind(ns1, expanded)
2141316-2141334 #18 added back in - as per expanded knn. 
############################
#  Anarhichaslupus    16 ###
############################
## get a lenght for the wolffish
find<-subset(ns3, estsciname=="Anarhichaslupus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_wolffish_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of wolffish (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_wolffish_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of wolffish (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_wolffish_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(1175)
train<- knn_dat[1:1175, 3:6]
test<- kdt_expand[1:48,3:6]
train_target<-knn_dat[1:1175,8]
test_target<-kdt_expand[1:48,8]
m2<-knn(train, test, cl=train_target, k=34)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_wolffish_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_wolffish_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Anarhichaslupus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Anarhichaslupus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Anarhichaslupus" & is.na(ns3$lenght_Norm)),)
# check
2141334-2141318 # 16 records removed - grand
ns3<-rbind(ns1, expanded)
2141318-2141339 #18 added back in - as per expanded knn. 
##########################
#  Argentinasphyraena 8 ##
##########################
############################
## get a lenght for the Argentine 
find<-subset(ns3, estsciname=="Argentinasphyraena",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_Argentine_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Argentine (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_Argentine_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Argentine (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_Argentine_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(22323)
train<- knn_dat[1:22323, 3:6]
test<- kdt_expand[1:1005,3:6]
train_target<-knn_dat[1:22323,8]
test_target<-kdt_expand[1:1005,8]
m2<-knn(train, test, cl=train_target, k=150)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_argentine_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_argentine_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Argentinasphyraena"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Argentinasphyraena" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Argentinasphyraena" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
#  Arnoglossuslaterna 16##
############################
## get a lenght for the scaldfish 
find<-subset(ns3, estsciname=="Arnoglossuslaterna",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_scaldfish_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of scaldfish (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_scaldfish_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of scaldfish (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_scaldfish_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(6076)
train<- knn_dat[1:6076, 3:6]
test<- kdt_expand[1:77,3:6]
train_target<-knn_dat[1:6076,8]
test_target<-kdt_expand[1:77,8]
m2<-knn(train, test, cl=train_target, k=78)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_scaldfish_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_scaldfish_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Arnoglossuslaterna"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Arnoglossuslaterna" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Arnoglossuslaterna" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
########################
#  Buglossidiumluteum 59
########################
## get a lenght for the Argentine 
find<-subset(ns3, estsciname=="Buglossidiumluteum",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_solenette_ns1_28-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of solenette (ns)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_solenette_ns2_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of solenette (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_solenette_ns3_28-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(10238)
train<- knn_dat[1:10238, 3:6]
test<- kdt_expand[1:1227,3:6]
train_target<-knn_dat[1:10238,8]
test_target<-kdt_expand[1:1227,8]
m2<-knn(train, test, cl=train_target, k=101)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_solenette_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_solenette_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Buglossidiumluteum"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Buglossidiumluteum" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Buglossidiumluteum" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#######################
# Callionymuslyra 31 ##
#######################
## get a lenght for the dragonet
find<-subset(ns, estsciname=="Callionymuslyra",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="len_dist_dragonet_net1_16-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonet (ns))")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="len_dist_dragonet_ns2_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of dragonet (ns)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="len_dist_dragonet_net3_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="len_dist_dragonet_ns4_16-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(19678)
train<- knn_dat[1:19678, 3:6]
test<- kdt_expand[1:284,3:6]
train_target<-knn_dat[1:19678,8]
test_target<-kdt_expand[1:284,8]
m2<-knn(train, test, cl=train_target, k=140)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_dragonete_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_dragonete_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Callionymuslyra"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Callionymuslyra" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Callionymuslyra" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
# Callionymusmaculatus 2 #
##########################
# 18 fish in sample NS-IBTS/1984/1/ELD/32/GOV
#  5 fish in sample NS-IBTS/2009/3/SCO3/47/GOV
find<-subset(ns, estsciname=="Callionymusmaculatus",)

png(filename="len_dist_dragonetCM1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonet (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# need to create new data set to complete this
summary(find$Use_Lenght_cm1)
# training data
sqrt(9848)
train<- knn_dat[1:9846, 3:6]
test<- kdt_expand[1:23,3:6]
train_target<-knn_dat[1:9846,8]
test_target<-kdt_expand[1:23,8]
m2<-knn(train, test, cl=train_target, k=100)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_dragonCM_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_dragonCM_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Callionymusmaculatus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Callionymusmaculatus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Callionymusmaculatus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
#  Clupeaharengus       5 ##
############################
##########################
# 18 fish in sample NS-IBTS/1984/1/ELD/32/GOV
#  5 fish in sample NS-IBTS/2009/3/SCO3/47/GOV
find<-subset(ns, estsciname=="Clupeaharengus",)

png(filename="len_dist_herrings1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of herrings (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(227964)
train<- knn_dat[1:227964, 3:6]
test<- kdt_expand[1:3215,3:6]
train_target<-knn_dat[1:227964,8]
test_target<-kdt_expand[1:3215,8]
m2<-knn(train, test, cl=train_target, k=100)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_herrings_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_herrings_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Clupeaharengus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Clupeaharengus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Clupeaharengus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
#  Cyclopteruslumpus    32###
#############################
find<-subset(ns, estsciname=="Cyclopteruslumpus",)

png(filename="len_dist_Cyclopteruslumpus1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Cyclopteruslumpus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(3030)
train<- knn_dat[1:3030, 3:6]
test<- kdt_expand[1:89,3:6]
train_target<-knn_dat[1:3030,8]
test_target<-kdt_expand[1:89,8]
m2<-knn(train, test, cl=train_target, k=55)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Cyclopteruslumpus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Cyclopteruslumpus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Cyclopteruslumpus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Cyclopteruslumpus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Cyclopteruslumpus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##############################
#  Dipturusbatis        3#####
##############################
find<-subset(ns, estsciname=="Dipturusbatis",)

png(filename="len_dist_Dipturusbatis1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Dipturusbatis (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(169)
train<- knn_dat[1:169, 3:6]
test<- kdt_expand[1:6,3:6]
train_target<-knn_dat[1:169,8]
test_target<-kdt_expand[1:6,8]
m2<-knn(train, test, cl=train_target, k=13)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Dipturusbatis_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Dipturusbatis_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Dipturusbatis"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Dipturusbatis" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Dipturusbatis" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
#  Echiichthysvipera    75  ##
##############################
find<-subset(ns, estsciname=="Echiichthysvipera",)

png(filename="len_dist_Echiichthysvipera1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Echiichthysvipera (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(8364)
train<- knn_dat[1:8364, 3:6]
test<- kdt_expand[1:2305,3:6]
train_target<-knn_dat[1:8364,8]
test_target<-kdt_expand[1:2305,8]
m2<-knn(train, test, cl=train_target, k=91)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Echiichthysvipera_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Echiichthysvipera_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Echiichthysvipera"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Echiichthysvipera" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Echiichthysvipera" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##############################
#  Enchelyopuscimbrius  19####
##############################
find<-subset(ns, estsciname=="Enchelyopuscimbrius",)

png(filename="len_dist_Enchelyopuscimbrius1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Enchelyopuscimbrius (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(13428)
train<- knn_dat[1:13428, 3:6]
test<- kdt_expand[1:104,3:6]
train_target<-knn_dat[1:13428,8]
test_target<-kdt_expand[1:104,8]
m2<-knn(train, test, cl=train_target, k=116)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Enchelyopuscimbrius_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Enchelyopuscimbrius_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Enchelyopuscimbrius"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Enchelyopuscimbrius" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Enchelyopuscimbrius" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
#  Engraulisencrasicolus 2##
############################
find<-subset(ns, estsciname=="Engraulisencrasicolus",)

png(filename="len_dist_Engraulisencrasicolus1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Engraulisencrasicolus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(5356)
train<- knn_dat[1:5356, 3:6]
test<- kdt_expand[1:5,3:6]
train_target<-knn_dat[1:5356,8]
test_target<-kdt_expand[1:5,8]
m2<-knn(train, test, cl=train_target, k=73)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Engraulisencrasicolus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Engraulisencrasicolus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Engraulisencrasicolus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Engraulisencrasicolus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Engraulisencrasicolus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
#  Eutriglagurnardus     45##
#############################
find<-subset(ns, estsciname=="Eutriglagurnardus",)

png(filename="len_dist_Eutriglagurnardus1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Eutriglagurnardus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(136696)
train<- knn_dat[1:136696, 3:6]
test<- kdt_expand[1:1108,3:6]
train_target<-knn_dat[1:136696,8]
test_target<-kdt_expand[1:1108,8]
m2<-knn(train, test, cl=train_target, k=100)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Eutriglagurnardus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Eutriglagurnardus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Eutriglagurnardus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Eutriglagurnardus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Eutriglagurnardus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
#  Gadiculusargenteus     5##
#############################
find<-subset(ns, estsciname=="Gadiculusargenteus",)

png(filename="len_dist_Gadiculusargenteus1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gadiculusargenteus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
sqrt(4123)
train<- knn_dat[1:4123, 3:6]
test<- kdt_expand[1:1972,3:6]
train_target<-knn_dat[1:4123,8]
test_target<-kdt_expand[1:1972,8]
m2<-knn(train, test, cl=train_target, k=64)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Gadiculusargenteus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Gadiculusargenteus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Gadiculusargenteus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Gadiculusargenteus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Gadiculusargenteus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
#  Gaidropsarusvulgaris   29#
#############################
find<-subset(ns, estsciname=="Gaidropsarusvulgaris",)

png(filename="len_dist_Gaidropsarusvulgaris1_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gaidropsarusvulgaris (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(283)
train<- knn_dat[1:283, 3:6]
test<- kdt_expand[1:356,3:6]
train_target<-knn_dat[1:283,8]
test_target<-kdt_expand[1:356,8]
m2<-knn(train, test, cl=train_target, k=17)
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Gaidropsarusvulgaris_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Gaidropsarusvulgaris_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Gaidropsarusvulgaris"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Gaidropsarusvulgaris" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Gaidropsarusvulgaris" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)

############################
#  Galeorhinusgaleus      2#
############################
find<-subset(ns, estsciname=="Galeorhinusgaleus",)

png(filename="len_dist_Galeorhinusgaleus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Galeorhinusgaleus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Galeorhinusgaleus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Galeorhinusgaleus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Galeorhinusgaleus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Galeorhinusgaleus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Galeorhinusgaleus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#####################################
#  Gasterosteusaculeatusaculeatus 3##
#####################################
find<-subset(ns, estsciname=="Gasterosteusaculeatusaculeatus",)

png(filename="len_dist_Gasterosteusaculeatusaculeatus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gasterosteusaculeatusaculeatus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Gasterosteusaculeatusaculeatus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Gasterosteusaculeatusaculeatus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Gasterosteusaculeatusaculeatus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Gasterosteusaculeatusaculeatus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Gasterosteusaculeatusaculeatus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##################################
#  Glyptocephaluscynoglossus 11###
############################
find<-subset(ns, estsciname=="Glyptocephaluscynoglossus",)

png(filename="len_dist_Glyptocephaluscynoglossus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Glyptocephaluscynoglossus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Glyptocephaluscynoglossus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Glyptocephaluscynoglossus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Glyptocephaluscynoglossus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Glyptocephaluscynoglossus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Glyptocephaluscynoglossus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
###################
# Gobiidae    38###
############################
find<-subset(ns, estsciname=="Gobiidae",)

png(filename="len_dist_Gobiidae_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gobiidae (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Gobiidae_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Gobiidae_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Gobiidae"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Gobiidae" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Gobiidae" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)

##############################
# Hippocampushippocampus  6###
############################
find<-subset(ns, estsciname=="Hippocampushippocampus",)

png(filename="len_dist_Hippocampushippocampus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Hippocampushippocampus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Hippocampushippocampus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Hippocampushippocampus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Hippocampushippocampus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Hippocampushippocampus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Hippocampushippocampus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#######################
# Hyperoplus      18 ##
#######################
############################
find<-subset(ns, estsciname=="Hyperoplus",)

png(filename="len_dist_Hyperoplus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Hyperoplus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Hyperoplus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Hyperoplus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Hyperoplus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Hyperoplus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Hyperoplus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
# Limandalimanda     125##
###########################
############################
find<-subset(ns, estsciname=="Limandalimanda",)

png(filename="len_dist_Limandalimanda_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Limandalimanda (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Limandalimanda_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Limandalimanda_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Limandalimanda"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Limandalimanda" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Limandalimanda" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Liparisliparisliparis 31##
############################
############################
find<-subset(ns, estsciname=="Liparisliparisliparis",)

png(filename="len_dist_Liparisliparisliparis_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Liparisliparisliparis (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Liparisliparisliparis_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Liparisliparisliparis_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Liparisliparisliparis"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Liparisliparisliparis" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Liparisliparisliparis" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##############################
# Lophiuspiscatorius      12##
##############################
############################
find<-subset(ns, estsciname=="Lophiuspiscatorius",)

png(filename="len_dist_Lophiuspiscatorius_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Lophiuspiscatorius (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Lophiuspiscatorius_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Lophiuspiscatorius_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Lophiuspiscatorius"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Lophiuspiscatorius" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Lophiuspiscatorius" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Lycodesvahlii     6
############################
find<-subset(ns, estsciname=="Lycodesvahlii",)

png(filename="len_dist_Lycodesvahlii_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Lycodesvahlii (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Lycodesvahlii_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Lycodesvahlii_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Lycodesvahlii"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Lycodesvahlii" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Lycodesvahlii" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#########################
# Maurolicusmuelleri  4 #
#########################
find<-subset(ns, estsciname=="Maurolicusmuelleri",)

png(filename="len_dist_Maurolicusmuelleri_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Maurolicusmuelleri (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Maurolicusmuelleri_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Maurolicusmuelleri_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Maurolicusmuelleri"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Maurolicusmuelleri" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Maurolicusmuelleri" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
################################
# Micromesistiuspoutassou     3#
################################
find<-subset(ns, estsciname=="Micromesistiuspoutassou",)

png(filename="len_dist_Micromesistiuspoutassou_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Micromesistiuspoutassou (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Micromesistiuspoutassou_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Micromesistiuspoutassou_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Micromesistiuspoutassou"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Micromesistiuspoutassou" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Micromesistiuspoutassou" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
########################
# Microstomuskitt   31 #
########################
find<-subset(ns, estsciname=="Microstomuskitt",)

png(filename="len_dist_Microstomuskitt_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Microstomuskitt (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Microstomuskitt_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Microstomuskitt_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Microstomuskitt"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Microstomuskitt" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Microstomuskitt" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##################
# Molvamolva  4 ##
##################
find<-subset(ns, estsciname=="Molvamolva",)

png(filename="len_dist_Molvamolva_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Molvamolva (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Molvamolva_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Molvamolva_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Molvamolva"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Molvamolva" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Molvamolva" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
###################################
# Myoxocephalusscorpius        10##
###################################
find<-subset(ns, estsciname=="Myoxocephalusscorpius",)

png(filename="len_dist_Myoxocephalusscorpius_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Myoxocephalusscorpius (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Myoxocephalusscorpius_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Myoxocephalusscorpius_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Myoxocephalusscorpius"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Myoxocephalusscorpius" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Myoxocephalusscorpius" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Myxineglutinosa      6  ##
############################
find<-subset(ns, estsciname=="Myxineglutinosa",)

png(filename="len_dist_Myxineglutinosa_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Myxineglutinosa (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Myxineglutinosa_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Myxineglutinosa_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Myxineglutinosa"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Myxineglutinosa" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Myxineglutinosa" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Pholisgunnellus       2 ##
############################
find<-subset(ns, estsciname=="Pholisgunnellus",)

png(filename="len_dist_Pholisgunnellus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Pholisgunnellus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Pholisgunnellus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Pholisgunnellus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Pholisgunnellus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Pholisgunnellus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Pholisgunnellus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##############################
# Platichthysflesus       19 #
##############################
find<-subset(ns, estsciname=="Platichthysflesus",)

png(filename="len_dist_Platichthysflesus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Platichthysflesus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Platichthysflesus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Platichthysflesus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Platichthysflesus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Platichthysflesus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Platichthysflesus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
################################
# Pleuronectesplatessa      40 #
################################
find<-subset(ns, estsciname=="Pleuronectesplatessa",)

png(filename="len_dist_Pleuronectesplatessa_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Pleuronectesplatessa (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Pleuronectesplatessa_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Pleuronectesplatessa_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Pleuronectesplatessa"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Pleuronectesplatessa" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Pleuronectesplatessa" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Pollachiusvirens 7 #######
############################
find<-subset(ns, estsciname=="Pollachiusvirens",)

png(filename="len_dist_Pollachiusvirens_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Pollachiusvirens (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Pollachiusvirens_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Pollachiusvirens_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Pollachiusvirens"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Pollachiusvirens" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Pollachiusvirens" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Rajaclavata            28#
############################
find<-subset(ns, estsciname=="Rajaclavata",)

png(filename="len_dist_Rajaclavata_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Rajaclavata (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Rajaclavata_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Rajaclavata_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Rajaclavata"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Rajaclavata" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Rajaclavata" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##############################
# Rajamontagui             9 #
##############################
find<-subset(ns, estsciname=="Rajamontagui",)

png(filename="len_dist_Rajamontagui_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Rajamontagui (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Rajamontagui_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Rajamontagui_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Rajamontagui"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Rajamontagui" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Rajamontagui" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Scomberscombrus 8#########
############################
find<-subset(ns, estsciname=="Scomberscombrus",)

png(filename="len_dist_Scomberscombrus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scomberscombrus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Scomberscombrus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Scomberscombrus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Scomberscombrus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Scomberscombrus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Scomberscombrus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#############################
# Scophthalmusmaximus   6####
#############################
find<-subset(ns, estsciname=="Scophthalmusmaximus",)

png(filename="len_dist_Scophthalmusmaximus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scophthalmusmaximus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Scophthalmusmaximus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Scophthalmusmaximus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Scophthalmusmaximus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Scophthalmusmaximus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Scophthalmusmaximus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Scophthalmusrhombus  3   #
############################
find<-subset(ns, estsciname=="Scophthalmusrhombus",)

png(filename="len_dist_Scophthalmusrhombus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scophthalmusrhombus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Scophthalmusrhombus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Scophthalmusrhombus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Scophthalmusrhombus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Scophthalmusrhombus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Scophthalmusrhombus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
# Scyliorhinuscanicula 5#
########################
find<-subset(ns, estsciname=="Scyliorhinuscanicula",)

png(filename="len_dist_Scyliorhinuscanicula_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scyliorhinuscanicula (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Scyliorhinuscanicula_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Scyliorhinuscanicula_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Scyliorhinuscanicula"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Scyliorhinuscanicula" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Scyliorhinuscanicula" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#########################
# Sebastesviviparus    4#
#########################
find<-subset(ns, estsciname=="Sebastesviviparus",)

png(filename="len_dist_Sebastesviviparus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Sebastesviviparus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Sebastesviviparus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Sebastesviviparus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Sebastesviviparus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Sebastesviviparus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Sebastesviviparus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Soleasolea           9####
############################
find<-subset(ns, estsciname=="Soleasolea",)

png(filename="len_dist_Scyliorhinuscanicula_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Soleasolea (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Soleasolea_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Soleasolea_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Soleasolea"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Soleasolea" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Soleasolea" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
###########################
# Sprattussprattus 15######
############################
find<-subset(ns, estsciname=="Sprattussprattus",)

png(filename="len_dist_Sprattussprattus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Sprattussprattus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Sprattussprattus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Sprattussprattus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Sprattussprattus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Sprattussprattus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Sprattussprattus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Squalusacanthias 7########
############################
find<-subset(ns, estsciname=="Squalusacanthias",)

png(filename="len_dist_Squalusacanthias_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Squalusacanthias (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Squalusacanthias_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Squalusacanthias_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Squalusacanthias"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Squalusacanthias" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Squalusacanthias" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
############################
# Syngnathusacus   3########
############################
find<-subset(ns, estsciname=="Syngnathusacus",)

png(filename="len_dist_Syngnathusacus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Syngnathusacus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Syngnathusacus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Syngnathusacus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Syngnathusacus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Syngnathusacus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Syngnathusacus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#####################
# Taurulusbubalis 34##
######################
find<-subset(ns, estsciname=="Taurulusbubalis",)

png(filename="len_dist_Taurulusbubalis_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Taurulusbubalis (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Taurulusbubalis_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Taurulusbubalis_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Taurulusbubalis"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Taurulusbubalis" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Taurulusbubalis" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
######################
# Trachinusdraco   7##
######################
find<-subset(ns, estsciname=="Trachinusdraco",)

png(filename="len_dist_Trachinusdraco_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trachinusdraco (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Trachinusdraco_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Trachinusdraco_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Trachinusdraco"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Trachinusdraco" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Trachinusdraco" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
# Trachurustrachurus   4##
##########################
find<-subset(ns, estsciname=="Trachurustrachurus",)

png(filename="len_dist_Trachurustrachurus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trachurustrachurus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Trachurustrachurus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Trachurustrachurus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Trachurustrachurus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Trachurustrachurus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Trachurustrachurus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
#########################
# Trisopterusesmarkii 12#
#########################
find<-subset(ns, estsciname=="Trisopterusesmarkii",)
png(filename="len_dist_Trisopterusesmarkii_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trisopterusesmarkii (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Trisopterusesmarkii_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Trisopterusesmarkii_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Trisopterusesmarkii"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Trisopterusesmarkii" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Trisopterusesmarkii" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
##########################
# Trisopterusminutus 23 ##
##########################
find<-subset(ns, estsciname=="Trisopterusminutus",)

png(filename="len_dist_Trisopterusminutus_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trisopterusminutus (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Trisopterusminutus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Trisopterusminutus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Trisopterusminutus"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Trisopterusminutus" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Trisopterusminutus" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
###################################
# Hippoglossoidesplatessoides 125##
###################################
find<-subset(ns, estsciname=="Hippoglossoidesplatessoides",)

png(filename="len_dist_Hippoglossoidesplatessoides_ns1_17-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Hippoglossoidesplatessoides (ns))")+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "NS_Hippoglossoidesplatessoides_knn_lngt_28-6-2016.csv")
kdt<-read.csv("NS_Hippoglossoidesplatessoides_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
ns3$QC_Length[ns3$estsciname=="Hippoglossoidesplatessoides"& is.na(ns3$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(ns3, estsciname=="Hippoglossoidesplatessoides" & is.na(ns3$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
ns1<-subset(ns3, !(estsciname=="Hippoglossoidesplatessoides" & is.na(ns3$lenght_Norm)),)
ns3<-rbind(ns1, expanded)
###############################################
# Check all records now have a lenght
no_lenght<-subset(ns3, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))
##############################################
ns3$SweptArea_wing_km_sqrd<-ns3$SweptArea_wing_km_sqrd/1000
summary(ns3$SweptArea_wing_km_sqrd)
summary(ns3$Use_Lenght_cm1)
summary(ns3$HLNoAtLngt)
summary(ns3$NewHLNoAtLngt)
ns3$NewHLNoAtLngt[is.na(ns3$NewHLNoAtLngt)]<-ns3$NewTotalNo[is.na(ns3$NewHLNoAtLngt)]
ns3$Check_NewHLNoATLngt<-!as.integer(ns3$NewHLNoAtLngt)
find<-subset(ns3, ns3$Check_NewHLNoATLngt==TRUE,)
ns3$Check_NewTotalNo<-!as.integer(ns3$NewTotalNo)
find<-subset(ns3, ns3$Check_NewTotalNo==TRUE,)
ns3$Check_C_DataType<- ns3$TotalNo/ns3$HaulDur*60<60/ns3$HaulDur
find<-subset(ns3, Check_C_DataType==TRUE,)
summary(ns3$Check_C_DataType)
find<-subset(ns3, ns3$DataType=="C"&ns3$TotalNo/ns3$HaulDur*60<60/ns3$HaulDur,)
1/36*60
60/36
summary(find$TotalNo)
summary(find$NewTotalNo)
summary(as.factor(find$Year))
ns3$HLNoAtLngt_rounded<-ceiling(ns3$NewHLNoAtLngt)
ns3$TotalNo_rounded<-ceiling(ns3$NewTotalNo)
summary(ns3$TotalNo_rounded)
summary(ns3$HLNoAtLngt_rounded)
ns3$TotalNo_rounded[is.na(ns3$TotalNo_rounded)]<-1
ns3$TotalNo_rounded[ns3$TotalNo_rounded==0]<-1
ns3$HLNoAtLngt_rounded[is.na(ns3$HLNoAtLngt_rounded)]<-1
ns3$HLNoAtLngt_rounded[ns3$HLNoAtLngt_rounded==0]<-1
# now use the new numbers at lenght to get densities
names(spp)
ns3<-as.data.table(ns3)
ns3$SweptArea_wing_km_sqrd<-as.numeric(ns3$SweptArea_wing_km_sqrd)

ns3[!is.na(HLNoAtLngt_rounded), c("HLNoAtLngtkm2") :=
      list(HLNoAtLngt_rounded/SweptArea_wing_km_sqrd)] 

### getting closer to the end now,
# need to tidy up the output file
names(traits)
names(ns3)
link<-subset(traits,
             select=c( "Aphia_Code", "LWRa","LWRb",
                       "LWRSource"))               
link$estAphia_Code<-link$Aphia_Code
link$Aphia_Code<-NULL
ns3<-as.data.frame(ns3)
ns3$estAphia_Code[ns3$estsciname=="Triglalyra"]<-127266
ns3$estAphia_Code[ns3$estsciname=="Congerconger"]<-126285
all_ns<-merge(ns3, link,  by="estAphia_Code", all.x=T)
# find all records with no LWR
find<-subset(all_ns, is.na(LWRa),)
summary(as.factor(find$estsciname))
###########
#Ammodytes   
# Ammodytes marinus a= 1.70E-03	b= 3.21
# Ammodytes tobianus a= 3.30E-03	b= 2.91
exp(mean(log(1.70E-03+3.30E-03)))
(3.21+2.91)/2
all_ns$LWRa[all_ns$estsciname=="Ammodytes"]<-0.005
all_ns$LWRb[all_ns$estsciname=="Ammodytes"]<-3.06
#Arctozenusrisso 
all_ns$LWRa[all_ns$estsciname=="Arctozenusrisso"]<-0.00324 
all_ns$LWRb[all_ns$estsciname=="Arctozenusrisso"]<-3.08 

#Entelurusaequoreus .00022 b= 3
all_ns$LWRa[all_ns$estsciname=="Entelurusaequoreus"]<-.00022
all_ns$LWRb[all_ns$estsciname=="Entelurusaequoreus"]<-3

# Gobiidae
#Aphia minuta 8.00E-04	3.53
#Crystallogobius linearis 0.01	2.94
#Deltentosteus quadrimaculatus 0.01	3.21
#Gobius cobitis 0.01	3.11
#Gobius gasteveni 0.01	3.05
#Gobius niger 0.01	3.03
#Gobius paganellus 0.01	3.1
#Lesueurigobius friesii 0.01	3.04
#Lesueurigobius sanzi 0.01	3.12
#Pomatoschistus lozanoi 0.01	3.04
#Pomatoschistus microps 0.01	3.18
#Pomatoschistus minutus 0.01	3.22
#Pomatoschistus pictus 0.01	3.19
exp(mean(log(8.00E-04+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01)))
(3.53+2.94+3.21+3.11+3.05+3.03+3.1+3.04+3.12+3.04+3.18+3.22+3.19)/13
all_ns$LWRa[all_ns$estsciname=="Gobiidae"]<-0.00611
all_ns$LWRb[all_ns$estsciname=="Gobiidae"]<-3.135385

#Hyperoplus    
all_ns$LWRa[all_ns$estsciname=="Hyperoplus"]<-0.00611
all_ns$LWRb[all_ns$estsciname=="Hyperoplus"]<-2.965

#Nerophislumbriciformis 
all_ns$LWRa[all_ns$estsciname=="Nerophislumbriciformis"]<- 0.00042
all_ns$LWRb[all_ns$estsciname=="Nerophislumbriciformis"]<- 3
#Micrenophryslilljeborgii      
all_ns$LWRa[all_ns$estsciname=="Micrenophryslilljeborgii"]<-0.00661 
all_ns$LWRb[all_ns$estsciname=="Micrenophryslilljeborgii"]<-3.17
#Trachyrincusmurrayi   
all_ns$LWRa[all_ns$estsciname=="Trachyrincusmurrayi"]<- 0.00102 
all_ns$LWRb[all_ns$estsciname=="Trachyrincusmurrayi"]<-3.06 
#Zeugopterusregius 
all_ns$LWRa[all_ns$estsciname=="Zeugopterusregius"]<-0.01288 
all_ns$LWRb[all_ns$estsciname=="Zeugopterusregius"]<-3.03  
# Gadiculusthori Bayesian length-weight: a=0.00851 (0.00446 - 0.01623), 
# b=3.08 (2.91 - 3.25), 
# based on LWR estimates for this Family-body shape (Ref. 93245). Fishbase.
all_ns$LWRa[all_ns$estsciname=="Gadiculusthori"]<-0.00851
all_ns$LWRb[all_ns$estsciname=="Gadiculusthori"]<-3.08
#Lycodesvahlii
all_ns$LWRa[all_ns$estsciname=="Lycodesvahlii"]<-0.00129  
all_ns$LWRb[all_ns$estsciname=="Lycodesvahlii"]<-3.10 
# Icelusbicornis
all_ns$LWRa[all_ns$estsciname=="Icelusbicornis"]<-0.00661 
all_ns$LWRb[all_ns$estsciname=="Icelusbicornis"]<-3.17  
#Artediellusatlanticus
# Bayesian length-weight: a=0.00661 (0.00270 - 0.01615), b=3.17 (2.95 - 3.39), 
# based on LWR estimates for this Family-body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Artediellusatlanticus"]<-0.00661 
all_ns$LWRb[all_ns$estsciname=="Artediellusatlanticus"]<-3.17  
# Bathyrajabrachyurops
# Bayesian length-weight: a=0.00501 (0.00252 - 0.00995), b=3.14 (2.97 - 3.31), based on LWR estimates for this Genus-body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Bathyrajabrachyurops"]<-0.00501 
all_ns$LWRb[all_ns$estsciname=="Bathyrajabrachyurops"]<-3.14  
#Cottunculusmicrops
# Bayesian length-weight: a=0.00389 (0.00180 - 0.00842), b=3.12 (2.94 - 3.30), based on all LWR estimates for this body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Cottunculusmicrops"]<-0.00389 
all_ns$LWRb[all_ns$estsciname=="Cottunculusmicrops"]<-3.12
# Dipturuslinteus   
all_ns$LWRa[all_ns$estsciname=="Dipturuslinteus"]<-0.00487
all_ns$LWRb[all_ns$estsciname=="Dipturuslinteus"]<-3
# Gaidropsarusargentatus    
# Bayesian length-weight: a=0.00417 (0.00194 - 0.00898), b=3.09 (2.90 - 3.28), based on LWR estimates for this Family-body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Gaidropsarusargentatus"]<-0.00417 
all_ns$LWRb[all_ns$estsciname=="Gaidropsarusargentatus"]<-3.09
# Leptagonusdecagonus 
exp(mean(log(0.00349+0.00470)))
all_ns$LWRa[all_ns$estsciname=="Leptagonusdecagonus"]<-0.00819 
all_ns$LWRb[all_ns$estsciname=="Leptagonusdecagonus"]<-3
# Myoxocephalusscorpioides   
#Bayesian length-weight: a=0.00661 (0.00270 - 0.01615), b=3.17 (2.95 - 3.39), based on LWR estimates for this Family-body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Myoxocephalusscorpioides"]<-0.00661 
all_ns$LWRb[all_ns$estsciname=="Myoxocephalusscorpioides"]<-3.17
# Nerophisophidion        
all_ns$LWRa[all_ns$estsciname=="Nerophisophidion"]<-0.00019 
all_ns$LWRb[all_ns$estsciname=="Nerophisophidion"]<-2.716
# Pterycombusbrama 
# Bayesian length-weight: a=0.01995 (0.00835 - 0.04767), b=2.96 (2.75 - 3.17), based on LWR estimates for this Family-body shape (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Pterycombusbrama"]<-0.01995 
all_ns$LWRb[all_ns$estsciname=="Pterycombusbrama"]<-2.96
# Scomberjaponicus 
# Bayesian length-weight: a=0.00759 (0.00668 - 0.00861), b=3.06 (3.02 - 3.10), based on LWR estimates for this species (Ref. 93245).
all_ns$LWRa[all_ns$estsciname=="Scomberjaponicus"]<-0.00759 
all_ns$LWRb[all_ns$estsciname=="Scomberjaponicus"]<-3.06

###############
# mean lenght is needed for lenght weights  if measured in cm then +0.5
# if measured in .5 cm then add + 0.25
all_ns$LngtCode[is.na(all_ns$LngtCode)]<-1

all_ns$mean_lenght_cm[all_ns$LngtCode=="1"]<-all_ns$Use_Lenght_cm1[all_ns$LngtCode=="1"]+.5
all_ns$mean_lenght_cm[all_ns$LngtCode=="0"]<-all_ns$Use_Lenght_cm1[all_ns$LngtCode=="0"]+.25
all_ns$mean_lenght_cm[all_ns$LngtCode=="."]<-all_ns$Use_Lenght_cm1[all_ns$LngtCode=="."]+.25
all_ns$IndivFishWgt_g<-all_ns$LWRa*all_ns$mean_lenght_cm^all_ns$LWRb
all_ns$SpeciesSciName<-all_ns$estsciname
all_ns$FishLenght_cm<-all_ns$Use_Lenght_cm1
all_ns$Number<-all_ns$NewTotalNo
all_ns$DensAbund_N_Sqkm<-all_ns$HLNoAtLngtkm2
all_ns$DensBiom_kg_Sqkm<-(all_ns$Number*all_ns$IndivFishWgt_g/1000)/all_ns$SweptArea_wing_km_sqrd
list<-unique(all_ns$New_UniqueID)

need<-subset(h, New_UniqueID%in%list,
             select=c(New_UniqueID,HaulID, Survey_Acronym))
all_ns1<-merge(need, all_ns)
bio_dat_ns <-subset(all_ns1, 
                      select=c(Survey_Acronym, HaulID, SpeciesSciName,
                               FishLenght_cm, IndivFishWgt_g, Number,
                               DensAbund_N_Sqkm, DensBiom_kg_Sqkm))
#"GNSIntOT1"
GNSIntOT1_LD<-subset(bio_dat_ns, Survey_Acronym=="GNSIntOT1",)

write.csv(GNSIntOT1_LD, "Bio_info_GNSIntOT1_LD_29-06-2016.csv")

#"GNSIntOT3"
GNSIntOT3_LD<-subset(bio_dat_ns, Survey_Acronym=="GNSIntOT3",)

write.csv(GNSIntOT3_LD, "Bio_info_GNSIntOT3_LD_29-06-2016.csv")
