###################
# Version Control #
###################
# R version 3.2.2 (2015-08-14): Fire Safety 
# platform       x86_64-w64-mingw32 (64-bit)
###############
# Script Info #
###############
# Script 7.3
# We now correct the biological data for each of the surveys individually
# I have done as much as possible on a global bases and now must work on a
# survey by survey bases do do Knn species and length assignments

# AUTHOR: Meadhbh Moriarty, 2016
# REVIEWED BY: 

# 3. EVHOE
fra_evh<-subset(alldata1, Survey=="EVHOE")
lofa_fra<-subset(fra_evh, is.na(estrank),)
levels(as.factor(lofa_fra$new_valid_name))
# Use Knn to resove the following 
# "Myctophidae"  
################################
# "Microchirus"
find<-subset(fra_evh, genus=="Microchirus",)
png(filename="Evhoe_sole_len_dist1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of soles (EVHOE)")+
  theme_classic()

dev.off()
# Only fish in this group is Microchirusvariegatus 
fra_evh$estsciname[fra_evh$new_valid_name=="Microchirus"]<-"Microchirusvariegatus"
fra_evh$estrank[fra_evh$new_valid_name=="Microchirus"]<-"Species"
fra_evh$estAphia_Code[fra_evh$estsciname=="Microchirusvariegatus"]<-274304
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Microchirus"]<-"Genus_to_spp"
####################################
# "Diaphus"     
# lanternfishes 77 recognised species - not much i can do here!
find<-subset(fra_evh, genus=="Diaphus",)
fra_evh$estsciname[fra_evh$new_valid_name=="Diaphus"]<-"Diaphus"
fra_evh$estrank[fra_evh$new_valid_name=="Diaphus"]<-"Genus"
fra_evh$estAphia_Code[fra_evh$estsciname=="Diaphus"]<-125819
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Diaphus"]<-"Recorded_data"
################################
# "Argyropelecus" - silver hatchetfishes
find<-subset(fra_evh, genus=="Argyropelecus",)
png(filename="evhoe_lenght_dist_hatchetfish1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of silver hatchetfishes (EVHOE)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="evhoe_lenght_dist_hatchetfish2_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of silver hatchetfishes (EVHOE)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="evhoe_lenght_dist_hatchetfish3_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="evhoe_lenght_dist_hatchetfish4_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Argyropelecushemigymnus", "Argyropelecusolfersii")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
27/10
# training data
27-3
train<- knn_dat[1:24, 3:8]
test<- knn_dat[25:27,3:8]
train_target<- knn_dat[1:24,2 ]
test_target<- knn_dat[25:27,2 ]
require(class)
sqrt(27)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=10)

t1<-(table(droplevels(test_target, m1)))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, !new_valid_name%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:27, 3:8]
test<- knn_dat_target[1:1,3:8]
train_target<- knn_dat[1:27,2 ]
test_target<- knn_dat_target[1:1,2 ]
m2<-knn(train, test,cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
# Knn predicts Eutriglagurnardus 
fra_evh$estsciname[fra_evh$new_valid_name=="Argyropelecus"]<-"Argyropelecusolfersii"
fra_evh$estrank[fra_evh$new_valid_name=="Argyropelecus"]<-"Species"
fra_evh$estAphia_Code[fra_evh$estsciname=="Argyropelecusolfersii"]<-274967 
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Argyropelecus"]<-"KNN_spp_assignment"
####################################
################################
# "Callionymus" - dragonets
find<-subset(fra_evh, genus=="Callionymus",)
png(filename="evhoe_lenght_dist_ dragonets1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonets (EVHOE)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="evhoe_lenght_dist_ dragonets2_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of  dragonets (EVHOE)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="evhoe_lenght_dist_ dragonets3_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="evhoe_lenght_dist_ dragonets4_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Callionymuslyra", "Callionymusmaculatus","Callionymusreticulatus")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
14845/10
# training data
14845-1485
train<- knn_dat[1:13360, 3:8]
test<- knn_dat[13361:14845,3:8]
train_target<- knn_dat[1:13360,2 ]
test_target<- knn_dat[13361:14845,2 ]
require(class)
sqrt(14845)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=122)
t1<-(table(droplevels(test_target, m1)))
knn_dat_target<-subset(find, !new_valid_name%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:14845, 3:8]
test<- knn_dat_target[1:532,3:8]
train_target<- knn_dat[1:14845,2 ]
test_target<- knn_dat_target[1:532,2 ]
m2<-knn(train, test,cl=train_target, k=122)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
knn_dat_target$M1<-m2
fra_evh$estrank[fra_evh$new_valid_name=="Callionymus"]<-"Species"
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Callionymus"]<-"KNN_spp_assignment"
# Knn predicts one of 2 spp of dragonet 
list<-knn_dat_target$New_UniqueID[knn_dat_target$M1=="Callionymusmaculatus"]
fra_evh$estsciname[fra_evh$new_valid_name=="Callionymus"
                   &fra_evh$New_UniqueID%in%list]<-"Callionymusmaculatus"
fra_evh$estAphia_Code[fra_evh$new_valid_name=="Callionymus"
                      &fra_evh$New_UniqueID%in%list]<-126793
list<-knn_dat_target$New_UniqueID[knn_dat_target$M1=="Callionymuslyra"]
fra_evh$estsciname[fra_evh$new_valid_name=="Callionymus"
                   &fra_evh$New_UniqueID%in%list]<-"Callionymuslyra"
fra_evh$estAphia_Code[fra_evh$new_valid_name=="Callionymus"
                      &fra_evh$New_UniqueID%in%list]<-126792 

################################
# "Pagellus" - porgies 
find<-subset(fra_evh, genus=="Pagellus",)
png(filename="evhoe_lenght_dist_porgies1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of porgies (EVHOE)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="evhoe_lenght_dist_porgies2_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of porgies (EVHOE)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="evhoe_lenght_dist_porgies3_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="evhoe_lenght_dist_porgies4_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Pagellusacarne", "Pagellusbogaraveo","Pagelluserythrinus")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
372/10
# training data
372-37
train<- knn_dat[1:335, 3:8]
test<- knn_dat[336:372,3:8]
train_target<- knn_dat[1:335,2 ]
test_target<- knn_dat[336:372,2 ]
sqrt(372)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=19)
t1<-(table(droplevels(test_target, m1)))

knn_dat_target<-subset(find, !new_valid_name%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:372, 3:8]
test<- knn_dat_target[1:8,3:8]
train_target<- knn_dat[1:372,2 ]
test_target<- knn_dat_target[1:8,2 ]
m2<-knn(train, test,cl=train_target, k=19)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
# Knn predicts Pagellusacarne
fra_evh$estsciname[fra_evh$new_valid_name=="Pagellus"]<-"Pagellusacarne"
fra_evh$estrank[fra_evh$new_valid_name=="Pagellus"]<-"Species"
fra_evh$estAphia_Code[fra_evh$estsciname=="Pagellusacarne"]<-127057 
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Pagellus"]<-"KNN_spp_assignment"
####################################
################################
# "Syngnathus" - pipefishes
find<-subset(fra_evh, genus=="Syngnathus",)
png(filename="evhoe_lenght_dist_pipefishes1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of pipefishes (EVHOE)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="evhoe_lenght_dist_pipefishes2_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  #geom_jitter() +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of pipefishes (EVHOE)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="evhoe_lenght_dist_pipefishes3_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="evhoe_lenght_dist_pipefishes4_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Syngnathusacus", "Syngnathusrostellatus", "Syngnathustyphle")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
106/10
# training data
106-11
train<- knn_dat[1:95, 3:8]
test<- knn_dat[96:106,3:8]
train_target<- knn_dat[1:95,2 ]
test_target<- knn_dat[96:106,2 ]
sqrt(106)
summary(train_target)
summary(test_target)

m1<-knn(train, test, cl=train_target, k=10)

t1<-(table(droplevels(test_target, m1)))

knn_dat_target<-subset(find, !new_valid_name%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:106, 3:8]
test<- knn_dat_target[1:4,3:8]
train_target<- knn_dat[1:106,2 ]
test_target<- knn_dat_target[1:4,2 ]
m2<-knn(train, test,cl=train_target, k=10)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
# Knn predicts Eutriglagurnardus 
fra_evh$estsciname[fra_evh$new_valid_name=="Syngnathus"]<-"Syngnathusacus"
fra_evh$estrank[fra_evh$new_valid_name=="Syngnathus"]<-"Species"
fra_evh$estAphia_Code[fra_evh$estsciname=="Syngnathusacus"]<-127387 
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Syngnathus"]<-"KNN_spp_assignment"
####################################
################################
# "Myctophidae" - Lanternfishes 
find<-subset(fra_evh, family=="Myctophidae",)
png(filename="evhoe_lenght_dist_lanternfish1_10-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of lanternfish (EVHOE)")+
  theme_classic()
dev.off()
# # Use Knn to resove  
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="evhoe_lenght_dist_lanternfish2_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of lanternfish (EVHOE)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="evhoe_lenght_dist_lanternfish3_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="evhoe_lenght_dist_lanternfish4_6-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# After Lenght has been explored, plot distributions  
######################
# plot spatial distribution of samples
cols<-c("red", "green", "blue", "yellow")
par(mfrow = c(1, 1))
plot(bm)
plot(find$ShootLong,find$ShootLat,col="black",
     bg=cols[as.factor(find$new_valid_name)], pch=21)
#################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)
str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Benthosemaglaciale", "Ceratoscopelusmaderensis", "Diaphus",
        "Lampanyctuscrocodilus", "Myctophum", "Myctophumpunctatum",
        "Notoscopeluskroyeri")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))
str(knn_dat)
293/10
# training data
293-29
train<- knn_dat[1:264, 3:8]
test<- knn_dat[265:293,3:8]
train_target<- knn_dat[1:264,2 ]
test_target<- knn_dat[265:293,2 ]
sqrt(293)
summary(train_target)
summary(test_target)
m1<-knn(train, test, cl=train_target, k=17)
t1<-(table(droplevels(test_target, m1)))

knn_dat_target<-subset(find, !new_valid_name%in%list &
                         !is.na(find$lenght_Norm ) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:293, 3:8]
test<- knn_dat_target[1:4,3:8]
train_target<- knn_dat[1:293,2 ]
test_target<- knn_dat_target[1:4,2 ]
m2<-knn(train, test,cl=train_target, k=17)
summary(droplevels(m2))
t2<-(table(droplevels(test_target, m1)))
# Knn predicts Notoscopeluskroyeri 
fra_evh$estsciname[fra_evh$new_valid_name=="Myctophidae"]<-"Notoscopeluskroyeri"
fra_evh$estrank[fra_evh$new_valid_name=="Myctophidae"]<-"Species"
fra_evh$estAphia_Code[fra_evh$estsciname=="Notoscopeluskroyeri"]<-272728 
fra_evh$SpeciesQualityCode[fra_evh$new_valid_name=="Myctophidae"]<-"KNN_spp_assignment"
####################################
# Recheck Lmax with new fishes names
testfra<-fra_evh
names(testfra)
names(maxdata)
testfra$LmaxFB<-NULL
testfra$WoRMSacceptedScientificNa<-NULL
testfra$Aphia_Code<-NULL
testfra<-join(testfra, maxdata, by="estAphia_Code")

test1 <- testfra[ which(testfra$Use_Lenght_cm1 > testfra$LmaxFB*1.1),]
test2 <- testfra[ which(testfra$Use_Lenght_cm1 > testfra$LmaxFB*1.4),]
# one of my C.maculatus from my knn assignments is too big to be a maculatus - 
# more likely to be a C.lyra
fra_evh$estsciname[fra_evh$new_valid_name=="Callionymus"
                   & fra_evh$New_UniqueID=="EVHOE/2015/4/THA2/90/GOV"
                   & fra_evh$Use_Lenght_cm1]<-"Callionymuslyra"
fra_evh$estAphia_Code[fra_evh$new_valid_name=="Callionymus"
                      & fra_evh$New_UniqueID=="EVHOE/2015/4/THA2/90/GOV"
                      & fra_evh$Use_Lenght_cm1]<-126792 

summary(as.factor(testfra$SpecVal))
# 3 observations have no length measurements - only total number
# Use a KNN classification to find an approperiate lenght of fish
no_lenght<-subset(testfra, is.na(Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))



##############
fra_evh$SweptArea_wing_km_sqrd<-fra_evh$SweptArea_wing_km_sqrd/1000
summary(fra_evh$SweptArea_wing_km_sqrd)
summary(fra_evh$Use_Lenght_cm1)
summary(fra_evh$HLNoAtLngt)
summary(fra_evh$NewHLNoAtLngt)
fra_evh$NewHLNoAtLngt[is.na(fra_evh$NewHLNoAtLngt)]<-fra_evh$NewTotalNo[is.na(fra_evh$NewHLNoAtLngt)]
# now use the new numbers at lenght to get densities
names(spp)
fra_evh<-as.data.table(fra_evh)
fra_evh$SweptArea_wing_km_sqrd<-as.numeric(fra_evh$SweptArea_wing_km_sqrd)

fra_evh[!is.na(NewHLNoAtLngt), c("HLNoAtLngtkm2") :=
       list(NewHLNoAtLngt/SweptArea_wing_km_sqrd)] 
### getting closer to the end now,
# need to tidy up the output file
names(traits)
names(fra_evh)
link<-subset(traits,
             select=c( "Aphia_Code", "LWRa","LWRb",
                       "LWRSource"))               
link$estAphia_Code<-link$Aphia_Code
link$Aphia_Code<-NULL
fra_evh<-as.data.frame(fra_evh)
fra_evh$estAphia_Code[fra_evh$estsciname=="Triglalyra"]<-127266
fra_evh$estAphia_Code[fra_evh$estsciname=="Congerconger"]<-126285
all_evh<-merge(fra_evh, link,  by="estAphia_Code", all.x=T)
# find all records with no LWR
find<-subset(all_evh, is.na(LWRa),)
summary(as.factor(find$estsciname))
#Ammodytes   
# Ammodytes marinus a= 1.70E-03	b= 3.21
# Ammodytes tobianus a= 3.30E-03	b= 2.91
exp(mean(log(1.70E-03+3.30E-03)))
(3.21+2.91)/2
all_evh$LWRa[all_evh$estsciname=="Ammodytes"]<-0.005
all_evh$LWRb[all_evh$estsciname=="Ammodytes"]<-3.06
#Arctozenusrisso 
all_evh$LWRa[all_evh$estsciname=="Arctozenusrisso"]<-0.00324 
all_evh$LWRb[all_evh$estsciname=="Arctozenusrisso"]<-3.08 
#Argyropelecushemigymnus 
all_evh$LWRa[all_evh$estsciname=="Argyropelecushemigymnus"]<-0.01820 
all_evh$LWRb[all_evh$estsciname=="Argyropelecushemigymnus"]<-3.00 
#Bathysoleaprofundicola       
all_evh$LWRa[all_evh$estsciname=="Bathysoleaprofundicola"]<-0.00389 
all_evh$LWRb[all_evh$estsciname=="Bathysoleaprofundicola"]<-3.14
#Benthosemaglaciale 
all_evh$LWRa[all_evh$estsciname=="Benthosemaglaciale"]<-0.01000 
all_evh$LWRb[all_evh$estsciname=="Benthosemaglaciale"]<-3.10 
#Ceratoscopelusmaderensis 
all_evh$LWRa[all_evh$estsciname=="Ceratoscopelusmaderensis"]<-0.00537 
all_evh$LWRb[all_evh$estsciname=="Ceratoscopelusmaderensis"]<-3.08 
#Cyttopsisrosea            
all_evh$LWRa[all_evh$estsciname=="Cyttopsisrosea"]<- 0.01995 
all_evh$LWRb[all_evh$estsciname=="Cyttopsisrosea"]<-3.01 
#Dalatiaslicha                  
all_evh$LWRa[all_evh$estsciname=="Dalatiaslicha"]<-0.00372 
all_evh$LWRb[all_evh$estsciname=="Dalatiaslicha"]<-3.12 
#Diaphus 
all_evh$LWRa[all_evh$estsciname=="Diaphus"]<- 0.00912 
all_evh$LWRb[all_evh$estsciname=="Diaphus"]<-3.04 
#Entelurusaequoreus  

#Entelurusaequoreus .00022 b= 3
all_evh$LWRa[all_evh$estsciname=="Entelurusaequoreus"]<-.00022
all_evh$LWRb[all_evh$estsciname=="Entelurusaequoreus"]<-3
#Gaidropsarusbiscayensis                 


# Gobiidae
#Aphia minuta 8.00E-04	3.53
#Crystallogobius linearis 0.01	2.94
#Deltentosteus quadrimaculatus 0.01	3.21
#Gobius cobitis 0.01	3.11
#Gobius gasteveni 0.01	3.05
#Gobius niger 0.01	3.03
#Gobius paganellus 0.01	3.1
#Lesueurigobius friesii 0.01	3.04
#Lesueurigobius sanzi 0.01	3.12
#Pomatoschistus lozanoi 0.01	3.04
#Pomatoschistus microps 0.01	3.18
#Pomatoschistus minutus 0.01	3.22
#Pomatoschistus pictus 0.01	3.19
exp(mean(log(8.00E-04+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01)))
(3.53+2.94+3.21+3.11+3.05+3.03+3.1+3.04+3.12+3.04+3.18+3.22+3.19)/13
all_evh$LWRa[all_evh$estsciname=="Gobiidae"]<-0.00611
all_evh$LWRb[all_evh$estsciname=="Gobiidae"]<-3.135385

#Halargyreusjohnsonii         
all_evh$LWRa[all_evh$estsciname=="Halargyreusjohnsonii"]<-0.00380 
all_evh$LWRb[all_evh$estsciname=="Halargyreusjohnsonii"]<- 3.12 
#Hexanchusgriseus   
all_evh$LWRa[all_evh$estsciname=="Hexanchusgriseus"]<- 0.01350
all_evh$LWRb[all_evh$estsciname=="Hexanchusgriseus"]<-3
#Hymenocephalusitalicus 
all_evh$LWRa[all_evh$estsciname=="Hymenocephalusitalicus"]<- 0.00302 
all_evh$LWRb[all_evh$estsciname=="Hymenocephalusitalicus"]<-3.13 
#Hyperoplus    
all_evh$LWRa[all_evh$estsciname=="Hyperoplus"]<-0.00611
all_evh$LWRb[all_evh$estsciname=="Hyperoplus"]<-2.965
#Macroparalepisaffinis  
all_evh$LWRa[all_evh$estsciname=="Macroparalepisaffinis"]<- 0.00324 
all_evh$LWRb[all_evh$estsciname=="Macroparalepisaffinis"]<-3.08 
#Nerophislumbriciformis 
all_evh$LWRa[all_evh$estsciname=="Nerophislumbriciformis"]<- 0.00042
all_evh$LWRb[all_evh$estsciname=="Nerophislumbriciformis"]<- 3
#Polymetmethaeocoryla      
all_evh$LWRa[all_evh$estsciname=="Polymetmethaeocoryla"]<- 0.00372 
all_evh$LWRb[all_evh$estsciname=="Polymetmethaeocoryla"]<- 3.12 

# Rajellabathyphila         
all_evh$LWRa[all_evh$estsciname=="Rajellabathyphila"]<-0.00295 
all_evh$LWRb[all_evh$estsciname=="Rajellabathyphila"]<- 3.21 
#Scomberjaponicus 
all_evh$LWRa[all_evh$estsciname=="Scomberjaponicus"]<-0.00759 
all_evh$LWRb[all_evh$estsciname=="Scomberjaponicus"]<- 3.06
#Spratelloideslewisi  
all_evh$LWRa[all_evh$estsciname=="Spratelloideslewisi"]<-0.00513 
all_evh$LWRb[all_evh$estsciname=="Spratelloideslewisi"]<-3.14
# Stomiasboaboa 
all_evh$LWRa[all_evh$estsciname=="Stomiasboaboa"]<-0.00229 
all_evh$LWRb[all_evh$estsciname=="Stomiasboaboa"]<-3.16 







# mean lenght is needed for lenght weights  if measured in cm then +0.5
# if measured in .5 cm then add + 0.25
all_evh$LngtCode[is.na(all_evh$LngtCode)]<-1

all_evh$mean_lenght_cm[all_evh$LngtCode=="1"]<-all_evh$Use_Lenght_cm1[all_evh$LngtCode=="1"]+.5
all_evh$mean_lenght_cm[all_evh$LngtCode=="0"]<-all_evh$Use_Lenght_cm1[all_evh$LngtCode=="0"]+.25
all_evh$mean_lenght_cm[all_evh$LngtCode=="."]<-all_evh$Use_Lenght_cm1[all_evh$LngtCode=="."]+.25
all_evh$IndivFishWgt_g<-all_evh$LWRa*all_evh$mean_lenght_cm^all_evh$LWRb
all_evh$SpeciesSciName<-all_evh$estsciname
all_evh$FishLenght_cm<-all_evh$Use_Lenght_cm1
all_evh$Number<-all_evh$NewTotalNo
all_evh$DensAbund_N_Sqkm<-all_evh$HLNoAtLngtkm2
all_evh$DensBiom_kg_Sqkm<-(all_evh$Number*all_evh$IndivFishWgt_g/1000)/all_evh$SweptArea_wing_km_sqrd
list<-unique(all_evh$New_UniqueID)

need<-subset(h, New_UniqueID%in%list,
             select=c(New_UniqueID,HaulID, Survey_Acronym))
all_evh1<-merge(need, all_evh)
bio_dat_france_evhoe <-subset(all_evh1, 
                               select=c(Survey_Acronym, HaulID, SpeciesSciName,
                                        FishLenght_cm, IndivFishWgt_g, Number,
                                        DensAbund_N_Sqkm, DensBiom_kg_Sqkm))
#"CSBBFraOT4"
CSBBFraOT4_LD<-subset(bio_dat_france_evhoe,)

write.csv(CSBBFraOT4_LD, "Bio_info_CSBBFraOT4_10-06-2016.csv")

