###################
# Version Control #
###################
# R version 3.2.2 (2015-08-14): Fire Safety 
# platform       x86_64-w64-mingw32 (64-bit)
###############
# Script Info #
###############
# Script 7.4 
# We now correct the biological data for each of the surveys individually
# I have done as much as possible on a global bases and now must work on a
# survey by survey bases do do Knn species and length assignments

# AUTHOR: Meadhbh Moriarty, 2016
# REVIEWED BY: 

# 4.  FR-CGFS
fra_cha<-subset(alldata1, Survey=="FR-CGFS")
lofa_fra<-subset(fra_cha, is.na(estrank),)
levels(as.factor(lofa_fra$new_valid_name))
# Use Knn to resove the following 
# dragonets
################################
find<-subset(fra_cha, genus=="Callionymus",)

summary(as.factor(find$new_valid_name))

png(filename="FRA_knn_assignment_dragonets1_7-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of dragonets (FR_CGFS)")+
  theme_classic()

dev.off()
# don't need KNN these will all be called Callionymuslyra
fra_cha$estsciname[fra_cha$new_valid_name=="Callionymus"]<-"Callionymuslyra"
fra_cha$estrank[fra_cha$new_valid_name=="Callionymus"]<-"Species"
fra_cha$estAphia_Code[fra_cha$estsciname=="Callionymuslyra"]<-126792
fra_cha$SpeciesQualityCode[fra_cha$new_valid_name=="Callionymuslyra"]<-"genus_to_spp"
####################################
# Use Knn to resove "Microchirus"     
# soles

find<-subset(fra_cha, genus=="Microchirus",)
summary(droplevels(as.factor(find$new_valid_name)))
# don't need KNN these will all be called Microchirusvariegatus

fra_cha$estsciname[fra_cha$new_valid_name=="Microchirus"]<-"Microchirusvariegatus"
fra_cha$estrank[fra_cha$new_valid_name=="Microchirus"]<-"Species"

fra_cha$estAphia_Code[fra_cha$estsciname=="Microchirusvariegatus"]<-274304
fra_cha$SpeciesQualityCode[fra_cha$new_valid_name=="Microchirusvariegatus"]<-"genus_to_spp"
####################################
# Use Knn to resove "Zeugopterus"     
# turbots 
find<-subset(fra_cha, genus=="Zeugopterus",)
summary(droplevels(as.factor(find$new_valid_name)))
################################
png(filename="FRA_channel_Len_dist_Turbot_7-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=new_valid_name, group=new_valid_name)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Turbots (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="FRA_channel_Len_dist_Turbot1_7-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
   geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Turbots (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="FRA_channel_Len_dist_Turbot2_7-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="FRA_channel_Len_dist_Turbot3_7-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
# KNN can be used here
################
# Predict which species a fish is based on given parameters
# length, StatRec, Year etc
set.seed(9850)

str(find)
find$new_valid_name<-as.factor(find$new_valid_name)
summary(droplevels(find$new_valid_name))
list<-c("Zeugopteruspunctatus", "Zeugopterusregius")
knn_dat<-subset(find, new_valid_name%in%list &
                  !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
18/10
# training data
18-2
train<- knn_dat[1:16, 3:8]
test<- knn_dat[17:18,3:8]
train_target<- knn_dat[1:16,2 ]
test_target<- knn_dat[17:18,2 ]
require(class)
sqrt(18)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=4)

t1<-(table(droplevels(test_target, m1)))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, !new_valid_name%in%list ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:18, 3:6]
test<- knn_dat_target[1:1,3:6]
train_target<- knn_dat[1:18,2 ]
test_target<- knn_dat_target[1:1,2 ]

m2<-knn(train, test, 
        cl=train_target, k=4)
summary(droplevels(m2))

t2<-(table(droplevels(test_target, m1)))
t2


# Knn predicts Eutriglagurnardus 
fra_cha$estsciname[fra_cha$new_valid_name=="Zeugopterus"]<-"Zeugopteruspunctatus"
fra_cha$estrank[fra_cha$new_valid_name=="Zeugopterus"]<-"Species"
fra_cha$estAphia_Code[fra_cha$estsciname=="Zeugopteruspunctatus"]<-127151
fra_cha$SpeciesQualityCode[fra_cha$new_valid_name=="Zeugopterus"]<-"KNN_spp_assignment"

lofa_fra<-subset(fra_cha, is.na(estrank),)
# All done with reassigning species names - 
####################################
# Recheck Lmax with new fishes names
testfra<-fra_cha
names(maxdata)
testfra$LmaxFB<-NULL
testfra$WoRMSacceptedScientificNa<-NULL
testfra<-join(testfra, maxdata, by="estAphia_Code")

test1 <- testfra[ which(testfra$Use_Lenght_cm1 > testfra$LmaxFB*1.1),]
test2 <- testfra[ which(testfra$Use_Lenght_cm1 > testfra$LmaxFB*1.4),]
# no need for concern here!

summary(as.factor(testfra$SpecVal))
# 354 observations have no length measurements - only total number
# and 2070 observations have no length measurements - have total number and cat.
# catch weight
# Use a KNN classification to find an approperiate lenght of fish
no_lenght<-subset(testfra,is.na(testfra$Use_Lenght_cm1),)
summary(as.factor(no_lenght$estsciname))
############
#Ammodytes #
############
## get a lenght for the Sandeel.
find<-subset(testfra, estsciname=="Ammodytes",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))



png(filename="Len_dist_sandeel_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Sandeels (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_sandeel_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Sandeels (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_sandeel_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Split by species
# With mean lines, using cdat from above
png(filename="Len_dist_sandeel_fra_3_8-6-2016.pngg")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) + 
  geom_density()  + 
  facet_grid(new_valid_name ~ .) +
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
str(find)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))


str(knn_dat)
summary(knn_dat)
53/10
# training data
53-5
train<- knn_dat[1:48, 3:7]
test<- knn_dat[49:53,3:7]
train_target<- knn_dat[1:48,8 ]
test_target<- knn_dat[49:53,8 ]
require(class)
sqrt(53)
summary(train_target)
summary(test_target)

m1<-knn(train, test, 
        cl=train_target, k=10)

t1<-(table(test_target, m1))

# happy with how this is working - so lets add the new test data
# the fish that are not identified to species level
# and use all the data available to train the model

knn_dat_target<-subset(find, is.na(find$lenght_Norm) ,
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm))

# training data
train<- knn_dat[1:53, 3:6]
test<- knn_dat_target[1:2,3:6]
train_target<- knn_dat[1:53,8 ]
test_target<- knn_dat_target[1:2,8 ]

m2<-knn(train, test, 
        cl=train_target, k=10)
summary(droplevels(m2))

(0.0509399636143117*329.8)+.2
# this is 17 cm
# Knn predicts 17cm fish
testfra$Use_Lenght_cm1[testfra$estsciname=="Ammodytes"
                    &is.na(testfra$Use_Lenght_cm)]<-17

testfra$QC_Length[testfra$estsciname=="Ammodytes"
               &is.na(testfra$Use_Lenght_cm)]<-"KNN_len_assignment"
##################
#Anguillaanguilla# 
##################
find<-subset(testfra, estsciname=="Anguillaanguilla",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Anguillaanguilla_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Anguilla anguilla (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Anguillaanguilla_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Sandeels (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Anguillaanguilla_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Anguillaanguilla_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Anguillaanguilla_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Anguillaanguilla"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, estsciname=="Anguillaanguilla" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Anguillaanguilla" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
####################
#Arnoglossuslaterna#  
##################
find<-subset(testfra, estsciname=="Arnoglossuslaterna",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Anguillaanguilla_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Arnoglossus laterna(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Arnoglossuslaterna_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Arnoglossus laterna (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Arnoglossuslaterna_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Arnoglossuslaterna_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Arnoglossuslaterna_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Arnoglossuslaterna"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, estsciname=="Arnoglossuslaterna" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Arnoglossuslaterna" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#####################
#Atherinapresbyter ##
#####################
find<-subset(testfra, estsciname=="Atherinapresbyter",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Atherinapresbyter_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Atherinapresbyter(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Atherinapresbyter_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Atherinapresbyter (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Atherinapresbyter_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Atherinapresbyter_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Atherinapresbyter_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Atherinapresbyter"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, estsciname=="Atherinapresbyter" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Atherinapresbyter" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
################
# Belonebelone #
################
find<-subset(testfra, estsciname=="Belonebelone",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Belonebelone_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Belonebelone(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Belonebelone_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Belonebelone (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Belonebelone_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Belonebelone_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Belonebelone_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Belonebelone"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Belonebelone" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Belonebelone" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
####################
#Blenniusocellaris #
####################
find<-subset(testfra, estsciname=="Blenniusocellaris",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_distBlenniusocellaris_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Blenniusocellaris(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Blenniusocellaris_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Blenniusocellaris (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Blenniusocellaris_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Blenniusocellaris_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Blenniusocellaris_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Blenniusocellaris"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Blenniusocellaris" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Blenniusocellaris" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
######################
# Buglossidiumluteum # 
######################
find<-subset(testfra, estsciname=="Buglossidiumluteum",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Buglossidiumluteum_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Buglossidiumluteum(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Buglossidiumluteum_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Buglossidiumluteum (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Buglossidiumluteum_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Buglossidiumluteum_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Buglossidiumluteum_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Buglossidiumluteum"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Buglossidiumluteum" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Buglossidiumluteum" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
##################
#Callionymuslyra #
##################
find<-subset(testfra, estsciname=="Callionymuslyra",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Callionymuslyra_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Callionymuslyra(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Callionymuslyra_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Callionymuslyra (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Callionymuslyra_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Callionymuslyra_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Callionymuslyra_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Callionymuslyra"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Callionymuslyra" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Callionymuslyra" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
################
#Ciliatamustela#     
################
find<-subset(testfra, estsciname=="Ciliatamustela",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Ciliatamustela_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Ciliatamustela(FRCGFS)")+
  theme_classic()
dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Ciliatamustela_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Ciliatamustela (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Ciliatamustela_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Ciliatamustela_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Ciliatamustela_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Ciliatamustela"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Ciliatamustela" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Ciliatamustela" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
########################
#Ctenolabrusrupestris ##  
########################
find<-subset(testfra, estsciname=="Ctenolabrusrupestris",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Ctenolabrusrupestris_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Ctenolabrusrupestris(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Ctenolabrusrupestris_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Ctenolabrusrupestris (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Ctenolabrusrupestris_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Ctenolabrusrupestris_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Ctenolabrusrupestris_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Ctenolabrusrupestris"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Ctenolabrusrupestris" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Ctenolabrusrupestris" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
####################
#Echiichthysvipera #
####################
find<-subset(testfra, estsciname=="Echiichthysvipera",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Echiichthysviperafra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Echiichthysvipera (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Echiichthysvipera_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Echiichthysvipera (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Echiichthysvipera_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Echiichthysvipera_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Echiichthysvipera_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Echiichthysvipera"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Echiichthysvipera" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Echiichthysvipera" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
########################
#Engraulisencrasicolus #        
########################
find<-subset(testfra, estsciname=="Engraulisencrasicolus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Engraulisencrasicolus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Engraulisencrasicolus (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Engraulisencrasicolus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Engraulisencrasicolus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Engraulisencrasicolus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Engraulisencrasicolus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Engraulisencrasicolus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Engraulisencrasicolus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Engraulisencrasicolus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Engraulisencrasicolus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
####################
#Eutriglagurnardus #      
####################
find<-subset(testfra, estsciname=="Eutriglagurnardus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Eutriglagurnardus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Eutriglagurnardus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Eutriglagurnardus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Eutriglagurnardus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Eutriglagurnardus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Eutriglagurnardus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Eutriglagurnardus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Eutriglagurnardus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Eutriglagurnardus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Eutriglagurnardus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
##############
#Gadusmorhua #
################
find<-subset(testfra, estsciname=="Gadusmorhua",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Gadusmorhua_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gadusmorhua(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Gadusmorhua_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Gadusmorhua (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Gadusmorhua_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Gadusmorhua_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Gadusmorhua_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Gadusmorhua"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Gadusmorhua" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Gadusmorhua" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#######################
#Gaidropsarusvulgaris #           
#######################
find<-subset(testfra, estsciname=="Gaidropsarusvulgaris",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Gaidropsarusvulgaris_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Gaidropsarusvulgaris(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Gaidropsarusvulgaris_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Gaidropsarusvulgaris (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Gaidropsarusvulgaris_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Gaidropsarusvulgaris_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Gaidropsarusvulgaris_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Gaidropsarusvulgaris"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Gaidropsarusvulgaris" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Gaidropsarusvulgaris" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
##############
#Hyperoplus ##      
##############
find<-subset(testfra, estsciname=="Hyperoplus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Hyperoplus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Hyperoplus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Hyperoplus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Hyperoplus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Hyperoplus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Hyperoplus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Hyperoplus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Hyperoplus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Hyperoplus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Hyperoplus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
################
#Labrusbergylta# 
################
find<-subset(testfra, estsciname=="Labrusbergylta",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Labrusbergylta_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Labrusbergylta(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Labrusbergylta_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Labrusbergylta (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Labrusbergylta_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Labrusbergylta_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Labrusbergylta_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Labrusbergylta"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Labrusbergylta" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Labrusbergylta" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
###########################
#Lepadogasterlepadogaster #
###########################
find<-subset(testfra, estsciname=="Lepadogasterlepadogaster",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Lepadogasterlepadogaster_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Lepadogasterlepadogaster(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Lepadogasterlepadogaster_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Lepadogasterlepadogaster (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Lepadogasterlepadogaster_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Lepadogasterlepadogaster_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Lepadogasterlepadogaster_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Lepadogasterlepadogaster"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Lepadogasterlepadogaster" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Lepadogasterlepadogaster" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
########################
#Microchirusvariegatus #       
########################
find<-subset(testfra, estsciname=="Microchirusvariegatus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Microchirusvariegatus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Microchirusvariegatus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Microchirusvariegatus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Microchirusvariegatus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Microchirusvariegatus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Microchirusvariegatus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Microchirusvariegatus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Microchirusvariegatus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Microchirusvariegatus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Microchirusvariegatus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
###################
#Mullussurmuletus #    
###################
find<-subset(testfra, estsciname=="Mullussurmuletus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Mullussurmuletus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Mullussurmuletus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Mullussurmuletus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Mullussurmuletus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Mullussurmuletus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Mullussurmuletus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Mullussurmuletus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Mullussurmuletus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Mullussurmuletus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Mullussurmuletus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
####################
#Sardinapilchardus #
####################
find<-subset(testfra, estsciname=="Sardinapilchardus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Sardinapilchardus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Sardinapilchardus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Sardinapilchardus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Sardinapilchardus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Sardinapilchardus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Sardinapilchardus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Sardinapilchardus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Sardinapilchardus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Sardinapilchardus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Sardinapilchardus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#######################
#Scyliorhinuscanicula #   
#######################
find<-subset(testfra, estsciname=="Scyliorhinuscanicula",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Scyliorhinuscanicula_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Scyliorhinuscanicula(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Scyliorhinuscanicula_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Scyliorhinuscanicula (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Scyliorhinuscanicula_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Scyliorhinuscanicula_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Scyliorhinuscanicula_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Scyliorhinuscanicula"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Scyliorhinuscanicula" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Scyliorhinuscanicula" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#########################
#Spondyliosomacantharus #    
#########################
find<-subset(testfra, estsciname=="Spondyliosomacantharus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Spondyliosomacantharus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Spondyliosomacantharus (FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Spondyliosomacantharus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Spondyliosomacantharus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Spondyliosomacantharus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Spondyliosomacantharus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Spondyliosomacantharus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Spondyliosomacantharus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Spondyliosomacantharus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Spondyliosomacantharus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#####################
#    Syngnathusacus #
#####################
find<-subset(testfra, estsciname=="Syngnathusacus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Syngnathusacus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Syngnathusacus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Syngnathusacus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Syngnathusacus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Syngnathusacus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Syngnathusacus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Syngnathusacus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Syngnathusacus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Syngnathusacus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Syngnathusacus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
##################
#Taurulusbubalis #          
##################
find<-subset(testfra, estsciname=="Taurulusbubalis",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Taurulusbubalis_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Taurulusbubalis(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Taurulusbubalis_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Taurulusbubalis (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Taurulusbubalis_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Taurulusbubalis_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Taurulusbubalis_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Taurulusbubalis"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Taurulusbubalis" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Taurulusbubalis" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
##################
# Trachinusdraco##       
##################
find<-subset(testfra, estsciname=="Trachinusdraco",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Trachinusdraco_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trachinusdraco(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Trachinusdraco_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Trachinusdraco (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Trachinusdraco_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Trachinusdraco_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Trachinusdraco_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Trachinusdraco"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Trachinusdraco" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Trachinusdraco" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#####################
#Trachurustrachurus #
#####################
find<-subset(testfra, estsciname=="Trachurustrachurus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Trachurustrachurus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trachurustrachurus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Trachurustrachurus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Trachurustrachurus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Trachurustrachurus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Trachurustrachurus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Trachurustrachurus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Trachurustrachurus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Trachurustrachurus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Trachurustrachurus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
################
#Triglalyra   ##    
################
find<-subset(testfra, estsciname=="Triglalyra",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Triglalyra_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Triglalyra(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Triglalyra_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Triglalyra (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Triglalyra_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Triglalyra_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Triglalyra_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Triglalyra"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Triglalyra" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Triglalyra" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
######################
# Trisopterusluscus ##
######################
find<-subset(testfra, estsciname=="Trisopterusluscus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Trisopterusluscus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trisopterusluscus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Trisopterusluscus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Trisopterusluscus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Trisopterusluscus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Trisopterusluscus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Trisopterusluscus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Trisopterusluscus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Trisopterusluscus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Trisopterusluscus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
########################
#  Trisopterusminutus ##
########################
find<-subset(testfra, estsciname=="Trisopterusminutus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Trisopterusminutus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Trisopterusminutus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Trisopterusminutus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Trisopterusminutus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Trisopterusminutus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Trisopterusminutus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Trisopterusminutus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Trisopterusminutus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Trisopterusminutus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Trisopterusminutus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#######################
#Zeugopteruspunctatus #
#######################
find<-subset(testfra, estsciname=="Zeugopteruspunctatus",)
knn_len<-subset(find, !is.na(find$lenght_Norm ),
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm))

png(filename="Len_dist_Zeugopteruspunctatus_fra_1_8-6-2016.png")
ggplot(find, aes(x=Use_Lenght_cm1, y=HLNoAtLngtkm2,
                 colour=estsciname, group=estsciname)) +
  geom_jitter() +
  ggtitle("Lenght distribution of Zeugopteruspunctatus(FRCGFS)")+
  theme_classic()

dev.off()
summary<-ddply(find,
               c("new_valid_name", "rank", 
                 "Use_Lenght_cm1"),
               summarise,
               totalnopofsamples=sum(as.numeric(HLNoAtLngtkm2)))
means<-ddply(summary,c("new_valid_name", "rank"),
             summarise, 
             mean=mean(Use_Lenght_cm1, na.rm=TRUE),
             sd=sd(Use_Lenght_cm1, na.rm=TRUE))

# Overlaid histograms with means    
png(filename="Len_dist_Zeugopteruspunctatus_fra_2_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, y=totalnopofsamples,
                    colour=new_valid_name, group=new_valid_name,
                    fill=new_valid_name)) +
  geom_histogram(binwidth=1, alpha=.5, 
                 position="dodge", stat="identity") +
  ggtitle("Lenght distribution of Zeugopteruspunctatus (FRCGFS)")+
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
# Density plots with means
png(filename="Len_dist_Zeugopteruspunctatus_fra_3_8-6-2016.png")
ggplot(summary, aes(x=Use_Lenght_cm1, colour=new_valid_name)) +
  geom_density() +
  geom_vline(data=means, aes(xintercept=mean,  colour=new_valid_name),
             linetype="dashed", size=1)+
  theme_classic()
dev.off()
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Zeugopteruspunctatus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Zeugopteruspunctatus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
plot(kdt_summary$lenght, kdt_summary$freq)
# add QC lable: 
testfra$QC_Length[testfra$estsciname=="Zeugopteruspunctatus"& is.na(testfra$Use_Lenght_cm1)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Zeugopteruspunctatus" & is.na(testfra$lenght_Norm),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Zeugopteruspunctatus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
################################################
# 1. Agonuscataphractus no of observations 165##
################################################
find<-subset(testfra, estsciname=="Agonuscataphractus",)
# no lenghts ever recorded for this species??
# use L-W relationship to estimate mean length of haul
# Bayesian length-weight: a=0.01000 (0.00369 - 0.02711), b=3.00 (2.77 - 3.23),
# based on LWR estimates for this (Sub)family-body shape (Ref. 93245).
str(find)
find$meanwgt<-as.numeric(find$CatCatchWgt)/as.numeric(find$TotalNo)
find$Use_Lenght_cm1<-exp((log(find$meanwgt)-log(0.01))/3)
find$Use_Lenght_cm1<-round(find$Use_Lenght_cm1)
summary(as.numeric(find$Use_Lenght_cm1))

testfra$Use_Lenght_cm1[testfra$estsciname=="Agonuscataphractus"]<-round(exp((log(find$meanwgt)-log(0.01))/3))
# Use KNN to assign the 27 NA vals. 
#################
# Predict which lenght a fish is based on given parameters
# abundance, Quarter, Year etc
find<-subset(testfra, estsciname=="Agonuscataphractus",)
find$lenght_Norm<-(find$Use_Lenght_cm1-.2)/329.8
set.seed(9850)
knn_dat<-subset(find, !is.na(find$lenght_Norm ) ,
                select= c(New_UniqueID,new_valid_name,q_Norm,
                          year_Norm,lat_Norm,long_Norm,
                          numbers_Norm,lenght_Norm, NewTotalNo))

knn_dat_target<-subset(find, is.na(find$lenght_Norm),
                       select= c(New_UniqueID,new_valid_name,q_Norm,
                                 year_Norm,lat_Norm,long_Norm,
                                 numbers_Norm,lenght_Norm,TotalNo))
# expand rows based on total fish number
sum(knn_dat_target$TotalNo)
knn_dat_target$TotalNo[is.na(knn_dat_target$TotalNo)]<-1
kdt_expand<-knn_dat_target[rep(row.names(knn_dat_target),knn_dat_target$TotalNo),1:9]
# training data
nrow(knn_dat)
nrow(kdt_expand)
sqrt(nrow(knn_dat))
train<- knn_dat[1:nrow(knn_dat), 3:6]
test<- kdt_expand[1:nrow(kdt_expand),3:6]
train_target<-knn_dat[1:nrow(knn_dat),8]
test_target<-kdt_expand[1:nrow(kdt_expand),8]
m2<-knn(train, test, cl=train_target, k=sqrt(nrow(knn_dat)))
kdt_expand$lenght_Norm<-(m2)
write.csv(kdt_expand, "FRCGFS_Agonuscataphractus_knn_lngt_28-6-2016.csv")
kdt<-read.csv("FRCGFS_Agonuscataphractus_knn_lngt_28-6-2016.csv")
str(kdt)
kdt$lenght<-((kdt$lenght_Norm)*329.8)+.2
# now get the frequency of each lenght for each station
kdt_summary<-ddply(kdt, c("New_UniqueID", "new_valid_name", "lenght"), 
                   summarise,
                   freq=length(lenght))
###############################################################
# add QC lables: 
testfra$QC_Length[testfra$estsciname=="Agonuscataphractus"& is.na(testfra$Use_Lenght_cm1)
                  &!is.na(testfra$CatCatchWgt)]<-"L-W_relationship"

testfra$QC_Length[testfra$estsciname=="Agonuscataphractus"& is.na(testfra$Use_Lenght_cm1)
                  &is.na(testfra$CatCatchWgt)]<-"KNN_len_assignment"

find1<-subset(testfra, testfra$estsciname=="Agonuscataphractus" & is.na(testfra$Use_Lenght_cm1),)
expand_find<-find1[rep(row.names(find1),find1$TotalNo),1:60]
expand_find$Use_Lenght_cm1<-kdt$lenght
expanded<-kdt_summary<-ddply(expand_find, c(1:60), 
                             summarise,
                             freq=length(Use_Lenght_cm1))
expanded$NewHLNoAtLngt<-expanded$freq
expanded$freq<-NULL
testfra1<-subset(testfra, !(estsciname=="Agonuscataphractus" & is.na(testfra$lenght_Norm)),)
testfra<-rbind(testfra1, expanded)
#############################
# 2. Gobiidae no of fish 34##
#############################
names(testfra)

find<-subset(testfra, estsciname=="Gobiidae",)
# same issue as Agonuscataphractus
# use L-W relationship to estimate mean length of haul
find$meanwgt<-as.numeric(find$CatCatchWgt)/as.numeric(find$TotalNo)
find$Use_Lenght_cm1<-exp((log(find$meanwgt)-log(0.01))/3)
find$Use_Lenght_cm1<-round(find$Use_Lenght_cm1)
summary(as.numeric(find$Use_Lenght_cm1))

testfra$Use_Lenght_cm1[testfra$estsciname=="Gobiidae"]<-round(exp((log(find$meanwgt)-log(0.01))/3))
testfra$QC_Length[testfra$estsciname=="Gobiidae"& is.na(testfra$Use_Lenght_cm1)
                  &!is.na(testfra$CatCatchWgt)]<-"L-W_relationship"


#########################
#Hippocampushippocampus #
#########################
find<-subset(testfra, estsciname=="Hippocampushippocampus",)
# same issue as Agonuscataphractus
# use L-W relationship to estimate mean length of haul

find$meanwgt<-as.numeric(find$CatCatchWgt)/as.numeric(find$TotalNo)
find$meanwgt[find$meanwgt==4999.5]<-4.5
find$Use_Lenght_cm1<-exp((log(find$meanwgt)-log(0.01))/3)
find$Use_Lenght_cm1<-round(find$Use_Lenght_cm1)
summary(as.numeric(find$Use_Lenght_cm1))

testfra$Use_Lenght_cm1[testfra$estsciname=="Hippocampushippocampus"]<-round(exp((log(find$meanwgt)-log(0.01))/3))
testfra$QC_Length[testfra$estsciname=="Hippocampushippocampus"& is.na(testfra$Use_Lenght_cm1)
                  &!is.na(testfra$CatCatchWgt)]<-"L-W_relationship"

##############
testfra$SweptArea_wing_km_sqrd<-testfra$SweptArea_wing_km_sqrd/1000
summary(testfra$SweptArea_wing_km_sqrd)
summary(testfra$Use_Lenght_cm1)
summary(testfra$HLNoAtLngt)
summary(testfra$NewHLNoAtLngt)
testfra$NewHLNoAtLngt[is.na(testfra$NewHLNoAtLngt)]<-testfra$NewTotalNo[is.na(testfra$NewHLNoAtLngt)]
# now use the new numbers at lenght to get densities
names(spp)
testfra<-as.data.table(testfra)
testfra$SweptArea_wing_km_sqrd<-as.numeric(wsco$SweptArea_wing_km_sqrd)

testfra[!is.na(NewHLNoAtLngt), c("HLNoAtLngtkm2") :=
       list(NewHLNoAtLngt/SweptArea_wing_km_sqrd)] 
### getting closer to the end now,
# need to tidy up the output file
names(traits)
names(testfra)
link<-subset(traits,
             select=c( "Aphia_Code", "LWRa","LWRb",
                       "LWRSource"))               
link$estAphia_Code<-link$Aphia_Code
link$Aphia_Code<-NULL
testfra<-as.data.frame(testfra)
testfra$estAphia_Code[testfra$estsciname=="Triglalyra"]<-127266
testfra$estAphia_Code[testfra$estsciname=="Congerconger"]<-126285
all_cgfs<-merge(testfra, link,  by="estAphia_Code", all.x=T)
# find all records with no LWR
find<-subset(all_cgfs, is.na(LWRa),)
summary(as.factor(find$estsciname))

# Ammodytes marinus a= 1.70E-03	b= 3.21
# Ammodytes tobianus a= 3.30E-03	b= 2.91
(1.70E-03+3.30E-03)/2
(3.21+2.91)/2
all_cgfs$LWRa[all_cgfs$estsciname=="Ammodytes"]<-0.0025
all_cgfs$LWRb[all_cgfs$estsciname=="Ammodytes"]<-3.06

# Hyperoplus immaculatus a= (0.00306+0.00236)/2 b= 3
# Hyperoplus lanceolatus 3.40E-03	2.93
(0.00271+3.40E-03)/2
(3+2.93)/2
all_cgfs$LWRa[all_cgfs$estsciname=="Hyperoplus"]<-0.003055
all_cgfs$LWRb[all_cgfs$estsciname=="Hyperoplus"]<-2.965

# Gobiidae
Aphia minuta 8.00E-04	3.53
Crystallogobius linearis 0.01	2.94
Deltentosteus quadrimaculatus 0.01	3.21
Gobius cobitis 0.01	3.11
Gobius gasteveni 0.01	3.05
Gobius niger 0.01	3.03
Gobius paganellus 0.01	3.1
Lesueurigobius friesii 0.01	3.04
Lesueurigobius sanzi 0.01	3.12
Pomatoschistus lozanoi 0.01	3.04
Pomatoschistus microps 0.01	3.18
Pomatoschistus minutus 0.01	3.22
Pomatoschistus pictus 0.01	3.19
(8.00E-04+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01+0.01)/13
(3.53+2.94+3.21+3.11+3.05+3.03+3.1+3.04+3.12+3.04+3.18+3.22+3.19)/13
all_cgfs$LWRa[all_cgfs$estsciname=="Gobiidae"]<-0.009292308
all_cgfs$LWRb[all_cgfs$estsciname=="Gobiidae"]<-3.135385
#Zeugopterusregius
#Bayesian length-weight: a=0.01288 (0.00567 - 0.02929), b=3.03 (2.83 - 3.23), based on LWR estimates for this Family-body shape (Ref. 93245).
all_cgfs$LWRa[all_cgfs$estsciname=="Zeugopterusregius"]<-0.01288
all_cgfs$LWRb[all_cgfs$estsciname=="Zeugopterusregius"]<-3.03

#Symphodus
#Bayesian length-weight: a=0.01122 (0.00624 - 0.02017), b=3.00 (2.85 - 3.15), based on LWR estimates for this species & Genus-body shape (Ref. 93245).
all_cgfs$LWRa[all_cgfs$estsciname=="Symphodus"]<-0.01122
all_cgfs$LWRb[all_cgfs$estsciname=="Symphodus"]<-3
#Myoxocephalusscorpioides
# Bayesian length-weight: a=0.00661 (0.00270 - 0.01615), b=3.17 (2.95 - 3.39), based on LWR estimates for this Family-body shape (Ref. 93245).
all_cgfs$LWRa[all_cgfs$estsciname=="Myoxocephalusscorpioides"]<-0.00661
all_cgfs$LWRb[all_cgfs$estsciname=="Myoxocephalusscorpioides"]<-3.17


summary(as.factor(all_cgfs$LngtCode))
# mean lenght is needed for lenght weights  if measured in cm then +0.5
# if measured in .5 cm then add + 0.25
all_cgfs$LngtCode[is.na(all_cgfs$LngtCode)]<-1

all_cgfs$mean_lenght_cm[all_cgfs$LngtCode=="1"]<-all_cgfs$Use_Lenght_cm1[all_cgfs$LngtCode=="1"]+.5
all_cgfs$mean_lenght_cm[all_cgfs$LngtCode=="0"]<-all_cgfs$Use_Lenght_cm1[all_cgfs$LngtCode=="0"]+.25
all_cgfs$mean_lenght_cm[all_cgfs$LngtCode=="."]<-all_cgfs$Use_Lenght_cm1[all_cgfs$LngtCode=="."]+.25
all_cgfs$IndivFishWgt_g<-all_cgfs$LWRa*all_cgfs$mean_lenght_cm^all_cgfs$LWRb
all_cgfs$SpeciesSciName<-all_cgfs$estsciname
all_cgfs$FishLenght_cm<-all_cgfs$mean_lenght_cm
all_cgfs$Number<-all_cgfs$NewTotalNo
all_cgfs$DensAbund_N_Sqkm<-all_cgfs$HLNoAtLngtkm2
all_cgfs$DensBiom_kg_Sqkm<-(all_cgfs$Number*all_cgfs$IndivFishWgt_g/1000)/all_cgfs$SweptArea_wing_km_sqrd
list<-unique(all_cgfs$New_UniqueID)

need<-subset(h, New_UniqueID%in%list,
             select=c(New_UniqueID,HaulID, Survey_Acronym))
all_cgfs1<-merge(need, all_cgfs)
bio_dat_french_channel<-subset(all_cgfs1, 
                                     select=c(Survey_Acronym, HaulID, SpeciesSciName,
                                              FishLenght_cm, IndivFishWgt_g, Number,
                                              DensAbund_N_Sqkm, DensBiom_kg_Sqkm))

summary(as.factor(bio_dat_french_channel$Survey_Acronym))
  #"GNSFraOT4"
GNSFraOT4_LD<-bio_dat_french_channel

write.csv(GNSFraOT4_LD, "Bio_info_GNSFraOT4_LD_01-07-2016.csv")
